import {
  DateTimePicker
} from "./chunk-YORF5TUS.js";
import {
  LocalizationProvider
} from "./chunk-ZTFCR557.js";
import {
  ButtonGroup_default,
  Checkbox_default,
  DialogTitle_default,
  Drawer_default,
  FormControlLabel_default,
  Grid_default,
  RadioGroup_default,
  Radio_default,
  TableBody_default,
  TableCell_default,
  TableHead_default,
  TableRow_default,
  Table_default,
  Toolbar_default,
  colors_exports
} from "./chunk-T2JC5NPR.js";
import "./chunk-QTSYZFFB.js";
import {
  MenuItem_default
} from "./chunk-QCA2YNQA.js";
import {
  Button_default,
  Chip_default,
  DialogActions_default,
  DialogContent_default,
  Dialog_default,
  IconButton_default,
  OutlinedInput_default,
  Popover_default,
  Select_default,
  TextField_default,
  Typography_default
} from "./chunk-RCNKLH2T.js";
import "./chunk-43MWZFP5.js";
import {
  createSvgIcon,
  init_utils
} from "./chunk-XYASIMDM.js";
import {
  alpha,
  darken,
  lighten
} from "./chunk-Y3HFPBNK.js";
import "./chunk-2UH2JP76.js";
import "./chunk-D7ZASVPN.js";
import {
  styled_default
} from "./chunk-6QF2BJTO.js";
import {
  _extends,
  init_extends
} from "./chunk-47S77ZDT.js";
import {
  require_jsx_runtime
} from "./chunk-YPGNGA4Z.js";
import {
  AUTO_HEIGHT,
  AllDayPanel,
  AppointmentForm,
  AppointmentTooltip,
  Appointments,
  CANCEL_BUTTON,
  CLOSE_COMMAND_BUTTON,
  ConfirmationDialog,
  CurrentTimeIndicator,
  DAY_OPTIONS,
  DAY_SHORT_MONTH_OPTIONS,
  DELETE_BUTTON,
  DELETE_COMMAND_BUTTON,
  DateNavigator,
  DayView,
  DragDropProvider,
  END_REPEAT_RADIO_GROUP,
  EditRecurrenceMenu,
  GroupingPanel,
  HORIZONTAL_GROUP_ORIENTATION,
  HORIZONTAL_TYPE,
  HOUR_MINUTE_OPTIONS,
  MONTHLY_RADIO_GROUP,
  MONTH_YEAR_OPTIONS,
  MULTILINE_TEXT_EDITOR,
  MonthView,
  NUMBER_EDITOR,
  OPEN_COMMAND_BUTTON,
  ORDINARY_LABEL,
  ORDINARY_TEXT_EDITOR,
  OUTLINED_SELECT,
  POSITION_END,
  POSITION_START,
  REPEAT_TYPES,
  RRULE_REPEAT_TYPES,
  Resources,
  SAVE_BUTTON,
  STANDARD_SELECT,
  Scheduler,
  TITLE,
  TITLE_TEXT_EDITOR,
  TodayButton,
  Toolbar,
  VERTICAL_GROUP_ORIENTATION,
  VERTICAL_TYPE,
  VIEW_TYPES,
  ViewSwitcher,
  WEEKDAY_INTERVAL,
  WEEK_DAY_OPTIONS,
  WeekView,
  YEARLY_RADIO_GROUP,
  areDatesSame,
  changeRecurrenceOptions,
  checkIsNaturalNumber,
  getAvailableRecurrenceOptions,
  getCellKey,
  getDayScaleCells,
  getDaysOfWeek,
  getDaysOfWeekArray,
  getDaysOfWeekDates,
  getFrequencyString,
  getGroupsLastRow,
  getLabelsForAllGroups,
  getMonths,
  getMonthsWithOf,
  getRadioGroupDisplayData,
  getRecurrenceOptions,
  getRowFromGroups,
  getVerticalRowFromGroups,
  getWeekNumberLabels,
  handleChangeFrequency,
  handleStartDateChange,
  handleToDayOfWeekChange,
  handleWeekDaysChange,
  isDateValid,
  moment_default,
  navigateByOneMonth,
  prepareVerticalViewCellsData,
  viewBoundText,
  withComponents
} from "./chunk-XS6QYDD7.js";
import "./chunk-7I7T2IKX.js";
import {
  require_prop_types
} from "./chunk-6OERTC5N.js";
import {
  require_react
} from "./chunk-NKBGLYTV.js";
import {
  __toESM
} from "./chunk-PLDDJCW6.js";

// node_modules/@devexpress/dx-react-scheduler-material-ui/dist/dx-react-scheduler-material-ui.es.js
var import_react = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/clsx/dist/clsx.m.js
function r(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e) n += e;
  else if ("object" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
  else for (t in e) e[t] && (n && (n += " "), n += t);
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = ""; f < arguments.length; ) (e = arguments[f++]) && (t = r(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_m_default = clsx;

// node_modules/@mui/icons-material/esm/utils/createSvgIcon.js
init_utils();

// node_modules/@mui/icons-material/esm/Repeat.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var Repeat_default = createSvgIcon((0, import_jsx_runtime.jsx)("path", {
  d: "M7 7h10v3l4-4-4-4v3H5v6h2zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2z"
}), "Repeat");

// node_modules/@mui/icons-material/esm/CalendarToday.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var CalendarToday_default = createSvgIcon((0, import_jsx_runtime2.jsx)("path", {
  d: "M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 18H4V8h16z"
}), "CalendarToday");

// node_modules/@mui/icons-material/esm/ChevronLeft.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var ChevronLeft_default = createSvgIcon((0, import_jsx_runtime3.jsx)("path", {
  d: "M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "ChevronLeft");

// node_modules/@mui/icons-material/esm/ChevronRight.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var ChevronRight_default = createSvgIcon((0, import_jsx_runtime4.jsx)("path", {
  d: "M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "ChevronRight");

// node_modules/@mui/icons-material/esm/AccessTime.js
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var AccessTime_default = createSvgIcon([(0, import_jsx_runtime5.jsx)("path", {
  d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8"
}, "0"), (0, import_jsx_runtime5.jsx)("path", {
  d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
}, "1")], "AccessTime");

// node_modules/@mui/icons-material/esm/Lens.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var Lens_default = createSvgIcon((0, import_jsx_runtime6.jsx)("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2"
}), "Lens");

// node_modules/@mui/icons-material/esm/Edit.js
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var Edit_default = createSvgIcon((0, import_jsx_runtime7.jsx)("path", {
  d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z"
}), "Edit");

// node_modules/@mui/icons-material/esm/Close.js
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var Close_default = createSvgIcon((0, import_jsx_runtime8.jsx)("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close");

// node_modules/@mui/icons-material/esm/Delete.js
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var Delete_default = createSvgIcon((0, import_jsx_runtime9.jsx)("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z"
}), "Delete");

// node_modules/@mui/x-date-pickers/AdapterMoment/AdapterMoment.js
init_extends();
var formatTokenMap = {
  // Year
  Y: "year",
  YY: "year",
  YYYY: {
    sectionType: "year",
    contentType: "digit",
    maxLength: 4
  },
  // Month
  M: {
    sectionType: "month",
    contentType: "digit",
    maxLength: 2
  },
  MM: "month",
  MMM: {
    sectionType: "month",
    contentType: "letter"
  },
  MMMM: {
    sectionType: "month",
    contentType: "letter"
  },
  // Day of the month
  D: {
    sectionType: "day",
    contentType: "digit",
    maxLength: 2
  },
  DD: "day",
  Do: {
    sectionType: "day",
    contentType: "digit-with-letter"
  },
  // Day of the week
  E: {
    sectionType: "weekDay",
    contentType: "digit",
    maxLength: 1
  },
  e: {
    sectionType: "weekDay",
    contentType: "digit",
    maxLength: 1
  },
  d: {
    sectionType: "weekDay",
    contentType: "digit",
    maxLength: 1
  },
  dd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  ddd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  dddd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  // Meridiem
  A: "meridiem",
  a: "meridiem",
  // Hours
  H: {
    sectionType: "hours",
    contentType: "digit",
    maxLength: 2
  },
  HH: "hours",
  h: {
    sectionType: "hours",
    contentType: "digit",
    maxLength: 2
  },
  hh: "hours",
  // Minutes
  m: {
    sectionType: "minutes",
    contentType: "digit",
    maxLength: 2
  },
  mm: "minutes",
  // Seconds
  s: {
    sectionType: "seconds",
    contentType: "digit",
    maxLength: 2
  },
  ss: "seconds"
};
var defaultFormats = {
  year: "YYYY",
  month: "MMMM",
  monthShort: "MMM",
  dayOfMonth: "D",
  dayOfMonthFull: "Do",
  weekday: "dddd",
  weekdayShort: "ddd",
  hours24h: "HH",
  hours12h: "hh",
  meridiem: "A",
  minutes: "mm",
  seconds: "ss",
  fullDate: "ll",
  keyboardDate: "L",
  shortDate: "MMM D",
  normalDate: "D MMMM",
  normalDateWithWeekday: "ddd, MMM D",
  fullTime: "LT",
  fullTime12h: "hh:mm A",
  fullTime24h: "HH:mm",
  keyboardDateTime: "L LT",
  keyboardDateTime12h: "L hh:mm A",
  keyboardDateTime24h: "L HH:mm"
};
var MISSING_TIMEZONE_PLUGIN = ["Missing timezone plugin", "To be able to use timezones, you have to pass the default export from `moment-timezone` to the `dateLibInstance` prop of `LocalizationProvider`", "Find more information on https://mui.com/x/react-date-pickers/timezone/#moment-and-timezone"].join("\n");
var AdapterMoment = class {
  constructor({
    locale,
    formats,
    instance
  } = {}) {
    this.isMUIAdapter = true;
    this.isTimezoneCompatible = true;
    this.lib = "moment";
    this.moment = void 0;
    this.locale = void 0;
    this.formats = void 0;
    this.escapedCharacters = {
      start: "[",
      end: "]"
    };
    this.formatTokenMap = formatTokenMap;
    this.setLocaleToValue = (value) => {
      const expectedLocale = this.getCurrentLocaleCode();
      if (expectedLocale === value.locale()) {
        return value;
      }
      return value.locale(expectedLocale);
    };
    this.hasTimezonePlugin = () => typeof this.moment.tz !== "undefined";
    this.createSystemDate = (value) => {
      const parsedValue = this.moment(value).local();
      if (this.locale === void 0) {
        return parsedValue;
      }
      return parsedValue.locale(this.locale);
    };
    this.createUTCDate = (value) => {
      const parsedValue = this.moment.utc(value);
      if (this.locale === void 0) {
        return parsedValue;
      }
      return parsedValue.locale(this.locale);
    };
    this.createTZDate = (value, timezone) => {
      if (!this.hasTimezonePlugin()) {
        throw new Error(MISSING_TIMEZONE_PLUGIN);
      }
      const parsedValue = timezone === "default" ? this.moment(value) : this.moment.tz(value, timezone);
      if (this.locale === void 0) {
        return parsedValue;
      }
      return parsedValue.locale(this.locale);
    };
    this.date = (value, timezone = "default") => {
      if (value === null) {
        return null;
      }
      if (timezone === "UTC") {
        return this.createUTCDate(value);
      }
      if (timezone === "system" || timezone === "default" && !this.hasTimezonePlugin()) {
        return this.createSystemDate(value);
      }
      return this.createTZDate(value, timezone);
    };
    this.getInvalidDate = () => this.moment(/* @__PURE__ */ new Date("Invalid Date"));
    this.getTimezone = (value) => {
      var _a, _b;
      const zone = (_a = value._z) == null ? void 0 : _a.name;
      const defaultZone = value.isUTC() ? "UTC" : "system";
      return zone ?? ((_b = this.moment.defaultZone) == null ? void 0 : _b.name) ?? defaultZone;
    };
    this.setTimezone = (value, timezone) => {
      var _a;
      if (this.getTimezone(value) === timezone) {
        return value;
      }
      if (timezone === "UTC") {
        return value.clone().utc();
      }
      if (timezone === "system") {
        return value.clone().local();
      }
      if (!this.hasTimezonePlugin()) {
        if (timezone !== "default") {
          throw new Error(MISSING_TIMEZONE_PLUGIN);
        }
        return value;
      }
      const cleanZone = timezone === "default" ? (
        // @ts-ignore
        ((_a = this.moment.defaultZone) == null ? void 0 : _a.name) ?? "system"
      ) : timezone;
      if (cleanZone === "system") {
        return value.clone().local();
      }
      const newValue = value.clone();
      newValue.tz(cleanZone);
      return newValue;
    };
    this.toJsDate = (value) => {
      return value.toDate();
    };
    this.parse = (value, format) => {
      if (value === "") {
        return null;
      }
      if (this.locale) {
        return this.moment(value, format, this.locale, true);
      }
      return this.moment(value, format, true);
    };
    this.getCurrentLocaleCode = () => {
      return this.locale || moment_default.locale();
    };
    this.is12HourCycleInCurrentLocale = () => {
      return /A|a/.test(moment_default.localeData(this.getCurrentLocaleCode()).longDateFormat("LT"));
    };
    this.expandFormat = (format) => {
      const localFormattingTokens = /(\[[^[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})|./g;
      return format.match(localFormattingTokens).map((token) => {
        const firstCharacter = token[0];
        if (firstCharacter === "L" || firstCharacter === ";") {
          return moment_default.localeData(this.getCurrentLocaleCode()).longDateFormat(token);
        }
        return token;
      }).join("");
    };
    this.isValid = (value) => {
      if (value == null) {
        return false;
      }
      return value.isValid();
    };
    this.format = (value, formatKey) => {
      return this.formatByString(value, this.formats[formatKey]);
    };
    this.formatByString = (value, formatString) => {
      const clonedDate = value.clone();
      clonedDate.locale(this.getCurrentLocaleCode());
      return clonedDate.format(formatString);
    };
    this.formatNumber = (numberToFormat) => {
      return numberToFormat;
    };
    this.isEqual = (value, comparing) => {
      if (value === null && comparing === null) {
        return true;
      }
      if (value === null || comparing === null) {
        return false;
      }
      return value.isSame(comparing);
    };
    this.isSameYear = (value, comparing) => {
      return value.isSame(comparing, "year");
    };
    this.isSameMonth = (value, comparing) => {
      return value.isSame(comparing, "month");
    };
    this.isSameDay = (value, comparing) => {
      return value.isSame(comparing, "day");
    };
    this.isSameHour = (value, comparing) => {
      return value.isSame(comparing, "hour");
    };
    this.isAfter = (value, comparing) => {
      return value.isAfter(comparing);
    };
    this.isAfterYear = (value, comparing) => {
      return value.isAfter(comparing, "year");
    };
    this.isAfterDay = (value, comparing) => {
      return value.isAfter(comparing, "day");
    };
    this.isBefore = (value, comparing) => {
      return value.isBefore(comparing);
    };
    this.isBeforeYear = (value, comparing) => {
      return value.isBefore(comparing, "year");
    };
    this.isBeforeDay = (value, comparing) => {
      return value.isBefore(comparing, "day");
    };
    this.isWithinRange = (value, [start, end]) => {
      return value.isBetween(start, end, null, "[]");
    };
    this.startOfYear = (value) => {
      return value.clone().startOf("year");
    };
    this.startOfMonth = (value) => {
      return value.clone().startOf("month");
    };
    this.startOfWeek = (value) => {
      return value.clone().startOf("week");
    };
    this.startOfDay = (value) => {
      return value.clone().startOf("day");
    };
    this.endOfYear = (value) => {
      return value.clone().endOf("year");
    };
    this.endOfMonth = (value) => {
      return value.clone().endOf("month");
    };
    this.endOfWeek = (value) => {
      return value.clone().endOf("week");
    };
    this.endOfDay = (value) => {
      return value.clone().endOf("day");
    };
    this.addYears = (value, amount) => {
      return amount < 0 ? value.clone().subtract(Math.abs(amount), "years") : value.clone().add(amount, "years");
    };
    this.addMonths = (value, amount) => {
      return amount < 0 ? value.clone().subtract(Math.abs(amount), "months") : value.clone().add(amount, "months");
    };
    this.addWeeks = (value, amount) => {
      return amount < 0 ? value.clone().subtract(Math.abs(amount), "weeks") : value.clone().add(amount, "weeks");
    };
    this.addDays = (value, amount) => {
      return amount < 0 ? value.clone().subtract(Math.abs(amount), "days") : value.clone().add(amount, "days");
    };
    this.addHours = (value, amount) => {
      return amount < 0 ? value.clone().subtract(Math.abs(amount), "hours") : value.clone().add(amount, "hours");
    };
    this.addMinutes = (value, amount) => {
      return amount < 0 ? value.clone().subtract(Math.abs(amount), "minutes") : value.clone().add(amount, "minutes");
    };
    this.addSeconds = (value, amount) => {
      return amount < 0 ? value.clone().subtract(Math.abs(amount), "seconds") : value.clone().add(amount, "seconds");
    };
    this.getYear = (value) => {
      return value.get("year");
    };
    this.getMonth = (value) => {
      return value.get("month");
    };
    this.getDate = (value) => {
      return value.get("date");
    };
    this.getHours = (value) => {
      return value.get("hours");
    };
    this.getMinutes = (value) => {
      return value.get("minutes");
    };
    this.getSeconds = (value) => {
      return value.get("seconds");
    };
    this.getMilliseconds = (value) => {
      return value.get("milliseconds");
    };
    this.setYear = (value, year) => {
      return value.clone().year(year);
    };
    this.setMonth = (value, month) => {
      return value.clone().month(month);
    };
    this.setDate = (value, date) => {
      return value.clone().date(date);
    };
    this.setHours = (value, hours) => {
      return value.clone().hours(hours);
    };
    this.setMinutes = (value, minutes) => {
      return value.clone().minutes(minutes);
    };
    this.setSeconds = (value, seconds) => {
      return value.clone().seconds(seconds);
    };
    this.setMilliseconds = (value, milliseconds) => {
      return value.clone().milliseconds(milliseconds);
    };
    this.getDaysInMonth = (value) => {
      return value.daysInMonth();
    };
    this.getWeekArray = (value) => {
      const cleanValue = this.setLocaleToValue(value);
      const start = this.startOfWeek(this.startOfMonth(cleanValue));
      const end = this.endOfWeek(this.endOfMonth(cleanValue));
      let count = 0;
      let current = start;
      const nestedWeeks = [];
      while (current.isBefore(end)) {
        const weekNumber = Math.floor(count / 7);
        nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];
        nestedWeeks[weekNumber].push(current);
        current = this.addDays(current, 1);
        count += 1;
      }
      return nestedWeeks;
    };
    this.getWeekNumber = (value) => {
      return value.week();
    };
    this.getDayOfWeek = (value) => {
      return value.day() + 1;
    };
    this.moment = instance || moment_default;
    this.locale = locale;
    this.formats = _extends({}, defaultFormats, formats);
  }
  getYearRange([start, end]) {
    const startDate = this.startOfYear(start);
    const endDate = this.endOfYear(end);
    const years = [];
    let current = startDate;
    while (this.isBefore(current, endDate)) {
      years.push(current);
      current = this.addYears(current, 1);
    }
    return years;
  }
};

// node_modules/@devexpress/dx-react-scheduler-material-ui/dist/dx-react-scheduler-material-ui.es.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized(self);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var _excluded = ["children", "className"];
var PREFIX = "Container";
var classes = {
  container: "".concat(PREFIX, "-container")
};
var ContainerBase = function ContainerBase2(_ref) {
  var children = _ref.children, className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded);
  return (0, import_react.createElement)("div", _extends2({
    className: clsx_m_default(classes.container, className)
  }, restProps), children);
};
true ? ContainerBase.propTypes = {
  children: import_prop_types.default.node.isRequired,
  className: import_prop_types.default.string
} : void 0;
ContainerBase.defaultProps = {
  className: void 0
};
var _excluded$1 = ["height", "style"];
var StyledContainerBase = styled_default(ContainerBase)(_defineProperty({}, "&.".concat(classes.container), {
  WebkitOverflowScrolling: "touch",
  // NOTE: fix sticky positioning in Safari
  width: "100%",
  height: "100%",
  position: "relative",
  display: "flex",
  flexDirection: "column"
}));
var Root = function Root2(_ref) {
  var height = _ref.height, style = _ref.style, restProps = _objectWithoutProperties(_ref, _excluded$1);
  var containerStyle = height === AUTO_HEIGHT ? {
    height: "100%"
  } : {
    height: "".concat(height, "px")
  };
  return (0, import_react.createElement)(StyledContainerBase, _extends2({
    style: _objectSpread2(_objectSpread2({}, containerStyle), style)
  }, restProps));
};
true ? Root.propTypes = {
  height: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]).isRequired,
  style: import_prop_types.default.object
} : void 0;
Root.defaultProps = {
  style: null
};
var _excluded$2 = ["children"];
var Scheduler2 = function Scheduler3(_ref) {
  var children = _ref.children, restProps = _objectWithoutProperties(_ref, _excluded$2);
  return (0, import_react.createElement)(Scheduler, _extends2({
    rootComponent: Root
  }, restProps), children);
};
Scheduler2.Root = Root;
true ? Scheduler2.propTypes = {
  children: import_prop_types.default.node.isRequired
} : void 0;
var _SPACING_CELL_HEIGHT;
var _BASIC_CELL_HEIGHT;
var red = colors_exports.red;
var pink = colors_exports.pink;
var purple = colors_exports.purple;
var deepPurple = colors_exports.deepPurple;
var indigo = colors_exports.indigo;
var blue = colors_exports.blue;
var lightBlue = colors_exports.lightBlue;
var cyan = colors_exports.cyan;
var teal = colors_exports.teal;
var green = colors_exports.green;
var lightGreen = colors_exports.lightGreen;
var lime = colors_exports.lime;
var yellow = colors_exports.yellow;
var amber = colors_exports.amber;
var orange = colors_exports.orange;
var deepOrange = colors_exports.deepOrange;
var PRIMARY_COLOR = blue;
var TRANSITIONS_TIME = 400;
var DEFAULT_PALETTE = [red, pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, yellow, amber, orange, deepOrange];
var XS_CELL_WIDTH = 50;
var SMALL_CELL_WIDTH = 65;
var CELL_WIDTH = 100;
var XS_LAYOUT_WIDTH = 500;
var SMALL_LAYOUT_WIDTH = 700;
var SMALL_LAYOUT_MEDIA_QUERY = "@media (max-width: ".concat(XS_LAYOUT_WIDTH, "px)");
var LAYOUT_MEDIA_QUERY = "@media (max-width: ".concat(SMALL_LAYOUT_WIDTH, "px)");
var GROUPING_PANEL_VERTICAL_CELL_WIDTH = 12.5;
var DEFAULT_SPACING = 8;
var SPACING_CELL_HEIGHT = (_SPACING_CELL_HEIGHT = {}, _defineProperty(_SPACING_CELL_HEIGHT, VIEW_TYPES.MONTH, 12.5), _defineProperty(_SPACING_CELL_HEIGHT, VIEW_TYPES.WEEK, 6), _defineProperty(_SPACING_CELL_HEIGHT, VIEW_TYPES.DAY, 6), _defineProperty(_SPACING_CELL_HEIGHT, VIEW_TYPES.ALL_DAY_PANEL, 5.75), _SPACING_CELL_HEIGHT);
var BASIC_CELL_HEIGHT = (_BASIC_CELL_HEIGHT = {}, _defineProperty(_BASIC_CELL_HEIGHT, VIEW_TYPES.MONTH, SPACING_CELL_HEIGHT[VIEW_TYPES.MONTH] * DEFAULT_SPACING), _defineProperty(_BASIC_CELL_HEIGHT, VIEW_TYPES.WEEK, SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK] * DEFAULT_SPACING), _defineProperty(_BASIC_CELL_HEIGHT, VIEW_TYPES.DAY, SPACING_CELL_HEIGHT[VIEW_TYPES.DAY] * DEFAULT_SPACING), _defineProperty(_BASIC_CELL_HEIGHT, VIEW_TYPES.ALL_DAY_PANEL, SPACING_CELL_HEIGHT[VIEW_TYPES.ALL_DAY_PANEL] * DEFAULT_SPACING), _BASIC_CELL_HEIGHT);
var SPACING_LABEL_HEIGHT = SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK];
var LEFT_PANEL_WIDTH_SPACING = 10;
var getBorder = function getBorder2(theme) {
  return "1px solid ".concat(theme.palette.mode === "light" ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68));
};
var getBrightBorder = function getBrightBorder2(theme) {
  return "1px solid ".concat(theme.palette.mode === "light" ? lighten(alpha(theme.palette.divider, 1), 0.72) : darken(alpha(theme.palette.divider, 1), 0.5));
};
var cellsMeta = function cellsMeta2(tableElement) {
  var cellElements = Array.from(tableElement.querySelectorAll("td"));
  return {
    parentRect: function parentRect() {
      return tableElement.getBoundingClientRect();
    },
    getCellRects: cellElements.map(function(element) {
      return function() {
        return element.getBoundingClientRect();
      };
    })
  };
};
var scrollingStrategy = function scrollingStrategy2(scrollablePart, fixedPartVertical, fixedPartHorizontal) {
  var fixedPartVerticalRect = fixedPartVertical.getBoundingClientRect();
  var fixedPartHorizontalRect = fixedPartHorizontal && fixedPartHorizontal.getBoundingClientRect();
  var changeVerticalScroll = function changeVerticalScroll2(value) {
    scrollablePart.scrollTop += value;
  };
  var changeHorizontalScroll = function changeHorizontalScroll2(value) {
    scrollablePart.scrollLeft += value;
  };
  return {
    topBoundary: fixedPartVerticalRect.height + fixedPartVerticalRect.top,
    bottomBoundary: scrollablePart.offsetTop + scrollablePart.clientHeight,
    fixedTopHeight: fixedPartVerticalRect.height,
    leftBoundary: fixedPartHorizontalRect ? fixedPartHorizontalRect.width + fixedPartHorizontalRect.left : scrollablePart.offsetLeft,
    rightBoundary: scrollablePart.offsetLeft + scrollablePart.clientWidth,
    fixedLeftWidth: fixedPartHorizontalRect === null || fixedPartHorizontalRect === void 0 ? void 0 : fixedPartHorizontalRect.width,
    changeVerticalScroll,
    changeHorizontalScroll
  };
};
var ensureColor = function ensureColor2(level, color) {
  return color[level] || PRIMARY_COLOR[level];
};
var getResourceColor = function getResourceColor2(resources) {
  if (resources && resources.length) {
    var _resources$find;
    return (_resources$find = resources.find(function(resource) {
      return resource.isMain;
    })) === null || _resources$find === void 0 ? void 0 : _resources$find.color;
  }
  return void 0;
};
var getAppointmentColor = function getAppointmentColor2(level, color, defaultColor) {
  if (!color) return ensureColor(level, defaultColor);
  if (typeof color === "string") return color;
  return ensureColor(level, color);
};
var getWidthInPixels = function getWidthInPixels2(cellsNumber, cellWidth) {
  return "".concat(cellsNumber * cellWidth, "px");
};
var getViewCellKey = function getViewCellKey2(startDate, groups) {
  if (!groups) return startDate.toString();
  return groups.reduce(function(acc, group) {
    return acc.concat(group.id);
  }, startDate.toString());
};
var addCommaAndSpaceToString = function addCommaAndSpaceToString2(string) {
  return string && "".concat(string, ", ");
};
var getEmptyCellWidth = function getEmptyCellWidth2(theme, width, calculatedWidth) {
  return width ? "".concat(width, "px") : "calc(".concat(theme.spacing(calculatedWidth), " + 1px)");
};
var _excluded$3 = ["timeScaleComponent", "dayScaleComponent", "timeTableComponent", "dayScaleEmptyCellComponent", "groupingPanelComponent", "groupingPanelSize", "setScrollingStrategy", "className", "forwardedRef"];
var PREFIX$1 = "MainLayout";
var classes$1 = {
  container: "".concat(PREFIX$1, "-container"),
  stickyElement: "".concat(PREFIX$1, "-stickyElement"),
  header: "".concat(PREFIX$1, "-header"),
  leftPanel: "".concat(PREFIX$1, "-leftPanel"),
  ordinaryLeftPanelBorder: "".concat(PREFIX$1, "-ordinaryLeftPanelBorder"),
  brightLeftPanelBorder: "".concat(PREFIX$1, "-brightLeftPanelBorder"),
  ordinaryHeaderBorder: "".concat(PREFIX$1, "-ordinaryHeaderBorder"),
  brightHeaderBorder: "".concat(PREFIX$1, "-brightHeaderBorder"),
  dayScaleEmptyCell: "".concat(PREFIX$1, "-dayScaleEmptyCell"),
  flexRow: "".concat(PREFIX$1, "-flexRow"),
  relativeContainer: "".concat(PREFIX$1, "-relativeContainer"),
  inlineFlex: "".concat(PREFIX$1, "-inlineFlex"),
  background: "".concat(PREFIX$1, "-background")
};
var StyledDiv = styled_default("div", {
  shouldForwardProp: function shouldForwardProp(prop) {
    return prop !== "leftPanelWidth" && prop !== "calculatedLeftPanelWidth";
  }
})(function(_ref) {
  var _ref2;
  var theme = _ref.theme, leftPanelWidth = _ref.leftPanelWidth, calculatedLeftPanelWidth = _ref.calculatedLeftPanelWidth;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$1.container), {
    overflowY: "auto",
    position: "relative",
    tableLayout: "fixed"
  }), _defineProperty(_ref2, "& .".concat(classes$1.stickyElement), {
    tableLayout: "fixed",
    position: "sticky",
    overflow: "visible",
    background: theme.palette.background.paper
  }), _defineProperty(_ref2, "& .".concat(classes$1.header), {
    top: 0,
    zIndex: 2
  }), _defineProperty(_ref2, "& .".concat(classes$1.leftPanel), {
    left: 0,
    zIndex: 1,
    boxSizing: "border-box"
  }), _defineProperty(_ref2, "& .".concat(classes$1.ordinaryLeftPanelBorder), {
    borderRight: getBorder(theme)
  }), _defineProperty(_ref2, "& .".concat(classes$1.brightLeftPanelBorder), {
    borderRight: getBrightBorder(theme)
  }), _defineProperty(_ref2, "& .".concat(classes$1.ordinaryHeaderBorder), {
    borderBottom: getBorder(theme)
  }), _defineProperty(_ref2, "& .".concat(classes$1.brightHeaderBorder), {
    borderBottom: getBrightBorder(theme)
  }), _defineProperty(_ref2, "& .".concat(classes$1.dayScaleEmptyCell), {
    display: "flex",
    alignItems: "flex-end",
    width: getEmptyCellWidth(theme, leftPanelWidth, calculatedLeftPanelWidth),
    minWidth: getEmptyCellWidth(theme, leftPanelWidth, calculatedLeftPanelWidth)
  }), _defineProperty(_ref2, "& .".concat(classes$1.flexRow), {
    display: "flex",
    flexDirection: "row"
  }), _defineProperty(_ref2, "& .".concat(classes$1.relativeContainer), {
    position: "relative"
  }), _defineProperty(_ref2, "& .".concat(classes$1.inlineFlex), {
    display: "inline-flex"
  }), _defineProperty(_ref2, "& .".concat(classes$1.background), {
    background: theme.palette.background.paper
  }), _ref2;
});
var MainLayout = (0, import_react.memo)(function(_ref3) {
  var _classNames, _classNames2, _classNames3;
  var TimeScale = _ref3.timeScaleComponent, DayScale = _ref3.dayScaleComponent, TimeTable = _ref3.timeTableComponent, DayScaleEmptyCell3 = _ref3.dayScaleEmptyCellComponent, GroupingPanel3 = _ref3.groupingPanelComponent, groupingPanelSize = _ref3.groupingPanelSize, setScrollingStrategy = _ref3.setScrollingStrategy, className = _ref3.className, forwardedRef = _ref3.forwardedRef, restProps = _objectWithoutProperties(_ref3, _excluded$3);
  var layoutRef = (0, import_react.useRef)(null);
  var layoutHeaderRef = (0, import_react.useRef)(null);
  var leftPanelRef = (0, import_react.useRef)(null);
  var _React$useState = (0, import_react.useState)(false), _React$useState2 = _slicedToArray(_React$useState, 2), isLeftBorderSet = _React$useState2[0], setIsLeftBorderSet = _React$useState2[1];
  var _React$useState3 = (0, import_react.useState)(false), _React$useState4 = _slicedToArray(_React$useState3, 2), isTopBorderSet = _React$useState4[0], setIsTopBorderSet = _React$useState4[1];
  var _React$useState5 = (0, import_react.useState)(0), _React$useState6 = _slicedToArray(_React$useState5, 2), leftPanelWidth = _React$useState6[0], setLeftPanelWidth = _React$useState6[1];
  (0, import_react.useEffect)(function() {
    var leftPanel = leftPanelRef.current;
    setScrollingStrategy(scrollingStrategy(layoutRef.current, layoutHeaderRef.current, leftPanel));
    leftPanel && setLeftPanelWidth(leftPanel.getBoundingClientRect().width);
  }, [layoutRef, layoutHeaderRef, leftPanelRef, setScrollingStrategy, setLeftPanelWidth]);
  var renderTimeScale = !!TimeScale;
  var renderLeftPanel = renderTimeScale || !!groupingPanelSize;
  var calculatedGroupPanelWidth = groupingPanelSize ? groupingPanelSize * GROUPING_PANEL_VERTICAL_CELL_WIDTH : 0;
  var calculatedLeftPanelWidth = LEFT_PANEL_WIDTH_SPACING + calculatedGroupPanelWidth;
  var setBorders = (0, import_react.useCallback)(function(event) {
    if (!!event.target.scrollLeft ^ isLeftBorderSet) {
      setIsLeftBorderSet(!isLeftBorderSet);
    }
    if (!!event.target.scrollTop ^ isTopBorderSet) {
      setIsTopBorderSet(!isTopBorderSet);
    }
  }, [isLeftBorderSet, isTopBorderSet]);
  return (0, import_react.createElement)(StyledDiv, _extends2({
    leftPanelWidth,
    calculatedLeftPanelWidth,
    ref: function ref(node) {
      layoutRef.current = node;
      if (typeof forwardedRef === "function") {
        forwardedRef(node);
      } else if (forwardedRef) {
        forwardedRef.current = node;
      }
    },
    className: clsx_m_default(classes$1.container, className),
    onScroll: setBorders
  }, restProps), (0, import_react.createElement)("div", null, (0, import_react.createElement)("div", {
    ref: layoutHeaderRef,
    className: clsx_m_default(classes$1.stickyElement, classes$1.header, classes$1.flexRow)
  }, (0, import_react.createElement)("div", {
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$1.background, true), _defineProperty(_classNames, classes$1.inlineFlex, true), _defineProperty(_classNames, classes$1.ordinaryHeaderBorder, !isTopBorderSet), _defineProperty(_classNames, classes$1.brightHeaderBorder, isTopBorderSet), _classNames))
  }, renderLeftPanel && (0, import_react.createElement)("div", {
    className: clsx_m_default((_classNames2 = {}, _defineProperty(_classNames2, classes$1.stickyElement, true), _defineProperty(_classNames2, classes$1.leftPanel, true), _defineProperty(_classNames2, classes$1.dayScaleEmptyCell, true), _defineProperty(_classNames2, classes$1.ordinaryLeftPanelBorder, !isLeftBorderSet), _defineProperty(_classNames2, classes$1.brightLeftPanelBorder, isLeftBorderSet), _classNames2))
  }, (0, import_react.createElement)(DayScaleEmptyCell3, null)), (0, import_react.createElement)("div", null, (0, import_react.createElement)(DayScale, null)))), (0, import_react.createElement)("div", {
    className: classes$1.flexRow
  }, (0, import_react.createElement)("div", {
    className: classes$1.inlineFlex
  }, renderLeftPanel && (0, import_react.createElement)("div", {
    ref: leftPanelRef,
    className: clsx_m_default((_classNames3 = {}, _defineProperty(_classNames3, classes$1.flexRow, true), _defineProperty(_classNames3, classes$1.stickyElement, true), _defineProperty(_classNames3, classes$1.leftPanel, true), _defineProperty(_classNames3, classes$1.ordinaryLeftPanelBorder, !isLeftBorderSet), _defineProperty(_classNames3, classes$1.brightLeftPanelBorder, isLeftBorderSet), _classNames3))
  }, (0, import_react.createElement)(GroupingPanel3, null), renderTimeScale && (0, import_react.createElement)(TimeScale, null)), (0, import_react.createElement)("div", {
    className: classes$1.relativeContainer
  }, (0, import_react.createElement)(TimeTable, null))))));
});
true ? MainLayout.propTypes = {
  // oneOfType is a workaround because withStyles returns react object
  timeScaleComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
  dayScaleComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  timeTableComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  dayScaleEmptyCellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  groupingPanelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
  groupingPanelSize: import_prop_types.default.number,
  setScrollingStrategy: import_prop_types.default.func.isRequired,
  className: import_prop_types.default.string,
  forwardedRef: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
} : void 0;
MainLayout.defaultProps = {
  groupingPanelComponent: function groupingPanelComponent() {
    return null;
  },
  timeScaleComponent: void 0,
  groupingPanelSize: 0,
  className: void 0,
  forwardedRef: void 0
};
var _excluded$4 = ["children"];
var Row = function Row2(_ref) {
  var children = _ref.children, restProps = _objectWithoutProperties(_ref, _excluded$4);
  return (0, import_react.createElement)(TableRow_default, restProps, children);
};
true ? Row.propTypes = {
  children: import_prop_types.default.node
} : void 0;
Row.defaultProps = {
  children: null
};
var _excluded$5 = ["className", "children"];
var PREFIX$2 = "DayScaleEmptyCell";
var classes$2 = {
  emptyCell: "".concat(PREFIX$2, "-emptyCell")
};
var StyledDiv$1 = styled_default("div")(_defineProperty({}, "&.".concat(classes$2.emptyCell), {
  height: "100%",
  width: "100%"
}));
var DayScaleEmptyCell = function DayScaleEmptyCell2(_ref) {
  var className = _ref.className, children = _ref.children, restProps = _objectWithoutProperties(_ref, _excluded$5);
  return (0, import_react.createElement)(StyledDiv$1, _extends2({}, restProps, {
    className: clsx_m_default(classes$2.emptyCell, className)
  }), children);
};
true ? DayScaleEmptyCell.propTypes = {
  className: import_prop_types.default.string,
  children: import_prop_types.default.node
} : void 0;
DayScaleEmptyCell.defaultProps = {
  className: void 0,
  children: void 0
};
var Container = styled_default(ContainerBase)(_defineProperty({}, "&.".concat(classes.container), {
  position: "absolute",
  width: "100%",
  top: 0,
  left: 0
}));
var _excluded$6 = ["cellComponent", "rowComponent", "cellsData", "groupOrientation", "className", "groupCount", "includeAllDayCell"];
var PREFIX$3 = "TicksLayout";
var classes$3 = {
  table: "".concat(PREFIX$3, "-table")
};
var StyledTable = styled_default(Table_default)(_defineProperty({}, "&.".concat(classes$3.table), {
  tableLayout: "fixed",
  boxSizing: "border-box"
}));
var TicksLayout = function TicksLayout2(_ref) {
  var Cell7 = _ref.cellComponent, Row4 = _ref.rowComponent, cellsData = _ref.cellsData, groupOrientation = _ref.groupOrientation, className = _ref.className, groupCount = _ref.groupCount, includeAllDayCell = _ref.includeAllDayCell, restProps = _objectWithoutProperties(_ref, _excluded$6);
  var groupHeight = cellsData.length / groupCount;
  return (0, import_react.createElement)(StyledTable, _extends2({}, restProps, {
    className: clsx_m_default(classes$3.table, className)
  }), (0, import_react.createElement)(TableBody_default, null, cellsData.map(function(_ref2, index) {
    var _ref3 = _slicedToArray(_ref2, 1), firstDay = _ref3[0];
    return (0, import_react.createElement)(import_react.Fragment, {
      key: index.toString()
    }, index % groupHeight === 0 && includeAllDayCell && (0, import_react.createElement)(Row4, {
      key: (index / groupHeight).toString()
    }, (0, import_react.createElement)(Cell7, {
      key: "all-day-tick ".concat(index / groupHeight),
      isAllDay: true,
      startDate: firstDay.startDate,
      endDate: firstDay.endDate,
      endOfGroup: false,
      groupingInfo: firstDay.groupingInfo
    })), (0, import_react.createElement)(Row4, {
      key: (firstDay.startDate + index).toString()
    }, (0, import_react.createElement)(Cell7, {
      key: index.toString(),
      startDate: firstDay.startDate,
      endDate: firstDay.endDate,
      endOfGroup: firstDay.endOfGroup && groupOrientation === VERTICAL_GROUP_ORIENTATION,
      groupingInfo: firstDay.groupingInfo
    })));
  })));
};
true ? TicksLayout.propTypes = {
  cellsData: import_prop_types.default.arrayOf(Array).isRequired,
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  groupOrientation: import_prop_types.default.oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION]),
  groupCount: import_prop_types.default.number,
  includeAllDayCell: import_prop_types.default.bool,
  className: import_prop_types.default.string
} : void 0;
TicksLayout.defaultProps = {
  className: void 0,
  groupOrientation: HORIZONTAL_GROUP_ORIENTATION,
  groupCount: 1,
  includeAllDayCell: false
};
var _excluded$7 = ["labelComponent", "rowComponent", "tickCellComponent", "allDayTitleComponent", "cellsData", "formatDate", "groupOrientation", "groups", "showAllDayTitle", "height", "className"];
var PREFIX$4 = "Layout";
var classes$4 = {
  timeScaleContainer: "".concat(PREFIX$4, "-timeScaleContainer"),
  ticks: "".concat(PREFIX$4, "-ticks"),
  cell: "".concat(PREFIX$4, "-cell"),
  verticalCell: "".concat(PREFIX$4, "-verticalCell"),
  flexRow: "".concat(PREFIX$4, "-flexRow")
};
var StyledDiv$2 = styled_default("div", {
  shouldForwardProp: function shouldForwardProp2(prop) {
    return prop !== "height" && prop !== "defaultHeight";
  }
})(function(_ref) {
  var _ref2;
  var theme = _ref.theme, height = _ref.height, defaultHeight = _ref.defaultHeight;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$4.timeScaleContainer), {
    width: theme.spacing(LEFT_PANEL_WIDTH_SPACING - 1)
  }), _defineProperty(_ref2, "& .".concat(classes$4.ticks), {
    width: theme.spacing(1)
  }), _defineProperty(_ref2, "& .".concat(classes$4.cell), {
    boxSizing: "border-box",
    padding: 0,
    borderBottom: "none"
  }), _defineProperty(_ref2, "& .".concat(classes$4.verticalCell), {
    borderBottom: getBrightBorder(theme),
    "tr:last-child &": {
      borderBottom: "none"
    },
    height: height ? "".concat(height, "px") : theme.spacing(defaultHeight)
  }), _defineProperty(_ref2, "&.".concat(classes$4.flexRow), {
    display: "flex",
    flexDirection: "row"
  }), _ref2;
});
var Layout = function Layout2(_ref3) {
  var Label3 = _ref3.labelComponent, rowComponent = _ref3.rowComponent, tickCellComponent = _ref3.tickCellComponent, AllDayTitle = _ref3.allDayTitleComponent, cellsData = _ref3.cellsData, formatDate3 = _ref3.formatDate, groupOrientation = _ref3.groupOrientation, groups = _ref3.groups, showAllDayTitle = _ref3.showAllDayTitle, height = _ref3.height, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$7);
  var groupCount = getGroupsLastRow(groups).length;
  var cellsCount = cellsData.length / groupCount;
  var heightWithoutAllDayTitle = SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK] * cellsCount;
  var defaultHeight = showAllDayTitle ? heightWithoutAllDayTitle + SPACING_CELL_HEIGHT[VIEW_TYPES.ALL_DAY_PANEL] : heightWithoutAllDayTitle;
  var calculatedHeight = height / groupCount;
  return (0, import_react.createElement)(StyledDiv$2, _extends2({
    height: calculatedHeight,
    defaultHeight,
    className: clsx_m_default(classes$4.flexRow, className)
  }, restProps), (0, import_react.createElement)(Table_default, {
    className: classes$4.timeScaleContainer
  }, (0, import_react.createElement)(TableBody_default, null, getLabelsForAllGroups(cellsData, groups, groupOrientation).map(function(groupedLabels, groupIndex) {
    var _classNames;
    var firstDataLabel = groupedLabels[0];
    var lastDataLabel = groupedLabels[groupedLabels.length - 1];
    return (0, import_react.createElement)(TableRow_default, {
      key: groupIndex.toString()
    }, (0, import_react.createElement)(TableCell_default, {
      className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$4.cell, true), _defineProperty(_classNames, classes$4.verticalCell, groupOrientation === VERTICAL_GROUP_ORIENTATION), _classNames))
    }, (0, import_react.createElement)(AllDayTitle, {
      fixedHeight: true
    }), (0, import_react.createElement)(Label3, {
      key: firstDataLabel.startDate,
      groupingInfo: firstDataLabel.groupingInfo
    }), groupedLabels.map(function(label, index) {
      return index !== cellsData.length - 1 && (0, import_react.createElement)(Label3, {
        time: label.endDate,
        formatDate: formatDate3,
        key: label.key,
        groupingInfo: label.groupingInfo
      });
    }), (0, import_react.createElement)(Label3, {
      key: lastDataLabel.endDate,
      groupingInfo: lastDataLabel.groupingInfo
    })));
  }))), (0, import_react.createElement)(TicksLayout, {
    rowComponent,
    cellComponent: tickCellComponent,
    cellsData,
    className: classes$4.ticks,
    groupOrientation,
    groupCount,
    includeAllDayCell: showAllDayTitle
  }));
};
true ? Layout.propTypes = {
  cellsData: import_prop_types.default.arrayOf(Array).isRequired,
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  allDayTitleComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
  tickCellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  groups: import_prop_types.default.arrayOf(import_prop_types.default.arrayOf(import_prop_types.default.object)),
  groupOrientation: import_prop_types.default.oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION]),
  showAllDayTitle: import_prop_types.default.bool,
  height: import_prop_types.default.number,
  className: import_prop_types.default.string
} : void 0;
Layout.defaultProps = {
  groups: [[{}]],
  groupOrientation: HORIZONTAL_GROUP_ORIENTATION,
  allDayTitleComponent: function allDayTitleComponent() {
    return null;
  },
  showAllDayTitle: false,
  height: 0,
  className: void 0
};
var _excluded$8 = ["className", "time", "formatDate", "groupingInfo", "endOfGroup"];
var PREFIX$5 = "Label";
var classes$5 = {
  label: "".concat(PREFIX$5, "-label"),
  text: "".concat(PREFIX$5, "-text"),
  emptyLabel: "".concat(PREFIX$5, "-emptyLabel")
};
var StyledDiv$3 = styled_default("div")(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$5.label), {
    userSelect: "none",
    border: 0,
    height: theme.spacing(SPACING_LABEL_HEIGHT),
    lineHeight: theme.spacing(SPACING_LABEL_HEIGHT),
    padding: 0,
    overflow: "hidden",
    textOverflow: "ellipsis",
    textAlign: "right",
    paddingLeft: theme.spacing(0.25),
    paddingRight: theme.spacing(1)
  }), _defineProperty(_ref2, "& .".concat(classes$5.text), _objectSpread2(_objectSpread2({}, theme.typography.caption), {}, {
    fontSize: "0.7rem",
    whiteSpace: "nowrap",
    color: theme.palette.text.secondary
  })), _defineProperty(_ref2, "&.".concat(classes$5.emptyLabel), {
    height: theme.spacing(SPACING_LABEL_HEIGHT / 2),
    "&:last-child": {
      height: "calc(".concat(theme.spacing(SPACING_LABEL_HEIGHT / 2), " - 1px)")
    }
  }), _ref2;
});
var Label = function Label2(_ref3) {
  var _classNames;
  var className = _ref3.className, time = _ref3.time, formatDate3 = _ref3.formatDate, groupingInfo = _ref3.groupingInfo, endOfGroup = _ref3.endOfGroup, restProps = _objectWithoutProperties(_ref3, _excluded$8);
  return (0, import_react.createElement)(StyledDiv$3, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$5.label, true), _defineProperty(_classNames, classes$5.emptyLabel, !time), _classNames), className)
  }, restProps), time && (0, import_react.createElement)("span", {
    className: classes$5.text
  }, formatDate3(time, HOUR_MINUTE_OPTIONS)));
};
true ? Label.propTypes = {
  formatDate: import_prop_types.default.func,
  time: import_prop_types.default.instanceOf(Date),
  groupingInfo: import_prop_types.default.arrayOf(import_prop_types.default.object),
  endOfGroup: import_prop_types.default.bool,
  className: import_prop_types.default.string
} : void 0;
Label.defaultProps = {
  className: void 0,
  time: void 0,
  formatDate: function formatDate() {
    return void 0;
  },
  groupingInfo: void 0,
  endOfGroup: false
};
var _excluded$9 = ["className", "startDate", "endDate", "endOfGroup", "groupingInfo", "isAllDay"];
var PREFIX$6 = "TickCell";
var classes$6 = {
  cell: "".concat(PREFIX$6, "-cell"),
  brightBottomBorder: "".concat(PREFIX$6, "-brightBottomBorder"),
  allDayCell: "".concat(PREFIX$6, "-allDayCell")
};
var StyledTableCell = styled_default(TableCell_default)(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$6.cell), {
    height: theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK]),
    padding: 0,
    boxSizing: "border-box",
    borderBottom: getBorder(theme),
    "tr:last-child &": {
      borderBottom: "none"
    }
  }), _defineProperty(_ref2, "&.".concat(classes$6.brightBottomBorder), {
    borderBottom: getBrightBorder(theme)
  }), _defineProperty(_ref2, "&.".concat(classes$6.allDayCell), {
    height: theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.ALL_DAY_PANEL])
  }), _ref2;
});
var TickCell = function TickCell2(_ref3) {
  var _classNames;
  var className = _ref3.className, startDate = _ref3.startDate, endDate = _ref3.endDate, endOfGroup = _ref3.endOfGroup, groupingInfo = _ref3.groupingInfo, isAllDay = _ref3.isAllDay, restProps = _objectWithoutProperties(_ref3, _excluded$9);
  return (0, import_react.createElement)(StyledTableCell, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$6.cell, true), _defineProperty(_classNames, classes$6.brightBottomBorder, endOfGroup), _defineProperty(_classNames, classes$6.allDayCell, isAllDay), _classNames), className)
  }, restProps));
};
true ? TickCell.propTypes = {
  startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  endOfGroup: import_prop_types.default.bool,
  groupingInfo: import_prop_types.default.arrayOf(import_prop_types.default.object),
  isAllDay: import_prop_types.default.bool,
  className: import_prop_types.default.string
} : void 0;
TickCell.defaultProps = {
  className: void 0,
  startDate: void 0,
  endDate: void 0,
  endOfGroup: false,
  groupingInfo: void 0,
  isAllDay: false
};
var _excluded$a = ["className", "cellsNumber", "children"];
var PREFIX$7 = "Table";
var classes$7 = {
  table: "".concat(PREFIX$7, "-table")
};
var StyledTableMUI = styled_default(Table_default, {
  shouldForwardProp: function shouldForwardProp3(prop) {
    return prop !== "cellsNumber";
  }
})(function(_ref) {
  var _$concat;
  var cellsNumber = _ref.cellsNumber;
  return _defineProperty({}, "&.".concat(classes$7.table), (_$concat = {
    tableLayout: "fixed",
    minWidth: getWidthInPixels(cellsNumber, CELL_WIDTH),
    width: "100%"
  }, _defineProperty(_$concat, "".concat(LAYOUT_MEDIA_QUERY), {
    minWidth: getWidthInPixels(cellsNumber, SMALL_CELL_WIDTH)
  }), _defineProperty(_$concat, "".concat(SMALL_LAYOUT_MEDIA_QUERY), {
    minWidth: getWidthInPixels(cellsNumber, XS_CELL_WIDTH)
  }), _$concat));
});
var Table = (0, import_react.forwardRef)(function(_ref3, ref) {
  var className = _ref3.className, cellsNumber = _ref3.cellsNumber, children = _ref3.children, restProps = _objectWithoutProperties(_ref3, _excluded$a);
  return (0, import_react.createElement)(StyledTableMUI, _extends2({
    cellsNumber,
    ref,
    className: clsx_m_default(classes$7.table, className)
  }, restProps), (0, import_react.createElement)(TableBody_default, null, children));
});
Table.propTypes = {
  cellsNumber: import_prop_types.default.number.isRequired,
  className: import_prop_types.default.string,
  children: import_prop_types.default.node.isRequired
};
Table.defaultProps = {
  className: void 0
};
var _excluded$b = ["setCellElementsMeta", "cellsNumber", "children"];
var Layout$1 = (0, import_react.memo)(function(_ref) {
  var setCellElementsMeta = _ref.setCellElementsMeta, cellsNumber = _ref.cellsNumber, children = _ref.children, restProps = _objectWithoutProperties(_ref, _excluded$b);
  var tableRef = (0, import_react.useRef)(null);
  (0, import_react.useEffect)(function() {
    var tableElement = tableRef.current;
    setCellElementsMeta(cellsMeta(tableElement));
  });
  return (0, import_react.createElement)(Table, _extends2({
    ref: tableRef,
    cellsNumber
  }, restProps), children);
});
true ? Layout$1.propTypes = {
  setCellElementsMeta: import_prop_types.default.func.isRequired,
  cellsNumber: import_prop_types.default.number.isRequired,
  children: import_prop_types.default.node.isRequired
} : void 0;
var _excluded$c = ["setCellElementsMeta", "cellComponent", "allDayCellComponent", "rowComponent", "allDayRowComponent", "cellsData", "allDayCellsData", "formatDate"];
var renderCell = function renderCell2(Cell7, startDate, endDate, endOfGroup, groupingInfo, groupOrientation) {
  return (0, import_react.createElement)(Cell7, {
    key: getViewCellKey(startDate, groupingInfo),
    startDate,
    endDate,
    endOfGroup,
    hasRightBorder: endOfGroup,
    groupingInfo,
    groupOrientation
  });
};
var Layout$2 = (0, import_react.memo)(function(_ref) {
  var setCellElementsMeta = _ref.setCellElementsMeta, cellComponent = _ref.cellComponent, allDayCellComponent2 = _ref.allDayCellComponent, Row4 = _ref.rowComponent, AllDayRow = _ref.allDayRowComponent, cellsData = _ref.cellsData, allDayCellsData = _ref.allDayCellsData, formatDate3 = _ref.formatDate, restProps = _objectWithoutProperties(_ref, _excluded$c);
  return (0, import_react.createElement)(Layout$1, _extends2({
    setCellElementsMeta,
    cellsNumber: cellsData[0].length
  }, restProps), prepareVerticalViewCellsData(cellsData, allDayCellsData).map(function(group, groupIndex) {
    return (0, import_react.createElement)(import_react.Fragment, {
      key: groupIndex.toString()
    }, allDayCellsData && (0, import_react.createElement)(AllDayRow, null, allDayCellsData[groupIndex].map(function(_ref2) {
      var startDate = _ref2.startDate, endDate = _ref2.endDate, endOfGroup = _ref2.endOfGroup, groupingInfo = _ref2.groupingInfo, groupOrientation = _ref2.groupOrientation;
      return renderCell(allDayCellComponent2, startDate, endDate, endOfGroup, groupingInfo, groupOrientation);
    })), group.map(function(days, index) {
      return (0, import_react.createElement)(Row4, {
        key: index.toString()
      }, days.map(function(_ref3) {
        var startDate = _ref3.startDate, endDate = _ref3.endDate, groupingInfo = _ref3.groupingInfo, endOfGroup = _ref3.endOfGroup, groupOrientation = _ref3.groupOrientation;
        return renderCell(cellComponent, startDate, endDate, endOfGroup, groupingInfo, groupOrientation);
      }));
    }));
  }));
});
Layout$2.propTypes = {
  cellsData: import_prop_types.default.arrayOf(Array).isRequired,
  allDayCellsData: import_prop_types.default.arrayOf(Array),
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  allDayCellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  allDayRowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
  formatDate: import_prop_types.default.func.isRequired,
  setCellElementsMeta: import_prop_types.default.func.isRequired
};
Layout$2.defaultProps = {
  allDayCellComponent: function allDayCellComponent() {
    return null;
  },
  allDayRowComponent: function allDayRowComponent() {
    return null;
  },
  allDayCellsData: void 0
};
var _excluded$d = ["className", "children", "startDate", "endDate", "currentTimeIndicatorPosition", "currentTimeIndicatorComponent", "isShaded", "endOfGroup", "groupingInfo", "groupOrientation", "hasRightBorder"];
var PREFIX$8 = "Cell";
var classes$8 = {
  cell: "".concat(PREFIX$8, "-cell"),
  shadedCell: "".concat(PREFIX$8, "-shadedCell"),
  shadedPart: "".concat(PREFIX$8, "-shadedPart"),
  brightRightBorder: "".concat(PREFIX$8, "-brightRightBorder"),
  brightBorderBottom: "".concat(PREFIX$8, "-brightBorderBottom")
};
var StyledTableCell$1 = styled_default(TableCell_default, {
  shouldForwardProp: function shouldForwardProp4(prop) {
    return prop !== "shadedHeight";
  }
})(function(_ref) {
  var _ref2;
  var theme = _ref.theme, shadedHeight = _ref.shadedHeight;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$8.cell), {
    position: "relative",
    height: theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK]),
    padding: 0,
    boxSizing: "border-box",
    borderRight: getBorder(theme),
    "&:last-child": {
      borderRight: "none",
      paddingRight: 0
    },
    "tr:last-child &": {
      borderBottom: "none"
    },
    "&:hover": {
      backgroundColor: theme.palette.action.hover
    },
    "&:focus": {
      backgroundColor: alpha(theme.palette.primary.main, 0.15),
      outline: 0
    }
  }), _defineProperty(_ref2, "&.".concat(classes$8.shadedCell), {
    backgroundColor: alpha(theme.palette.action.disabledBackground, 0.04),
    "&:hover": {
      backgroundColor: theme.palette.action.selected
    },
    "&:focus": {
      backgroundColor: alpha(theme.palette.primary.main, 0.15),
      outline: 0
    }
  }), _defineProperty(_ref2, "& .".concat(classes$8.shadedPart), {
    backgroundColor: alpha(theme.palette.action.disabledBackground, 0.04),
    position: "absolute",
    height: shadedHeight,
    width: "100%",
    left: 0,
    top: 0,
    "&:hover": {
      backgroundColor: theme.palette.action.hover
    },
    "td:focus &": {
      opacity: 0
    }
  }), _defineProperty(_ref2, "&.".concat(classes$8.brightRightBorder), {
    borderRight: getBrightBorder(theme),
    "&:last-child": {
      borderRight: "none"
    }
  }), _defineProperty(_ref2, "&.".concat(classes$8.brightBorderBottom), {
    borderBottom: getBrightBorder(theme)
  }), _ref2;
});
var Cell = function Cell2(_ref3) {
  var _classNames;
  var className = _ref3.className, children = _ref3.children, startDate = _ref3.startDate, endDate = _ref3.endDate, currentTimeIndicatorPosition = _ref3.currentTimeIndicatorPosition, CurrentTimeIndicator3 = _ref3.currentTimeIndicatorComponent, isShaded = _ref3.isShaded, endOfGroup = _ref3.endOfGroup, groupingInfo = _ref3.groupingInfo, groupOrientation = _ref3.groupOrientation, hasRightBorder = _ref3.hasRightBorder, restProps = _objectWithoutProperties(_ref3, _excluded$d);
  var isNow = !!currentTimeIndicatorPosition;
  return (0, import_react.createElement)(StyledTableCell$1, _extends2({
    shadedHeight: currentTimeIndicatorPosition,
    tabIndex: 0,
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$8.cell, true), _defineProperty(_classNames, classes$8.shadedCell, isShaded && !isNow), _defineProperty(_classNames, classes$8.brightRightBorder, (endOfGroup || hasRightBorder) && groupOrientation === HORIZONTAL_GROUP_ORIENTATION), _defineProperty(_classNames, classes$8.brightBorderBottom, endOfGroup && groupOrientation === VERTICAL_GROUP_ORIENTATION), _classNames), className)
  }, restProps), isNow && isShaded && (0, import_react.createElement)("div", {
    className: classes$8.shadedPart
  }), isNow && (0, import_react.createElement)(CurrentTimeIndicator3, {
    top: currentTimeIndicatorPosition
  }), children);
};
true ? Cell.propTypes = {
  startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  currentTimeIndicatorPosition: import_prop_types.default.string,
  currentTimeIndicatorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
  isShaded: import_prop_types.default.bool,
  endOfGroup: import_prop_types.default.bool,
  hasRightBorder: import_prop_types.default.bool,
  groupingInfo: import_prop_types.default.arrayOf(import_prop_types.default.object),
  groupOrientation: import_prop_types.default.oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION])
} : void 0;
Cell.defaultProps = {
  children: null,
  className: void 0,
  startDate: /* @__PURE__ */ new Date(),
  endDate: /* @__PURE__ */ new Date(),
  currentTimeIndicatorPosition: void 0,
  currentTimeIndicatorComponent: function currentTimeIndicatorComponent() {
    return null;
  },
  isShaded: false,
  endOfGroup: false,
  hasRightBorder: false,
  groupingInfo: void 0,
  groupOrientation: HORIZONTAL_GROUP_ORIENTATION
};
var _excluded$e = ["cellComponent", "rowComponent", "groupingPanelComponent", "cellsData", "formatDate", "groupedByDate"];
var Layout$3 = (0, import_react.memo)(function(_ref) {
  var Cell7 = _ref.cellComponent, Row4 = _ref.rowComponent, GroupingPanel3 = _ref.groupingPanelComponent, cellsData = _ref.cellsData, formatDate3 = _ref.formatDate, groupedByDate = _ref.groupedByDate, restProps = _objectWithoutProperties(_ref, _excluded$e);
  return (0, import_react.createElement)(Table, _extends2({
    cellsNumber: cellsData[0].length
  }, restProps), !groupedByDate && (0, import_react.createElement)(GroupingPanel3, null), (0, import_react.createElement)(Row4, null, getDayScaleCells(cellsData, groupedByDate).map(function(_ref2) {
    var startDate = _ref2.startDate, endDate = _ref2.endDate, today = _ref2.today, key = _ref2.key, endOfGroup = _ref2.endOfGroup, groupingInfo = _ref2.groupingInfo, colSpan = _ref2.colSpan;
    return (0, import_react.createElement)(Cell7, {
      key,
      startDate,
      endDate,
      today,
      formatDate: formatDate3,
      endOfGroup,
      hasRightBorder: endOfGroup,
      groupingInfo,
      colSpan
    });
  })), groupedByDate && (0, import_react.createElement)(GroupingPanel3, null));
});
Layout$3.propTypes = {
  cellsData: import_prop_types.default.arrayOf(Array).isRequired,
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  groupingPanelComponent: import_prop_types.default.func,
  formatDate: import_prop_types.default.func.isRequired,
  groupedByDate: import_prop_types.default.bool
};
Layout$3.defaultProps = {
  groupingPanelComponent: function groupingPanelComponent2() {
    return null;
  },
  groupedByDate: false
};
var _excluded$f = ["className", "startDate", "endDate", "today", "formatDate", "endOfGroup", "groupingInfo", "hasRightBorder"];
var PREFIX$9 = "Cell";
var classes$9 = {
  cell: "".concat(PREFIX$9, "-cell"),
  dayOfWeek: "".concat(PREFIX$9, "-dayOfWeek"),
  dayOfMonth: "".concat(PREFIX$9, "-dayOfMonth"),
  highlightedText: "".concat(PREFIX$9, "-highlightedText"),
  dayView: "".concat(PREFIX$9, "-dayView"),
  brightRightBorder: "".concat(PREFIX$9, "-brightRightBorder")
};
var StyledTableCell$2 = styled_default(TableCell_default)(function(_ref) {
  var _$concat, _objectSpread2$1, _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$9.cell), (_$concat = {
    userSelect: "none",
    paddingBottom: theme.spacing(0.5),
    textAlign: "center",
    borderBottom: "none",
    paddingRight: 0,
    paddingLeft: 0,
    boxSizing: "border-box"
  }, _defineProperty(_$concat, "".concat(LAYOUT_MEDIA_QUERY), {
    padding: theme.spacing(1),
    paddingBottom: 0
  }), _defineProperty(_$concat, "&:only-child", {
    textAlign: "left",
    paddingLeft: theme.spacing(2)
  }), _defineProperty(_$concat, "paddingTop", theme.spacing(0.5)), _$concat)), _defineProperty(_ref2, "& .".concat(classes$9.dayOfWeek), _objectSpread2(_objectSpread2({}, theme.typography.caption), {}, {
    margin: 0,
    color: theme.palette.text.secondary,
    lineHeight: 1.17
  })), _defineProperty(_ref2, "& .".concat(classes$9.dayOfMonth), _objectSpread2(_objectSpread2({}, theme.typography.h4), {}, (_objectSpread2$1 = {}, _defineProperty(_objectSpread2$1, "".concat(LAYOUT_MEDIA_QUERY), _objectSpread2({}, theme.typography.h6)), _defineProperty(_objectSpread2$1, "color", theme.palette.text.secondary), _defineProperty(_objectSpread2$1, "lineHeight", 1.2), _defineProperty(_objectSpread2$1, "fontSize", "1.8rem"), _objectSpread2$1))), _defineProperty(_ref2, "& .".concat(classes$9.highlightedText), {
    color: theme.palette.primary.main,
    fontWeight: "bold"
  }), _defineProperty(_ref2, "& .".concat(classes$9.dayView), {
    "td:only-child &": {
      textAlign: "center",
      width: "auto",
      display: "inline-block"
    }
  }), _defineProperty(_ref2, "&.".concat(classes$9.brightRightBorder), {
    borderRight: getBrightBorder(theme),
    "&:last-child": {
      borderRight: "none"
    }
  }), _ref2;
});
var Cell$1 = function Cell3(_ref3) {
  var _classNames, _classNames2, _classNames3;
  var className = _ref3.className, startDate = _ref3.startDate, endDate = _ref3.endDate, today = _ref3.today, formatDate3 = _ref3.formatDate, endOfGroup = _ref3.endOfGroup, groupingInfo = _ref3.groupingInfo, hasRightBorder = _ref3.hasRightBorder, restProps = _objectWithoutProperties(_ref3, _excluded$f);
  return (0, import_react.createElement)(StyledTableCell$2, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$9.cell, true), _defineProperty(_classNames, classes$9.brightRightBorder, endOfGroup || hasRightBorder), _classNames), className)
  }, restProps), (0, import_react.createElement)("div", {
    className: classes$9.dayView
  }, (0, import_react.createElement)("p", {
    className: clsx_m_default((_classNames2 = {}, _defineProperty(_classNames2, classes$9.dayOfWeek, true), _defineProperty(_classNames2, classes$9.highlightedText, today), _classNames2))
  }, formatDate3(startDate, WEEK_DAY_OPTIONS)), (0, import_react.createElement)("div", {
    className: clsx_m_default((_classNames3 = {}, _defineProperty(_classNames3, classes$9.dayOfMonth, true), _defineProperty(_classNames3, classes$9.highlightedText, today), _classNames3))
  }, formatDate3(startDate, DAY_OPTIONS))));
};
true ? Cell$1.propTypes = {
  formatDate: import_prop_types.default.func.isRequired,
  startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]).isRequired,
  endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  className: import_prop_types.default.string,
  today: import_prop_types.default.bool,
  endOfGroup: import_prop_types.default.bool,
  hasRightBorder: import_prop_types.default.bool,
  groupingInfo: import_prop_types.default.arrayOf(import_prop_types.default.object)
} : void 0;
Cell$1.defaultProps = {
  className: void 0,
  endDate: void 0,
  today: false,
  endOfGroup: false,
  hasRightBorder: false,
  groupingInfo: void 0
};
var DayView2 = withComponents({
  Layout: MainLayout,
  AppointmentLayer: Container,
  DayScaleEmptyCell,
  TimeScaleLayout: Layout,
  TimeScaleLabel: Label,
  TimeScaleTickCell: TickCell,
  TimeScaleTicksRow: Row,
  DayScaleLayout: Layout$3,
  DayScaleCell: Cell$1,
  DayScaleRow: Row,
  TimeTableLayout: Layout$2,
  TimeTableCell: Cell,
  TimeTableRow: Row
})(DayView);
var WeekView2 = withComponents({
  Layout: MainLayout,
  AppointmentLayer: Container,
  DayScaleEmptyCell,
  TimeScaleLayout: Layout,
  TimeScaleLabel: Label,
  TimeScaleTickCell: TickCell,
  TimeScaleTicksRow: Row,
  DayScaleLayout: Layout$3,
  DayScaleCell: Cell$1,
  DayScaleRow: Row,
  TimeTableLayout: Layout$2,
  TimeTableCell: Cell,
  TimeTableRow: Row
})(WeekView);
var _excluded$g = ["setCellElementsMeta", "cellComponent", "rowComponent", "cellsData", "formatDate"];
var Layout$4 = (0, import_react.memo)(function(_ref) {
  var setCellElementsMeta = _ref.setCellElementsMeta, Cell7 = _ref.cellComponent, Row4 = _ref.rowComponent, cellsData = _ref.cellsData, formatDate3 = _ref.formatDate, restProps = _objectWithoutProperties(_ref, _excluded$g);
  return (0, import_react.createElement)(Layout$1, _extends2({
    setCellElementsMeta,
    cellsNumber: cellsData[0].length
  }, restProps), cellsData.map(function(row, index) {
    return (0, import_react.createElement)(Row4, {
      key: index.toString()
    }, row.map(function(_ref2) {
      var startDate = _ref2.startDate, endDate = _ref2.endDate, today = _ref2.today, otherMonth = _ref2.otherMonth, groupingInfo = _ref2.groupingInfo, endOfGroup = _ref2.endOfGroup, groupOrientation = _ref2.groupOrientation;
      return (0, import_react.createElement)(Cell7, {
        key: getViewCellKey(startDate, groupingInfo),
        startDate,
        endDate,
        today,
        otherMonth,
        formatDate: formatDate3,
        endOfGroup,
        hasRightBorder: endOfGroup,
        groupingInfo,
        groupOrientation
      });
    }));
  }));
});
Layout$4.propTypes = {
  cellsData: import_prop_types.default.arrayOf(Array).isRequired,
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  setCellElementsMeta: import_prop_types.default.func.isRequired
};
var _excluded$h = ["className", "startDate", "endDate", "today", "otherMonth", "formatDate", "isShaded", "endOfGroup", "groupingInfo", "groupOrientation", "hasRightBorder"];
var PREFIX$a = "Cell";
var classes$a = {
  cell: "".concat(PREFIX$a, "-cell"),
  text: "".concat(PREFIX$a, "-text"),
  today: "".concat(PREFIX$a, "-today"),
  otherMonth: "".concat(PREFIX$a, "-otherMonth"),
  shadedCell: "".concat(PREFIX$a, "-shadedCell"),
  brightRightBorder: "".concat(PREFIX$a, "-brightRightBorder"),
  brightBorderBottom: "".concat(PREFIX$a, "-brightBorderBottom")
};
var StyledTableCell$3 = styled_default(TableCell_default)(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$a.cell), {
    userSelect: "none",
    verticalAlign: "top",
    padding: 0,
    height: theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.MONTH]),
    borderRight: getBorder(theme),
    "&:last-child": {
      borderRight: "none",
      paddingRight: 0
    },
    "tr:last-child &": {
      borderBottom: "none"
    },
    "&:hover": {
      backgroundColor: theme.palette.action.hover
    },
    "&:focus": {
      backgroundColor: alpha(theme.palette.primary.main, 0.15),
      outline: 0
    },
    boxSizing: "border-box"
  }), _defineProperty(_ref2, "& .".concat(classes$a.text), _defineProperty({
    padding: "1em",
    paddingTop: "0.5em",
    textAlign: "center"
  }, "".concat(SMALL_LAYOUT_MEDIA_QUERY), {
    padding: "0.5em"
  })), _defineProperty(_ref2, "& .".concat(classes$a.today), {
    marginTop: "0.33em",
    width: "1.72em",
    height: "1.72em",
    lineHeight: 1.72,
    textAlign: "center",
    borderRadius: "50%",
    background: theme.palette.primary.main,
    color: theme.palette.primary.contrastText,
    cursor: "default",
    marginRight: "auto",
    marginLeft: "auto"
  }), _defineProperty(_ref2, "& .".concat(classes$a.otherMonth), {
    color: theme.palette.text.disabled
  }), _defineProperty(_ref2, "&.".concat(classes$a.shadedCell), {
    backgroundColor: alpha(theme.palette.action.disabledBackground, 0.04),
    "&:hover": {
      backgroundColor: theme.palette.action.selected
    },
    "&:focus": {
      backgroundColor: alpha(theme.palette.primary.main, 0.15),
      outline: 0
    }
  }), _defineProperty(_ref2, "&.".concat(classes$a.brightRightBorder), {
    borderRight: getBrightBorder(theme),
    "&:last-child": {
      borderRight: "none"
    }
  }), _defineProperty(_ref2, "&.".concat(classes$a.brightBorderBottom), {
    borderBottom: getBrightBorder(theme)
  }), _ref2;
});
var CellBase = (0, import_react.memo)(function(_ref3) {
  var _classNames, _classNames2;
  var className = _ref3.className, startDate = _ref3.startDate, endDate = _ref3.endDate, today = _ref3.today, otherMonth = _ref3.otherMonth, formatDate3 = _ref3.formatDate, isShaded = _ref3.isShaded, endOfGroup = _ref3.endOfGroup, groupingInfo = _ref3.groupingInfo, groupOrientation = _ref3.groupOrientation, hasRightBorder = _ref3.hasRightBorder, restProps = _objectWithoutProperties(_ref3, _excluded$h);
  var isFirstMonthDay = startDate.getDate() === 1;
  var formatOptions = isFirstMonthDay && !today ? DAY_SHORT_MONTH_OPTIONS : DAY_OPTIONS;
  return (0, import_react.createElement)(StyledTableCell$3, _extends2({
    tabIndex: 0,
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$a.cell, true), _defineProperty(_classNames, classes$a.shadedCell, isShaded), _defineProperty(_classNames, classes$a.brightRightBorder, (endOfGroup || hasRightBorder) && groupOrientation === HORIZONTAL_GROUP_ORIENTATION), _defineProperty(_classNames, classes$a.brightBorderBottom, endOfGroup && groupOrientation === VERTICAL_GROUP_ORIENTATION), _classNames), className)
  }, restProps), (0, import_react.createElement)("div", {
    className: clsx_m_default((_classNames2 = {}, _defineProperty(_classNames2, classes$a.text, !today), _defineProperty(_classNames2, classes$a.today, today), _defineProperty(_classNames2, classes$a.otherMonth, otherMonth && !today), _classNames2))
  }, formatDate3(startDate, formatOptions)));
});
true ? CellBase.propTypes = {
  formatDate: import_prop_types.default.func.isRequired,
  startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]).isRequired,
  endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  className: import_prop_types.default.string,
  today: import_prop_types.default.bool,
  otherMonth: import_prop_types.default.bool,
  isShaded: import_prop_types.default.bool,
  endOfGroup: import_prop_types.default.bool,
  hasRightBorder: import_prop_types.default.bool,
  groupingInfo: import_prop_types.default.arrayOf(import_prop_types.default.object),
  groupOrientation: import_prop_types.default.oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION])
} : void 0;
CellBase.defaultProps = {
  endDate: void 0,
  className: void 0,
  today: false,
  otherMonth: false,
  isShaded: false,
  endOfGroup: false,
  hasRightBorder: false,
  groupingInfo: void 0,
  groupOrientation: HORIZONTAL_GROUP_ORIENTATION
};
var Cell$2 = CellBase;
var _excluded$i = ["className", "startDate", "endDate", "today", "formatDate", "endOfGroup", "groupingInfo", "hasRightBorder"];
var PREFIX$b = "Cell";
var classes$b = {
  cell: "".concat(PREFIX$b, "-cell"),
  dayOfWeek: "".concat(PREFIX$b, "-dayOfWeek"),
  brightRightBorder: "".concat(PREFIX$b, "-brightRightBorder")
};
var StyledTableCell$4 = styled_default(TableCell_default)(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$b.cell), {
    userSelect: "none",
    padding: 0,
    borderBottom: "none",
    borderRight: getBorder(theme),
    "&:last-child": {
      borderRight: "none",
      paddingRight: 0
    },
    textAlign: "center",
    boxSizing: "border-box"
  }), _defineProperty(_ref2, "& .".concat(classes$b.dayOfWeek), _objectSpread2(_objectSpread2({}, theme.typography.caption), {}, {
    margin: 0,
    padding: theme.spacing(1),
    paddingBottom: 0,
    color: theme.palette.text.secondary,
    fontWeight: "bold"
  })), _defineProperty(_ref2, "&.".concat(classes$b.brightRightBorder), {
    borderRight: getBrightBorder(theme),
    "&:last-child": {
      borderRight: "none"
    }
  }), _ref2;
});
var Cell$3 = function Cell4(_ref3) {
  var _classNames;
  var className = _ref3.className, startDate = _ref3.startDate, endDate = _ref3.endDate, today = _ref3.today, formatDate3 = _ref3.formatDate, endOfGroup = _ref3.endOfGroup, groupingInfo = _ref3.groupingInfo, hasRightBorder = _ref3.hasRightBorder, restProps = _objectWithoutProperties(_ref3, _excluded$i);
  return (0, import_react.createElement)(StyledTableCell$4, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$b.cell, true), _defineProperty(_classNames, classes$b.brightRightBorder, endOfGroup || hasRightBorder), _classNames), className)
  }, restProps), (0, import_react.createElement)("div", {
    className: classes$b.dayOfWeek
  }, formatDate3(startDate, WEEK_DAY_OPTIONS)));
};
true ? Cell$3.propTypes = {
  formatDate: import_prop_types.default.func.isRequired,
  startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]).isRequired,
  endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  className: import_prop_types.default.string,
  today: import_prop_types.default.bool,
  endOfGroup: import_prop_types.default.bool,
  hasRightBorder: import_prop_types.default.bool,
  groupingInfo: import_prop_types.default.arrayOf(import_prop_types.default.object)
} : void 0;
Cell$3.defaultProps = {
  className: void 0,
  endDate: void 0,
  today: false,
  endOfGroup: false,
  hasRightBorder: false,
  groupingInfo: void 0
};
var MonthView2 = withComponents({
  Layout: MainLayout,
  AppointmentLayer: Container,
  DayScaleEmptyCell,
  DayScaleLayout: Layout$3,
  DayScaleCell: Cell$3,
  DayScaleRow: Row,
  TimeTableLayout: Layout$4,
  TimeTableCell: Cell$2,
  TimeTableRow: Row
})(MonthView);
var _excluded$j = ["data", "children", "className", "recurringIconComponent", "formatDate", "durationType"];
var PREFIX$c = "HorizontalAppointment";
var classes$c = {
  title: "".concat(PREFIX$c, "-title"),
  content: "".concat(PREFIX$c, "-content"),
  container: "".concat(PREFIX$c, "-container"),
  recurringContainer: "".concat(PREFIX$c, "-recurringContainer"),
  imageContainer: "".concat(PREFIX$c, "-imageContainer"),
  image: "".concat(PREFIX$c, "-image")
};
var StyledDiv$4 = styled_default("div")(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, palette = _ref$theme.palette, spacing = _ref$theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$c.title), {
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  }), _defineProperty(_ref2, "&.".concat(classes$c.content), {
    color: palette.common.white,
    padding: spacing(0.5),
    paddingTop: spacing(0.125),
    paddingLeft: spacing(0.75),
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    display: "flex"
  }), _defineProperty(_ref2, "& .".concat(classes$c.container), {
    width: "100%"
  }), _defineProperty(_ref2, "& .".concat(classes$c.recurringContainer), {
    width: "calc(100% - ".concat(spacing(2), ")")
  }), _defineProperty(_ref2, "& .".concat(classes$c.imageContainer), {
    width: spacing(2),
    height: spacing(2)
  }), _defineProperty(_ref2, "& .".concat(classes$c.image), {
    width: "100%",
    height: "100%"
  }), _ref2;
});
var HorizontalAppointment = function HorizontalAppointment2(_ref3) {
  var data = _ref3.data, children = _ref3.children, className = _ref3.className, RecurringIcon = _ref3.recurringIconComponent, formatDate3 = _ref3.formatDate, durationType = _ref3.durationType, restProps = _objectWithoutProperties(_ref3, _excluded$j);
  var repeat = !!data.rRule;
  return (0, import_react.createElement)(StyledDiv$4, _extends2({
    className: clsx_m_default(classes$c.content, className)
  }, restProps), children || (0, import_react.createElement)(import_react.Fragment, null, (0, import_react.createElement)("div", {
    className: repeat ? classes$c.recurringContainer : classes$c.container
  }, (0, import_react.createElement)("div", {
    className: classes$c.title
  }, data.title)), repeat ? (0, import_react.createElement)("div", {
    className: classes$c.imageContainer
  }, (0, import_react.createElement)(RecurringIcon, {
    className: classes$c.image
  })) : void 0));
};
true ? HorizontalAppointment.propTypes = {
  // oneOfType is a workaround because withStyles returns react object
  recurringIconComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  data: import_prop_types.default.object.isRequired,
  durationType: import_prop_types.default.string,
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  formatDate: import_prop_types.default.func
} : void 0;
HorizontalAppointment.defaultProps = {
  formatDate: function formatDate2() {
    return "";
  },
  children: void 0,
  className: void 0,
  durationType: void 0
};
var _excluded$k = ["data", "children", "className", "formatDate", "recurringIconComponent", "durationType"];
var PREFIX$d = "VerticalAppointment";
var classes$d = {
  title: "".concat(PREFIX$d, "-title"),
  textContainer: "".concat(PREFIX$d, "-textContainer"),
  middleContainer: "".concat(PREFIX$d, "-middleContainer"),
  time: "".concat(PREFIX$d, "-time"),
  content: "".concat(PREFIX$d, "-content"),
  shortContent: "".concat(PREFIX$d, "-shortContent"),
  shortContainer: "".concat(PREFIX$d, "-shortContainer"),
  shortTime: "".concat(PREFIX$d, "-shortTime"),
  shortTitle: "".concat(PREFIX$d, "-shortTitle"),
  container: "".concat(PREFIX$d, "-container"),
  recurringContainer: "".concat(PREFIX$d, "-recurringContainer"),
  imageContainer: "".concat(PREFIX$d, "-imageContainer"),
  image: "".concat(PREFIX$d, "-image")
};
var StyledDiv$5 = styled_default("div")(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, palette = _ref$theme.palette, spacing = _ref$theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$d.title), {
    fontWeight: "bold",
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  }), _defineProperty(_ref2, "& .".concat(classes$d.textContainer), {
    lineHeight: 1,
    whiteSpace: "pre-wrap",
    overflow: "hidden",
    textOverflow: "ellipsis"
  }), _defineProperty(_ref2, "& .".concat(classes$d.middleContainer), {
    lineHeight: "0.9!important"
  }), _defineProperty(_ref2, "& .".concat(classes$d.time), {
    display: "inline-block",
    overflow: "hidden",
    textOverflow: "ellipsis"
  }), _defineProperty(_ref2, "&.".concat(classes$d.content), _defineProperty({
    color: palette.common.white,
    padding: spacing(0.5, 1),
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    display: "flex"
  }, "".concat(SMALL_LAYOUT_MEDIA_QUERY), {
    paddingLeft: spacing(0.5),
    paddingRight: spacing(0.5)
  })), _defineProperty(_ref2, "&.".concat(classes$d.shortContent), _defineProperty({
    padding: spacing(0.25, 1)
  }, "".concat(SMALL_LAYOUT_MEDIA_QUERY), {
    paddingLeft: spacing(0.5),
    paddingRight: spacing(0.5)
  })), _defineProperty(_ref2, "& .".concat(classes$d.shortContainer), {
    display: "flex"
  }), _defineProperty(_ref2, "& .".concat(classes$d.shortTime), {
    textOverflow: "initial",
    flexShrink: 0
  }), _defineProperty(_ref2, "& .".concat(classes$d.shortTitle), {
    flexShrink: 3
  }), _defineProperty(_ref2, "& .".concat(classes$d.container), {
    width: "100%"
  }), _defineProperty(_ref2, "& .".concat(classes$d.recurringContainer), {
    width: "calc(100% - ".concat(spacing(2), ")")
  }), _defineProperty(_ref2, "& .".concat(classes$d.imageContainer), {
    width: spacing(2),
    height: spacing(2)
  }), _defineProperty(_ref2, "& .".concat(classes$d.image), {
    width: "100%",
    height: "100%"
  }), _ref2;
});
var VerticalAppointment = function VerticalAppointment2(_ref3) {
  var _classNames, _classNames2, _classNames3;
  var data = _ref3.data, children = _ref3.children, className = _ref3.className, formatDate3 = _ref3.formatDate, RecurringIcon = _ref3.recurringIconComponent, durationType = _ref3.durationType, restProps = _objectWithoutProperties(_ref3, _excluded$k);
  var repeat = !!data.rRule;
  var isShortHeight = durationType === "short";
  var isMiddleHeight = durationType === "middle";
  return (0, import_react.createElement)(StyledDiv$5, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$d.content, true), _defineProperty(_classNames, classes$d.shortContent, isShortHeight || isMiddleHeight), _classNames), className)
  }, restProps), children || (0, import_react.createElement)(import_react.Fragment, null, (0, import_react.createElement)("div", {
    className: clsx_m_default((_classNames2 = {}, _defineProperty(_classNames2, classes$d.container, !repeat), _defineProperty(_classNames2, classes$d.recurringContainer, repeat), _classNames2))
  }, isShortHeight ? (0, import_react.createElement)("div", {
    className: classes$d.shortContainer
  }, (0, import_react.createElement)("div", {
    className: clsx_m_default(classes$d.title, classes$d.shortTitle)
  }, addCommaAndSpaceToString(data.title)), (0, import_react.createElement)("div", {
    className: clsx_m_default(classes$d.time, classes$d.shortTime)
  }, formatDate3(data.startDate, HOUR_MINUTE_OPTIONS))) : (0, import_react.createElement)(import_react.Fragment, null, (0, import_react.createElement)("div", {
    className: classes$d.title
  }, data.title), (0, import_react.createElement)("div", {
    className: clsx_m_default((_classNames3 = {}, _defineProperty(_classNames3, classes$d.textContainer, true), _defineProperty(_classNames3, classes$d.middleContainer, isMiddleHeight), _classNames3))
  }, (0, import_react.createElement)("div", {
    className: classes$d.time
  }, formatDate3(data.startDate, HOUR_MINUTE_OPTIONS)), (0, import_react.createElement)("div", {
    className: classes$d.time
  }, "  -  "), (0, import_react.createElement)("div", {
    className: classes$d.time
  }, formatDate3(data.endDate, HOUR_MINUTE_OPTIONS))))), repeat ? (0, import_react.createElement)("div", {
    className: classes$d.imageContainer
  }, (0, import_react.createElement)(RecurringIcon, {
    className: classes$d.image
  })) : void 0));
};
true ? VerticalAppointment.propTypes = {
  // oneOfType is a workaround because withStyles returns react object
  recurringIconComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  data: import_prop_types.default.object.isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  durationType: import_prop_types.default.string.isRequired,
  children: import_prop_types.default.node,
  className: import_prop_types.default.string
} : void 0;
VerticalAppointment.defaultProps = {
  children: void 0,
  className: void 0
};
var _excluded$l = ["type"];
var AppointmentContent = function AppointmentContent2(_ref) {
  var type = _ref.type, restProps = _objectWithoutProperties(_ref, _excluded$l);
  return type === HORIZONTAL_TYPE ? (0, import_react.createElement)(HorizontalAppointment, restProps) : (0, import_react.createElement)(VerticalAppointment, restProps);
};
true ? AppointmentContent.propTypes = {
  type: import_prop_types.default.oneOf([HORIZONTAL_TYPE, VERTICAL_TYPE]).isRequired
} : void 0;
var _excluded$m = ["className", "children", "data", "onClick", "draggable", "isShaded", "resources", "forwardedRef"];
var PREFIX$e = "Appointment";
var classes$e = {
  appointment: "".concat(PREFIX$e, "-appointment"),
  clickableAppointment: "".concat(PREFIX$e, "-clickableAppointment"),
  shadedAppointment: "".concat(PREFIX$e, "-shadedAppointment")
};
var StyledDiv$6 = styled_default("div")(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, palette = _ref$theme.palette, typography = _ref$theme.typography, spacing = _ref$theme.spacing, resources = _ref.resources;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$e.appointment), _objectSpread2(_objectSpread2({
    userSelect: "none",
    position: "absolute",
    height: "100%",
    width: "100%",
    overflow: "hidden",
    boxSizing: "border-box",
    border: "1px solid ".concat(palette.background.paper),
    backgroundClip: "padding-box",
    borderRadius: spacing(0.5),
    backgroundColor: getAppointmentColor(300, getResourceColor(resources), palette.primary)
  }, typography.caption), {}, {
    "&:hover": {
      backgroundColor: getAppointmentColor(400, getResourceColor(resources), palette.primary)
    },
    "&:focus": {
      backgroundColor: getAppointmentColor(100, getResourceColor(resources), palette.primary),
      outline: 0
    }
  })), _defineProperty(_ref2, "&.".concat(classes$e.clickableAppointment), {
    cursor: "pointer"
  }), _defineProperty(_ref2, "&.".concat(classes$e.shadedAppointment), {
    backgroundColor: getAppointmentColor(200, getResourceColor(resources), palette.primary),
    "&:hover": {
      backgroundColor: getAppointmentColor(300, getResourceColor(resources), palette.primary)
    }
  }), _ref2;
});
var Appointment = function Appointment2(_ref3) {
  var _classNames;
  var className = _ref3.className, children = _ref3.children, data = _ref3.data, handleClick = _ref3.onClick, draggable = _ref3.draggable, isShaded = _ref3.isShaded, resources = _ref3.resources, forwardedRef = _ref3.forwardedRef, restProps = _objectWithoutProperties(_ref3, _excluded$m);
  var onClick2 = handleClick ? {
    onClick: function onClick3(_ref4) {
      var target = _ref4.target;
      handleClick({
        target,
        data
      });
    }
  } : null;
  var clickable = onClick2 || restProps.onDoubleClick || draggable;
  return (0, import_react.createElement)(StyledDiv$6, _extends2({
    resources,
    ref: forwardedRef,
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$e.appointment, true), _defineProperty(_classNames, classes$e.clickableAppointment, clickable), _defineProperty(_classNames, classes$e.shadedAppointment, isShaded), _classNames), className)
  }, onClick2, restProps), children);
};
true ? Appointment.propTypes = {
  children: import_prop_types.default.node.isRequired,
  resources: import_prop_types.default.array,
  className: import_prop_types.default.string,
  data: import_prop_types.default.object,
  onClick: import_prop_types.default.func,
  draggable: import_prop_types.default.bool,
  isShaded: import_prop_types.default.bool,
  forwardedRef: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
} : void 0;
Appointment.defaultProps = {
  resources: [],
  onClick: void 0,
  className: void 0,
  data: {},
  draggable: false,
  isShaded: false,
  forwardedRef: void 0
};
var _excluded$n = ["position", "appointmentType", "className"];
var _styled;
var PREFIX$f = "AppointmentsContainer";
var classes$f = {
  slice: "".concat(PREFIX$f, "-slice"),
  verticalStart: "".concat(PREFIX$f, "-verticalStart"),
  verticalEnd: "".concat(PREFIX$f, "-verticalEnd"),
  horizontalStart: "".concat(PREFIX$f, "-horizontalStart"),
  horizontalEnd: "".concat(PREFIX$f, "-horizontalEnd")
};
var verticalStyles = {
  width: "100%",
  height: "10px"
};
var horizontalStyles = {
  top: 0,
  width: "10px",
  height: "100%"
};
var StyledDiv$7 = styled_default("div")((_styled = {}, _defineProperty(_styled, "&.".concat(classes$f.slice), {
  position: "absolute",
  zIndex: 50
}), _defineProperty(_styled, "&.".concat(classes$f.verticalStart), _objectSpread2(_objectSpread2({}, verticalStyles), {}, {
  top: "-10px",
  boxShadow: "0 10px 15px rgba(0,0,0,0.2)"
})), _defineProperty(_styled, "&.".concat(classes$f.verticalEnd), _objectSpread2(_objectSpread2({}, verticalStyles), {}, {
  bottom: "-10px",
  boxShadow: "0 -10px 15px rgba(0,0,0,0.2)"
})), _defineProperty(_styled, "&.".concat(classes$f.horizontalStart), _objectSpread2(_objectSpread2({}, horizontalStyles), {}, {
  left: "-10px",
  boxShadow: "10px 0 15px rgba(0,0,0,0.2)"
})), _defineProperty(_styled, "&.".concat(classes$f.horizontalEnd), _objectSpread2(_objectSpread2({}, horizontalStyles), {}, {
  right: "-10px",
  boxShadow: "-10px 0 15px rgba(0,0,0,0.2)"
})), _styled));
var SplitIndicator = (0, import_react.memo)(function(_ref) {
  var _classNames;
  var position = _ref.position, appointmentType = _ref.appointmentType, className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded$n);
  var vertical = appointmentType === VERTICAL_TYPE;
  var start = position === POSITION_START;
  return (0, import_react.createElement)(StyledDiv$7, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$f.slice, true), _defineProperty(_classNames, classes$f.verticalStart, vertical && start), _defineProperty(_classNames, classes$f.verticalEnd, vertical && !start), _defineProperty(_classNames, classes$f.horizontalStart, !vertical && start), _defineProperty(_classNames, classes$f.horizontalEnd, !vertical && !start), _classNames), className)
  }, restProps));
});
true ? SplitIndicator.propTypes = {
  appointmentType: import_prop_types.default.oneOf([VERTICAL_TYPE, HORIZONTAL_TYPE]).isRequired,
  position: import_prop_types.default.oneOf([POSITION_START, POSITION_END]).isRequired,
  className: import_prop_types.default.string
} : void 0;
SplitIndicator.defaultProps = {
  className: void 0
};
var _excluded$o = ["style", "children"];
var AppointmentContainer = function AppointmentContainer2(_ref) {
  var style = _ref.style, children = _ref.children, restProps = _objectWithoutProperties(_ref, _excluded$o);
  return (0, import_react.createElement)("div", _extends2({
    style
  }, restProps), children);
};
true ? AppointmentContainer.propTypes = {
  children: import_prop_types.default.node.isRequired,
  style: import_prop_types.default.object.isRequired
} : void 0;
var Appointments2 = withComponents({
  Appointment,
  AppointmentContent,
  Container: AppointmentContainer,
  SplitIndicator,
  RecurringIcon: Repeat_default
})(Appointments);
var _excluded$p = ["children", "className"];
var PREFIX$g = "Toolbar";
var classes$g = {
  toolbar: "".concat(PREFIX$g, "-toolbar")
};
var StyledToolbarMUI = styled_default(Toolbar_default)(function(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes$g.toolbar), {
    borderBottom: getBorder(theme)
  });
});
var Toolbar2 = function Toolbar3(_ref3) {
  var children = _ref3.children, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$p);
  return (0, import_react.createElement)(StyledToolbarMUI, _extends2({
    className: clsx_m_default(classes$g.toolbar, className)
  }, restProps), children);
};
true ? Toolbar2.propTypes = {
  children: import_prop_types.default.node.isRequired,
  className: import_prop_types.default.string
} : void 0;
Toolbar2.defaultProps = {
  className: void 0
};
var _excluded$q = ["children", "className"];
var PREFIX$h = "FlexibleSpace";
var classes$h = {
  flexibleSpace: "".concat(PREFIX$h, "-flexibleSpace")
};
var StyledDiv$8 = styled_default("div")(_defineProperty({}, "&.".concat(classes$h.flexibleSpace), {
  flex: "0 0 0",
  marginLeft: "auto"
}));
var FlexibleSpace = function FlexibleSpace2(_ref) {
  var children = _ref.children, className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded$q);
  return (0, import_react.createElement)(StyledDiv$8, _extends2({
    className: clsx_m_default(classes$h.flexibleSpace, className)
  }, restProps), children);
};
true ? FlexibleSpace.propTypes = {
  children: import_prop_types.default.node,
  className: import_prop_types.default.string
} : void 0;
FlexibleSpace.defaultProps = {
  children: null,
  className: void 0
};
var Toolbar$1 = withComponents({
  Root: Toolbar2,
  FlexibleSpace
})(Toolbar);
var _excluded$r = ["navigationButtonComponent", "openButtonComponent", "navigatorText", "rootRef", "onVisibilityToggle", "onNavigate", "className"];
var PREFIX$i = "Root";
var classes$i = {
  root: "".concat(PREFIX$i, "-root")
};
var StyledDiv$9 = styled_default("div")(function(_ref) {
  var spacing = _ref.theme.spacing;
  return _defineProperty({}, "&.".concat(classes$i.root), {
    marginLeft: spacing(0.5),
    "&:first-of-type": {
      marginLeft: 0
    }
  });
});
var RootBase = function RootBase2(_ref3) {
  var NavigationButton2 = _ref3.navigationButtonComponent, OpenButton2 = _ref3.openButtonComponent, navigatorText = _ref3.navigatorText, rootRef = _ref3.rootRef, onVisibilityToggle = _ref3.onVisibilityToggle, onNavigate2 = _ref3.onNavigate, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$r);
  var navigateBack = (0, import_react.useCallback)(function() {
    return onNavigate2("back");
  }, [onNavigate2]);
  var navigateForward = (0, import_react.useCallback)(function() {
    return onNavigate2("forward");
  }, [onNavigate2]);
  return (0, import_react.createElement)(StyledDiv$9, _extends2({
    className: clsx_m_default(classes$i.root, className),
    ref: rootRef
  }, restProps), (0, import_react.createElement)(NavigationButton2, {
    type: "back",
    onClick: navigateBack
  }), (0, import_react.createElement)(NavigationButton2, {
    type: "forward",
    onClick: navigateForward
  }), (0, import_react.createElement)(OpenButton2, {
    onVisibilityToggle,
    text: navigatorText
  }));
};
true ? RootBase.propTypes = {
  // oneOfType is a workaround because withStyles returns react object
  navigationButtonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  openButtonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  onVisibilityToggle: import_prop_types.default.func.isRequired,
  onNavigate: import_prop_types.default.func.isRequired,
  rootRef: import_prop_types.default.func.isRequired,
  navigatorText: import_prop_types.default.string,
  className: import_prop_types.default.string
} : void 0;
RootBase.defaultProps = {
  navigatorText: "",
  className: void 0
};
var Root$1 = RootBase;
var _excluded$s = ["visible", "onHide", "children", "target"];
var origin = {
  vertical: "top",
  horizontal: "right"
};
var Overlay = function Overlay2(_ref) {
  var visible = _ref.visible, onHide3 = _ref.onHide, children = _ref.children, target = _ref.target, restProps = _objectWithoutProperties(_ref, _excluded$s);
  return (0, import_react.createElement)(Popover_default, _extends2({
    open: visible,
    anchorEl: target,
    onClose: onHide3,
    anchorOrigin: origin,
    transformOrigin: origin
  }, restProps), children);
};
true ? Overlay.propTypes = {
  onHide: import_prop_types.default.func.isRequired,
  children: import_prop_types.default.node.isRequired,
  visible: import_prop_types.default.bool,
  target: import_prop_types.default.oneOfType([import_prop_types.default.object, import_prop_types.default.func])
} : void 0;
Overlay.defaultProps = {
  visible: false,
  target: null
};
var _excluded$t = ["text", "onVisibilityToggle", "className"];
var PREFIX$j = "OpenButton";
var classes$j = {
  textButton: "".concat(PREFIX$j, "-textButton"),
  iconButton: "".concat(PREFIX$j, "-iconButton")
};
var StyledButton = styled_default(Button_default)(function() {
  return _defineProperty({}, "&.".concat(classes$j.textButton), _defineProperty({}, "".concat(LAYOUT_MEDIA_QUERY), {
    display: "none"
  }));
});
var StyledIconButton = styled_default(IconButton_default)(function(_ref2) {
  var spacing = _ref2.theme.spacing;
  return _defineProperty({}, "&.".concat(classes$j.iconButton), _defineProperty({
    "@media (min-width: 700px)": {
      display: "none"
    }
  }, "".concat(SMALL_LAYOUT_MEDIA_QUERY), {
    width: spacing(4),
    height: spacing(4),
    padding: 0
  }));
});
var OpenButton = (0, import_react.memo)(function(_ref4) {
  var text = _ref4.text, onVisibilityToggle = _ref4.onVisibilityToggle, className = _ref4.className, restProps = _objectWithoutProperties(_ref4, _excluded$t);
  return (0, import_react.createElement)(import_react.Fragment, null, (0, import_react.createElement)(StyledButton, _extends2({
    onClick: onVisibilityToggle,
    className: clsx_m_default(classes$j.textButton, className)
  }, restProps), text), (0, import_react.createElement)(StyledIconButton, _extends2({
    onClick: onVisibilityToggle,
    className: clsx_m_default(classes$j.iconButton, className)
  }, restProps, {
    size: "large"
  }), (0, import_react.createElement)(CalendarToday_default, null)));
});
OpenButton.propTypes = {
  onVisibilityToggle: import_prop_types.default.func.isRequired,
  text: import_prop_types.default.string,
  className: import_prop_types.default.string
};
OpenButton.defaultProps = {
  text: "",
  className: void 0
};
var _excluded$u = ["type", "onClick", "className"];
var PREFIX$k = "NavigationButton";
var classes$k = {
  button: "".concat(PREFIX$k, "-button")
};
var StyledIconButton$1 = styled_default(IconButton_default)(function(_ref) {
  var spacing = _ref.theme.spacing;
  return _defineProperty({}, "&.".concat(classes$k.button), _defineProperty({}, "".concat(SMALL_LAYOUT_MEDIA_QUERY), {
    width: spacing(4),
    height: spacing(4),
    padding: 0
  }));
});
var NavigationButton = (0, import_react.memo)(function(_ref3) {
  var type = _ref3.type, onClick2 = _ref3.onClick, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$u);
  return (0, import_react.createElement)(StyledIconButton$1, _extends2({
    onClick: onClick2,
    color: "primary",
    className: clsx_m_default(classes$k.button, className)
  }, restProps, {
    size: "large"
  }), type === "back" ? (0, import_react.createElement)(ChevronLeft_default, null) : (0, import_react.createElement)(ChevronRight_default, null));
});
NavigationButton.propTypes = {
  type: import_prop_types.default.oneOf(["forward", "back"]).isRequired,
  onClick: import_prop_types.default.func,
  className: import_prop_types.default.string
};
NavigationButton.defaultProps = {
  onClick: function onClick() {
  },
  className: void 0
};
var _excluded$v = ["rowComponent", "cellComponent", "headerRowComponent", "headerCellComponent", "className", "cells", "headerCells", "selectedDate", "onCellClick", "formatDate"];
var PREFIX$l = "Table";
var classes$l = {
  table: "".concat(PREFIX$l, "-table")
};
var StyledTableMUI$1 = styled_default(Table_default)(_defineProperty({}, "&.".concat(classes$l.table), {
  width: "320px",
  tableLayout: "fixed"
}));
var Table$1 = function Table2(_ref) {
  var Row4 = _ref.rowComponent, Cell7 = _ref.cellComponent, HeaderRow = _ref.headerRowComponent, HeaderCell3 = _ref.headerCellComponent, className = _ref.className, cells = _ref.cells, headerCells = _ref.headerCells, selectedDate = _ref.selectedDate, onCellClick2 = _ref.onCellClick, formatDate3 = _ref.formatDate, restProps = _objectWithoutProperties(_ref, _excluded$v);
  return (0, import_react.createElement)(StyledTableMUI$1, _extends2({
    className: clsx_m_default(classes$l.table, className)
  }, restProps), (0, import_react.createElement)(TableHead_default, null, (0, import_react.createElement)(HeaderRow, null, headerCells.map(function(cell) {
    var key = formatDate3(cell.startDate, WEEK_DAY_OPTIONS);
    return (0, import_react.createElement)(HeaderCell3, {
      key
    }, key);
  }))), (0, import_react.createElement)(TableBody_default, null, cells.map(function(row) {
    return (0, import_react.createElement)(Row4, {
      key: row[0].startDate.toString()
    }, row.map(function(_ref2) {
      var startDate = _ref2.startDate, otherMonth = _ref2.otherMonth, today = _ref2.today;
      var selected = areDatesSame(selectedDate, startDate);
      return (0, import_react.createElement)(Cell7, {
        key: startDate.toString(),
        otherMonth,
        selected,
        today,
        onClick: function onClick2() {
          onCellClick2(startDate);
        }
      }, formatDate3(startDate, DAY_OPTIONS));
    }));
  })));
};
true ? Table$1.propTypes = {
  // oneOfType is a workaround because withStyles returns react object
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  headerRowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  headerCellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  cells: import_prop_types.default.array.isRequired,
  selectedDate: import_prop_types.default.oneOfType([import_prop_types.default.instanceOf(Date), import_prop_types.default.string, import_prop_types.default.number]),
  formatDate: import_prop_types.default.func.isRequired,
  headerCells: import_prop_types.default.array,
  className: import_prop_types.default.string,
  onCellClick: import_prop_types.default.func
} : void 0;
Table$1.defaultProps = {
  className: void 0,
  headerCells: [],
  onCellClick: function onCellClick() {
  },
  selectedDate: void 0
};
var _excluded$w = ["selectedDate", "firstDayOfWeek", "getCells", "textComponent", "navigationButtonComponent", "navigatorComponent", "rowComponent", "cellComponent", "headerRowComponent", "headerCellComponent", "onSelectedDateChange", "formatDate"];
var Root$2 = function(_React$PureComponent) {
  _inherits(Root3, _React$PureComponent);
  var _super = _createSuper(Root3);
  function Root3(props) {
    var _this;
    _classCallCheck(this, Root3);
    _this = _super.call(this, props);
    var selectedDate = _this.props.selectedDate;
    _this.state = {
      selectedDate,
      currentDate: selectedDate
    };
    _this.onNavigate = _this.onNavigate.bind(_assertThisInitialized(_this));
    _this.onCellClick = _this.onCellClick.bind(_assertThisInitialized(_this));
    return _this;
  }
  _createClass(Root3, [{
    key: "onNavigate",
    value: function onNavigate2(_ref) {
      var back = _ref.back;
      var currentDateState = this.state.currentDate;
      var nextDate = navigateByOneMonth(currentDateState, back);
      this.setState({
        currentDate: nextDate
      });
    }
  }, {
    key: "onCellClick",
    value: function onCellClick2(nextDate) {
      var onSelectedDateChange2 = this.props.onSelectedDateChange;
      this.setState({
        selectedDate: nextDate,
        currentDate: nextDate
      });
      onSelectedDateChange2(nextDate);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, selectedDate = _this$props.selectedDate, firstDayOfWeek = _this$props.firstDayOfWeek, getCells = _this$props.getCells, Text3 = _this$props.textComponent, NavigationButton2 = _this$props.navigationButtonComponent, Navigator3 = _this$props.navigatorComponent, Row4 = _this$props.rowComponent, Cell7 = _this$props.cellComponent, HeaderRow = _this$props.headerRowComponent, HeaderCell3 = _this$props.headerCellComponent, onSelectedDateChange2 = _this$props.onSelectedDateChange, formatDate3 = _this$props.formatDate, restProps = _objectWithoutProperties(_this$props, _excluded$w);
      var _this$state = this.state, selectedDateState = _this$state.selectedDate, currentDate = _this$state.currentDate;
      var cellsData = getCells(currentDate, firstDayOfWeek, 1, Date.now());
      return (0, import_react.createElement)("div", restProps, (0, import_react.createElement)(Navigator3, {
        currentDate,
        textComponent: Text3,
        navigationButtonComponent: NavigationButton2,
        onNavigate: this.onNavigate,
        formatDate: formatDate3
      }), (0, import_react.createElement)(Table$1, {
        headerCells: cellsData[0],
        selectedDate: selectedDateState,
        cells: cellsData,
        rowComponent: Row4,
        cellComponent: Cell7,
        headerRowComponent: HeaderRow,
        headerCellComponent: HeaderCell3,
        onCellClick: this.onCellClick,
        formatDate: formatDate3
      }));
    }
  }]);
  return Root3;
}(import_react.PureComponent);
true ? Root$2.propTypes = {
  // oneOfType is a workaround because withStyles returns react object
  textComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  navigationButtonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  headerRowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  headerCellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  navigatorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  getCells: import_prop_types.default.func.isRequired,
  selectedDate: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]).isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  firstDayOfWeek: import_prop_types.default.number,
  onSelectedDateChange: import_prop_types.default.func
} : void 0;
Root$2.defaultProps = {
  onSelectedDateChange: function onSelectedDateChange() {
  },
  firstDayOfWeek: 0
};
var _excluded$x = ["otherMonth", "selected", "today", "children", "className"];
var PREFIX$m = "Cell";
var classes$m = {
  cell: "".concat(PREFIX$m, "-cell"),
  otherMonth: "".concat(PREFIX$m, "-otherMonth"),
  selected: "".concat(PREFIX$m, "-selected"),
  today: "".concat(PREFIX$m, "-today")
};
var StyledTableCell$5 = styled_default(TableCell_default)(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, palette = _ref$theme.palette, spacing = _ref$theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$m.cell), {
    userSelect: "none",
    border: "none",
    cursor: "pointer",
    padding: 0,
    height: spacing(6),
    textAlign: "center",
    verticalAlign: "middle",
    "&:last-child": {
      padding: 0
    }
  }), _defineProperty(_ref2, "&.".concat(classes$m.otherMonth), {
    color: palette.text.disabled
  }), _defineProperty(_ref2, "& .".concat(classes$m.selected), {
    background: palette.primary.main,
    color: palette.primary.contrastText,
    display: "inline-block",
    width: "2.3em",
    lineHeight: 2.3,
    borderRadius: "50%",
    cursor: "default"
  }), _defineProperty(_ref2, "& .".concat(classes$m.today), {
    color: palette.primary.main,
    fontWeight: "bold"
  }), _ref2;
});
var Cell$4 = function Cell5(_ref3) {
  var _classNames, _classNames2;
  var otherMonth = _ref3.otherMonth, selected = _ref3.selected, today = _ref3.today, children = _ref3.children, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$x);
  return (0, import_react.createElement)(StyledTableCell$5, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$m.cell, true), _defineProperty(_classNames, classes$m.otherMonth, otherMonth), _classNames), className)
  }, restProps), (0, import_react.createElement)("span", {
    className: clsx_m_default((_classNames2 = {}, _defineProperty(_classNames2, classes$m.selected, selected), _defineProperty(_classNames2, classes$m.today, today && !selected), _classNames2))
  }, children));
};
true ? Cell$4.propTypes = {
  children: import_prop_types.default.node,
  otherMonth: import_prop_types.default.bool,
  selected: import_prop_types.default.bool,
  today: import_prop_types.default.bool,
  className: import_prop_types.default.string
} : void 0;
Cell$4.defaultProps = {
  children: void 0,
  otherMonth: false,
  selected: false,
  today: false,
  className: void 0
};
var _excluded$y = ["children", "className"];
var PREFIX$n = "HeaderCell";
var classes$n = {
  cell: "".concat(PREFIX$n, "-cell")
};
var StyledTableCell$6 = styled_default(TableCell_default)(_defineProperty({}, "&.".concat(classes$n.cell), {
  userSelect: "none",
  border: "none",
  padding: 0,
  textAlign: "center",
  verticalAlign: "middle",
  "&:last-child": {
    padding: 0
  }
}));
var HeaderCell = function HeaderCell2(_ref) {
  var children = _ref.children, className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded$y);
  return (0, import_react.createElement)(StyledTableCell$6, _extends2({
    className: clsx_m_default(_defineProperty({}, classes$n.cell, true), className)
  }, restProps), children);
};
true ? HeaderCell.propTypes = {
  children: import_prop_types.default.node,
  className: import_prop_types.default.string
} : void 0;
HeaderCell.defaultProps = {
  children: void 0,
  className: void 0
};
var _excluded$z = ["children"];
var Row$1 = function Row3(_ref) {
  var children = _ref.children, restProps = _objectWithoutProperties(_ref, _excluded$z);
  return (0, import_react.createElement)(TableRow_default, restProps, children);
};
true ? Row$1.propTypes = {
  children: import_prop_types.default.node.isRequired
} : void 0;
var _excluded$A = ["className", "currentDate", "textComponent", "navigationButtonComponent", "onNavigate", "formatDate"];
var PREFIX$o = "Navigator";
var classes$o = {
  navigator: "".concat(PREFIX$o, "-navigator")
};
var StyledToolbar = styled_default(Toolbar_default)(_defineProperty({}, "&.".concat(classes$o.navigator), {
  paddingLeft: 0,
  paddingRight: 0
}));
var Navigator = function Navigator2(_ref) {
  var className = _ref.className, currentDate = _ref.currentDate, Text3 = _ref.textComponent, NavigationButton2 = _ref.navigationButtonComponent, onNavigate2 = _ref.onNavigate, formatDate3 = _ref.formatDate, restProps = _objectWithoutProperties(_ref, _excluded$A);
  return (0, import_react.createElement)(StyledToolbar, _extends2({
    className: clsx_m_default(classes$o.navigator, className)
  }, restProps), (0, import_react.createElement)(NavigationButton2, {
    type: "back",
    onClick: function onClick2() {
      onNavigate2({
        back: true
      });
    }
  }), (0, import_react.createElement)(Text3, {
    currentDate,
    formatDate: formatDate3
  }), (0, import_react.createElement)(NavigationButton2, {
    type: "forward",
    onClick: function onClick2() {
      onNavigate2({
        back: false
      });
    }
  }));
};
true ? Navigator.propTypes = {
  // oneOfType is a workaround because withStyles returns react object
  textComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  navigationButtonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  currentDate: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]).isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  className: import_prop_types.default.string,
  onNavigate: import_prop_types.default.func
} : void 0;
Navigator.defaultProps = {
  className: void 0,
  onNavigate: function onNavigate() {
  }
};
var _excluded$B = ["className", "currentDate", "formatDate"];
var PREFIX$p = "Text";
var classes$p = {
  text: "".concat(PREFIX$p, "-text")
};
var StyledTypography = styled_default(Typography_default)(_defineProperty({}, "&.".concat(classes$p.text), {
  userSelect: "none",
  flex: 1,
  textAlign: "center"
}));
var Text = function Text2(_ref) {
  var className = _ref.className, currentDate = _ref.currentDate, formatDate3 = _ref.formatDate, restProps = _objectWithoutProperties(_ref, _excluded$B);
  return (0, import_react.createElement)(StyledTypography, _extends2({
    variant: "h6",
    className: clsx_m_default(_defineProperty({}, classes$p.text, true), className)
  }, restProps), formatDate3(currentDate, MONTH_YEAR_OPTIONS));
};
true ? Text.propTypes = {
  currentDate: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]).isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  className: import_prop_types.default.string
} : void 0;
Text.defaultProps = {
  className: void 0
};
var DateNavigator2 = withComponents({
  Root: Root$1,
  OpenButton,
  Overlay,
  NavigationButton,
  Calendar: Root$2,
  CalendarNavigator: Navigator,
  CalendarCell: Cell$4,
  CalendarRow: Row$1,
  CalendarHeaderCell: HeaderCell,
  CalendarHeaderRow: Row$1,
  CalendarText: Text,
  CalendarNavigationButton: NavigationButton
})(DateNavigator);
var _excluded$C = ["headerComponent", "contentComponent", "commandButtonComponent", "recurringIconComponent", "appointmentMeta", "appointmentResources", "showOpenButton", "showCloseButton", "showDeleteButton", "visible", "onHide", "commandButtonIds", "onOpenButtonClick", "onDeleteButtonClick", "formatDate"];
var PREFIX$q = "Layout";
var classes$q = {
  popover: "".concat(PREFIX$q, "-popover")
};
var StyledPopover = styled_default(Popover_default)(_defineProperty({}, "& .".concat(classes$q.popover), _defineProperty({
  borderRadius: "8px",
  width: "400px"
}, "".concat(SMALL_LAYOUT_MEDIA_QUERY), {
  width: "300px"
})));
var verticalTopHorizontalCenterOptions = {
  vertical: "top",
  horizontal: "center"
};
var Layout$5 = function Layout3(_ref) {
  var Header3 = _ref.headerComponent, Content3 = _ref.contentComponent, commandButtonComponent = _ref.commandButtonComponent, recurringIconComponent = _ref.recurringIconComponent, appointmentMeta = _ref.appointmentMeta, appointmentResources = _ref.appointmentResources, showOpenButton = _ref.showOpenButton, showCloseButton = _ref.showCloseButton, showDeleteButton = _ref.showDeleteButton, visible = _ref.visible, onHide3 = _ref.onHide, commandButtonIds = _ref.commandButtonIds, onOpenButtonClick3 = _ref.onOpenButtonClick, onDeleteButtonClick = _ref.onDeleteButtonClick, formatDate3 = _ref.formatDate, restProps = _objectWithoutProperties(_ref, _excluded$C);
  var target = appointmentMeta.target, _appointmentMeta$data = appointmentMeta.data, data = _appointmentMeta$data === void 0 ? {} : _appointmentMeta$data;
  return (0, import_react.createElement)(StyledPopover, _extends2({
    open: visible,
    anchorEl: target,
    onClose: onHide3,
    anchorOrigin: verticalTopHorizontalCenterOptions,
    transformOrigin: verticalTopHorizontalCenterOptions,
    PaperProps: {
      className: classes$q.popover
    }
  }, restProps), (0, import_react.createElement)(Header3, {
    appointmentData: data,
    commandButtonComponent,
    showOpenButton,
    showCloseButton,
    showDeleteButton,
    commandButtonIds,
    onOpenButtonClick: onOpenButtonClick3,
    onDeleteButtonClick,
    onHide: onHide3
  }), (0, import_react.createElement)(Content3, {
    appointmentData: data,
    appointmentResources,
    formatDate: formatDate3,
    recurringIconComponent
  }));
};
true ? Layout$5.propTypes = {
  // oneOfType is a workaround because withStyles returns react object
  commandButtonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  headerComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  contentComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  recurringIconComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  showOpenButton: import_prop_types.default.bool.isRequired,
  showCloseButton: import_prop_types.default.bool.isRequired,
  showDeleteButton: import_prop_types.default.bool.isRequired,
  commandButtonIds: import_prop_types.default.object.isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  onOpenButtonClick: import_prop_types.default.func,
  onDeleteButtonClick: import_prop_types.default.func.isRequired,
  appointmentMeta: import_prop_types.default.shape({
    target: import_prop_types.default.oneOfType([import_prop_types.default.object, import_prop_types.default.func]),
    data: import_prop_types.default.object
  }),
  appointmentResources: import_prop_types.default.array,
  visible: import_prop_types.default.bool,
  onHide: import_prop_types.default.func
} : void 0;
Layout$5.defaultProps = {
  onOpenButtonClick: function onOpenButtonClick() {
    return void 0;
  },
  onHide: function onHide() {
    return void 0;
  },
  appointmentMeta: {},
  appointmentResources: [],
  visible: false
};
var _excluded$D = ["appointmentData", "commandButtonComponent", "showOpenButton", "showCloseButton", "showDeleteButton", "commandButtonIds", "onOpenButtonClick", "onDeleteButtonClick", "onHide", "className", "children"];
var PREFIX$r = "Header";
var classes$r = {
  head: "".concat(PREFIX$r, "-head"),
  line: "".concat(PREFIX$r, "-line"),
  flexContainer: "".concat(PREFIX$r, "-flexContainer")
};
var StyledDiv$a = styled_default("div")(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, spacing = _ref$theme.spacing, palette = _ref$theme.palette;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$r.head), {
    position: "relative",
    paddingLeft: spacing(1),
    paddingRight: spacing(0.5),
    paddingTop: spacing(0.25),
    minHeight: spacing(1.5)
  }), _defineProperty(_ref2, "&.".concat(classes$r.flexContainer), {
    display: "flex",
    flexDirection: "row",
    justifyContent: "flex-end",
    alignItems: "flex-start"
  }), _defineProperty(_ref2, "& .".concat(classes$r.line), {
    backgroundColor: palette.action.disabledBackground,
    height: spacing(3.5),
    marginLeft: spacing(1),
    marginRight: spacing(1),
    marginTop: spacing(1.25),
    width: "1px"
  }), _ref2;
});
var Header = function Header2(_ref3) {
  var appointmentData = _ref3.appointmentData, CommandButton3 = _ref3.commandButtonComponent, showOpenButton = _ref3.showOpenButton, showCloseButton = _ref3.showCloseButton, showDeleteButton = _ref3.showDeleteButton, commandButtonIds = _ref3.commandButtonIds, onOpenButtonClick3 = _ref3.onOpenButtonClick, onDeleteButtonClick = _ref3.onDeleteButtonClick, onHide3 = _ref3.onHide, className = _ref3.className, children = _ref3.children, restProps = _objectWithoutProperties(_ref3, _excluded$D);
  var handleOpenButtonClick = function handleOpenButtonClick2() {
    onHide3();
    onOpenButtonClick3();
  };
  return (0, import_react.createElement)(StyledDiv$a, _extends2({
    className: clsx_m_default(classes$r.head, classes$r.flexContainer, className)
  }, restProps), showOpenButton && (0, import_react.createElement)(CommandButton3, {
    id: commandButtonIds.open,
    onExecute: handleOpenButtonClick
  }), showDeleteButton && (0, import_react.createElement)(CommandButton3, {
    id: commandButtonIds.delete,
    onExecute: onDeleteButtonClick
  }), children, showCloseButton && (0, import_react.createElement)(StyledDiv$a, {
    className: classes$r.flexContainer
  }, (0, import_react.createElement)("div", {
    className: classes$r.line
  }), (0, import_react.createElement)(CommandButton3, {
    id: commandButtonIds.close,
    onExecute: onHide3
  })));
};
true ? Header.propTypes = {
  appointmentData: import_prop_types.default.object,
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  commandButtonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  showOpenButton: import_prop_types.default.bool.isRequired,
  showCloseButton: import_prop_types.default.bool.isRequired,
  showDeleteButton: import_prop_types.default.bool.isRequired,
  commandButtonIds: import_prop_types.default.object.isRequired,
  onOpenButtonClick: import_prop_types.default.func,
  onDeleteButtonClick: import_prop_types.default.func.isRequired,
  onHide: import_prop_types.default.func
} : void 0;
Header.defaultProps = {
  appointmentData: void 0,
  className: void 0,
  children: void 0,
  onOpenButtonClick: function onOpenButtonClick2() {
    return void 0;
  },
  onHide: function onHide2() {
    return void 0;
  }
};
var _excluded$E = ["className", "children", "appointmentData", "appointmentResources", "formatDate", "recurringIconComponent"];
var PREFIX$s = "Content";
var classes$s = {
  content: "".concat(PREFIX$s, "-content"),
  text: "".concat(PREFIX$s, "-text"),
  title: "".concat(PREFIX$s, "-title"),
  icon: "".concat(PREFIX$s, "-icon"),
  lens: "".concat(PREFIX$s, "-lens"),
  lensMini: "".concat(PREFIX$s, "-lensMini"),
  textCenter: "".concat(PREFIX$s, "-textCenter"),
  dateAndTitle: "".concat(PREFIX$s, "-dateAndTitle"),
  titleContainer: "".concat(PREFIX$s, "-titleContainer"),
  contentContainer: "".concat(PREFIX$s, "-contentContainer"),
  resourceContainer: "".concat(PREFIX$s, "-resourceContainer"),
  recurringIcon: "".concat(PREFIX$s, "-recurringIcon"),
  relativeContainer: "".concat(PREFIX$s, "-relativeContainer")
};
var StyledDiv$b = styled_default("div")(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, spacing = _ref$theme.spacing, palette = _ref$theme.palette, typography = _ref$theme.typography, resources = _ref.resources;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$s.content), _objectSpread2({
    padding: spacing(1.5, 1),
    paddingTop: spacing(1),
    backgroundColor: palette.background.paper,
    boxSizing: "border-box"
  }, typography.body2)), _defineProperty(_ref2, "& .".concat(classes$s.text), {
    display: "inline-block"
  }), _defineProperty(_ref2, "& .".concat(classes$s.title), _objectSpread2(_objectSpread2({}, typography.h6), {}, {
    color: palette.text.secondary,
    fontWeight: typography.fontWeightBold,
    overflow: "hidden",
    textOverflow: "ellipsis"
  })), _defineProperty(_ref2, "& .".concat(classes$s.icon), {
    verticalAlign: "middle",
    color: palette.action.active
  }), _defineProperty(_ref2, "& .".concat(classes$s.lens), {
    color: getAppointmentColor(300, getResourceColor(resources), palette.primary),
    width: spacing(4.5),
    height: spacing(4.5),
    verticalAlign: "super",
    position: "absolute",
    left: "50%",
    transform: "translate(-50%,0)"
  }), _defineProperty(_ref2, "& .".concat(classes$s.lensMini), {
    width: spacing(2.5),
    height: spacing(2.5)
  }), _defineProperty(_ref2, "& .".concat(classes$s.textCenter), {
    textAlign: "center",
    height: spacing(2.5)
  }), _defineProperty(_ref2, "& .".concat(classes$s.dateAndTitle), {
    lineHeight: 1.4
  }), _defineProperty(_ref2, "& .".concat(classes$s.titleContainer), {
    paddingBottom: spacing(2)
  }), _defineProperty(_ref2, "& .".concat(classes$s.contentContainer), {
    paddingBottom: spacing(1.5)
  }), _defineProperty(_ref2, "& .".concat(classes$s.resourceContainer), {
    paddingBottom: spacing(0.25)
  }), _defineProperty(_ref2, "& .".concat(classes$s.recurringIcon), {
    position: "absolute",
    paddingTop: spacing(0.875),
    left: "50%",
    transform: "translate(-50%,0)",
    color: palette.background.paper,
    width: spacing(2.625),
    height: spacing(2.625)
  }), _defineProperty(_ref2, "& .".concat(classes$s.relativeContainer), {
    position: "relative",
    width: "100%",
    height: "100%"
  }), _ref2;
});
var Content = function Content2(_ref3) {
  var className = _ref3.className, children = _ref3.children, appointmentData = _ref3.appointmentData, appointmentResources = _ref3.appointmentResources, formatDate3 = _ref3.formatDate, RecurringIcon = _ref3.recurringIconComponent, restProps = _objectWithoutProperties(_ref3, _excluded$E);
  var weekDays = viewBoundText(appointmentData.startDate, appointmentData.endDate, WEEKDAY_INTERVAL, appointmentData.startDate, 1, formatDate3);
  return (0, import_react.createElement)(StyledDiv$b, _extends2({
    resources: appointmentResources,
    className: clsx_m_default(classes$s.content, className)
  }, restProps), (0, import_react.createElement)(Grid_default, {
    container: true,
    alignItems: "flex-start",
    className: classes$s.titleContainer
  }, (0, import_react.createElement)(Grid_default, {
    item: true,
    xs: 2
  }, (0, import_react.createElement)("div", {
    className: classes$s.relativeContainer
  }, (0, import_react.createElement)(Lens_default, {
    className: classes$s.lens
  }), !!appointmentData.rRule && (0, import_react.createElement)(RecurringIcon, {
    className: classes$s.recurringIcon
  }))), (0, import_react.createElement)(Grid_default, {
    item: true,
    xs: 10
  }, (0, import_react.createElement)("div", null, (0, import_react.createElement)("div", {
    className: clsx_m_default(classes$s.title, classes$s.dateAndTitle)
  }, appointmentData.title), (0, import_react.createElement)("div", {
    className: clsx_m_default(classes$s.text, classes$s.dateAndTitle)
  }, weekDays)))), (0, import_react.createElement)(Grid_default, {
    container: true,
    alignItems: "center",
    className: classes$s.contentContainer
  }, (0, import_react.createElement)(Grid_default, {
    item: true,
    xs: 2,
    className: classes$s.textCenter
  }, (0, import_react.createElement)(AccessTime_default, {
    className: classes$s.icon
  })), (0, import_react.createElement)(Grid_default, {
    item: true,
    xs: 10
  }, (0, import_react.createElement)("div", {
    className: classes$s.text
  }, "".concat(formatDate3(appointmentData.startDate, HOUR_MINUTE_OPTIONS), "\n              - ").concat(formatDate3(appointmentData.endDate, HOUR_MINUTE_OPTIONS))))), appointmentResources.map(function(resourceItem) {
    return (0, import_react.createElement)(Grid_default, {
      container: true,
      alignItems: "center",
      className: classes$s.resourceContainer,
      key: "".concat(resourceItem.fieldName, "_").concat(resourceItem.id)
    }, (0, import_react.createElement)(Grid_default, {
      item: true,
      xs: 2,
      className: classes$s.textCenter
    }, (0, import_react.createElement)("div", {
      className: classes$s.relativeContainer
    }, (0, import_react.createElement)(Lens_default, {
      className: clsx_m_default(classes$s.lens, classes$s.lensMini),
      style: {
        color: getAppointmentColor(300, resourceItem.color)
      }
    }))), (0, import_react.createElement)(Grid_default, {
      item: true,
      xs: 10
    }, (0, import_react.createElement)("div", {
      className: classes$s.text
    }, resourceItem.text)));
  }), children);
};
true ? Content.propTypes = {
  appointmentData: import_prop_types.default.object,
  appointmentResources: import_prop_types.default.array,
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  formatDate: import_prop_types.default.func.isRequired,
  recurringIconComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired
} : void 0;
Content.defaultProps = {
  appointmentData: void 0,
  appointmentResources: [],
  className: void 0,
  children: void 0
};
var _excluded$F = ["id", "onExecute"];
var getIcon = function getIcon2(id) {
  if (id === OPEN_COMMAND_BUTTON) {
    return (0, import_react.createElement)(Edit_default, null);
  }
  if (id === CLOSE_COMMAND_BUTTON) {
    return (0, import_react.createElement)(Close_default, null);
  }
  if (id === DELETE_COMMAND_BUTTON) {
    return (0, import_react.createElement)(Delete_default, null);
  }
  return null;
};
var CommandButton = function CommandButton2(_ref) {
  var id = _ref.id, onExecute2 = _ref.onExecute, restProps = _objectWithoutProperties(_ref, _excluded$F);
  return (0, import_react.createElement)(IconButton_default, _extends2({
    onClick: onExecute2
  }, restProps, {
    size: "large"
  }), getIcon(id));
};
true ? CommandButton.propTypes = {
  id: import_prop_types.default.string,
  onExecute: import_prop_types.default.func
} : void 0;
CommandButton.defaultProps = {
  onExecute: function onExecute() {
    return void 0;
  },
  id: ""
};
var AppointmentTooltip2 = withComponents({
  Layout: Layout$5,
  Header,
  Content,
  CommandButton,
  RecurringIcon: Repeat_default
})(AppointmentTooltip);
var _excluded$G = ["value", "availableOptions", "onValueChange", "readOnly", "inputClasses"];
var PREFIX$t = "OutlinedSelect";
var classes$t = {
  root: "".concat(PREFIX$t, "-root"),
  input: "".concat(PREFIX$t, "-input"),
  menuItem: "".concat(PREFIX$t, "-menuItem"),
  inputRoot: "".concat(PREFIX$t, "-inputRoot")
};
var StyledSelect = styled_default(Select_default)(function(_ref) {
  var typography = _ref.theme.typography;
  return _defineProperty({}, "&.".concat(classes$t.root), {
    fontSize: typography.fontSize + 2
  });
});
var StyledOutlinedInput = styled_default(OutlinedInput_default)(function() {
  var _ref3;
  return _ref3 = {}, _defineProperty(_ref3, "& .".concat(classes$t.input), {
    fontWeight: "bold",
    textTransform: "uppercase"
  }), _defineProperty(_ref3, "&.".concat(classes$t.inputRoot), {
    width: "100%"
  }), _ref3;
});
var OutlinedSelect = (0, import_react.memo)(function(_ref4) {
  var value = _ref4.value, availableOptions = _ref4.availableOptions, onValueChange5 = _ref4.onValueChange, readOnly = _ref4.readOnly, inputClasses = _ref4.inputClasses, restProps = _objectWithoutProperties(_ref4, _excluded$G);
  var handleChange = function handleChange2(event) {
    if (event.target.value !== value) onValueChange5(event.target.value);
  };
  return (0, import_react.createElement)(StyledSelect, _extends2({
    disabled: readOnly,
    classes: {
      root: classes$t.root
    },
    value,
    onChange: handleChange,
    input: (0, import_react.createElement)(StyledOutlinedInput, {
      classes: inputClasses || {
        input: classes$t.input,
        root: classes$t.inputRoot
      }
    })
  }, restProps), availableOptions.map(function(option) {
    return (0, import_react.createElement)(MenuItem_default, {
      value: option.id,
      key: option.id,
      className: classes$t.menuItem
    }, option.text);
  }));
});
true ? OutlinedSelect.propTypes = {
  onValueChange: import_prop_types.default.func,
  value: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number]).isRequired,
  availableOptions: import_prop_types.default.arrayOf(import_prop_types.default.shape({
    id: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number]),
    text: import_prop_types.default.string.isRequired
  })),
  readOnly: import_prop_types.default.bool,
  inputClasses: import_prop_types.default.object
} : void 0;
OutlinedSelect.defaultProps = {
  readOnly: false,
  onValueChange: function onValueChange() {
    return void 0;
  },
  availableOptions: [],
  inputClasses: null
};
var _excluded$H = ["currentView", "availableViews", "onChange"];
var PREFIX$u = "Switcher";
var classes$u = {
  input: "".concat(PREFIX$u, "-input"),
  inputRoot: "".concat(PREFIX$u, "-inputRoot")
};
var StyledOutlinedSelect = styled_default(OutlinedSelect)(function(_ref) {
  var _ref2;
  var spacing = _ref.theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$u.input), _defineProperty({
    padding: spacing(1.25, 1.75),
    paddingRight: spacing(4),
    textTransform: "uppercase"
  }, "".concat(LAYOUT_MEDIA_QUERY), {
    fontSize: "0.75rem"
  })), _defineProperty(_ref2, "& .".concat(classes$u.inputRoot), {
    marginLeft: spacing(0.5),
    "&:first-of-type": {
      marginLeft: 0
    }
  }), _ref2;
});
var Switcher = (0, import_react.memo)(function(_ref3) {
  var currentView = _ref3.currentView, availableViews = _ref3.availableViews, onChange = _ref3.onChange, restProps = _objectWithoutProperties(_ref3, _excluded$H);
  var availableOptions = availableViews.map(function(_ref4) {
    var name = _ref4.name, displayName = _ref4.displayName;
    return {
      id: name,
      text: displayName
    };
  });
  return (0, import_react.createElement)(StyledOutlinedSelect, _extends2({
    value: currentView.name,
    availableOptions,
    onValueChange: onChange,
    inputClasses: {
      input: classes$u.input,
      root: classes$u.inputRoot
    }
  }, restProps));
});
true ? Switcher.propTypes = {
  onChange: import_prop_types.default.func.isRequired,
  currentView: import_prop_types.default.shape({
    name: import_prop_types.default.string.isRequired,
    displayName: import_prop_types.default.string.isRequired
  }).isRequired,
  availableViews: import_prop_types.default.arrayOf(import_prop_types.default.shape({
    name: import_prop_types.default.string.isRequired,
    displayName: import_prop_types.default.string.isRequired
  }))
} : void 0;
Switcher.defaultProps = {
  availableViews: []
};
var ViewSwitcher2 = withComponents({
  Switcher
})(ViewSwitcher);
var _excluded$I = ["setCellElementsMeta", "cellsData", "className", "cellComponent", "rowComponent", "formatDate"];
var PREFIX$v = "Layout";
var classes$v = {
  table: "".concat(PREFIX$v, "-table")
};
var StyledTable$1 = styled_default(Table_default)(_defineProperty({}, "&.".concat(classes$v.table), {
  tableLayout: "fixed"
}));
var Layout$6 = (0, import_react.memo)(function(_ref) {
  var setCellElementsMeta = _ref.setCellElementsMeta, cellsData = _ref.cellsData, className = _ref.className, Cell7 = _ref.cellComponent, Row4 = _ref.rowComponent, formatDate3 = _ref.formatDate, restProps = _objectWithoutProperties(_ref, _excluded$I);
  var tableRef = (0, import_react.useRef)(null);
  (0, import_react.useEffect)(function() {
    var tableElement = tableRef.current;
    setCellElementsMeta(cellsMeta(tableElement));
  });
  return (0, import_react.createElement)(StyledTable$1, _extends2({
    ref: tableRef,
    className: clsx_m_default(classes$v.table, className)
  }, restProps), (0, import_react.createElement)(TableBody_default, null, (0, import_react.createElement)(Row4, null, cellsData.map(function(_ref2) {
    var startDate = _ref2.startDate, endDate = _ref2.endDate, endOfGroup = _ref2.endOfGroup, groupingInfo = _ref2.groupingInfo;
    return (0, import_react.createElement)(Cell7, {
      key: getViewCellKey(startDate, groupingInfo),
      startDate,
      endDate,
      endOfGroup,
      hasRightBorder: endOfGroup,
      groupingInfo
    });
  }))));
});
true ? Layout$6.propTypes = {
  formatDate: import_prop_types.default.func.isRequired,
  cellsData: import_prop_types.default.arrayOf(Array).isRequired,
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  setCellElementsMeta: import_prop_types.default.func.isRequired,
  className: import_prop_types.default.string
} : void 0;
Layout$6.defaultProps = {
  className: void 0
};
var _excluded$J = ["className", "children", "startDate", "endDate", "endOfGroup", "groupingInfo", "groupOrientation", "hasRightBorder"];
var PREFIX$w = "Cell";
var classes$w = {
  cell: "".concat(PREFIX$w, "-cell"),
  brightRightBorder: "".concat(PREFIX$w, "-brightRightBorder")
};
var StyledTableCell$7 = styled_default(TableCell_default)(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$w.cell), {
    padding: 0,
    height: theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.ALL_DAY_PANEL]),
    boxSizing: "border-box",
    borderRight: getBorder(theme),
    "&:last-child": {
      borderRight: "none"
    },
    "&:hover": {
      backgroundColor: theme.palette.action.hover
    },
    "&:focus": {
      backgroundColor: alpha(theme.palette.primary.main, 0.15),
      outline: 0
    },
    "tr:last-child &": {
      borderBottom: "none"
    }
  }), _defineProperty(_ref2, "&.".concat(classes$w.brightRightBorder), {
    borderRight: getBrightBorder(theme)
  }), _ref2;
});
var Cell$5 = function Cell6(_ref3) {
  var _classNames;
  var className = _ref3.className, children = _ref3.children, startDate = _ref3.startDate, endDate = _ref3.endDate, endOfGroup = _ref3.endOfGroup, groupingInfo = _ref3.groupingInfo, groupOrientation = _ref3.groupOrientation, hasRightBorder = _ref3.hasRightBorder, restProps = _objectWithoutProperties(_ref3, _excluded$J);
  return (0, import_react.createElement)(StyledTableCell$7, _extends2({
    tabIndex: 0,
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$w.cell, true), _defineProperty(_classNames, classes$w.brightRightBorder, groupOrientation === HORIZONTAL_GROUP_ORIENTATION && (endOfGroup || hasRightBorder)), _classNames), className)
  }, restProps), children);
};
true ? Cell$5.propTypes = {
  startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  hasRightBorder: import_prop_types.default.bool,
  endOfGroup: import_prop_types.default.bool,
  groupingInfo: import_prop_types.default.arrayOf(import_prop_types.default.object),
  groupOrientation: import_prop_types.default.oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION])
} : void 0;
Cell$5.defaultProps = {
  children: null,
  startDate: void 0,
  endDate: void 0,
  className: void 0,
  hasRightBorder: false,
  endOfGroup: false,
  groupingInfo: void 0,
  groupOrientation: HORIZONTAL_GROUP_ORIENTATION
};
var _excluded$K = ["getMessage", "className", "fixedHeight"];
var PREFIX$x = "TitleCell";
var classes$x = {
  container: "".concat(PREFIX$x, "-container"),
  content: "".concat(PREFIX$x, "-content"),
  title: "".concat(PREFIX$x, "-title"),
  fixedHeight: "".concat(PREFIX$x, "-fixedHeight")
};
var StyledDiv$c = styled_default("div")(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$x.container), {
    userSelect: "none",
    height: "100%",
    display: "flex",
    flexDirection: "column",
    justifyContent: "flex-end",
    position: "relative"
  }), _defineProperty(_ref2, "&.".concat(classes$x.fixedHeight), {
    height: theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.ALL_DAY_PANEL]),
    width: "100%"
  }), _defineProperty(_ref2, "&.".concat(classes$x.content), {
    width: theme.spacing(10),
    boxSizing: "border-box",
    height: theme.spacing(5.75),
    textAlign: "right",
    display: "flex",
    alignItems: "center",
    justifyContent: "flex-end"
  }), _ref2;
});
var StyledTypography$1 = styled_default(Typography_default)(function(_ref3) {
  var theme = _ref3.theme;
  return _defineProperty({}, "&.".concat(classes$x.title), _objectSpread2(_objectSpread2({
    paddingRight: theme.spacing(2)
  }, theme.typography.caption), {}, {
    color: theme.palette.text.secondary
  }));
});
var TitleCell = (0, import_react.memo)(function(_ref5) {
  var _classNames, _classNames2;
  var getMessage8 = _ref5.getMessage, className = _ref5.className, fixedHeight = _ref5.fixedHeight, restProps = _objectWithoutProperties(_ref5, _excluded$K);
  return (0, import_react.createElement)(StyledDiv$c, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$x.container, true), _defineProperty(_classNames, classes$x.fixedHeight, fixedHeight), _classNames), className)
  }, restProps), (0, import_react.createElement)(StyledDiv$c, {
    className: clsx_m_default((_classNames2 = {}, _defineProperty(_classNames2, classes$x.content, true), _defineProperty(_classNames2, classes$x.fixedHeight, fixedHeight), _classNames2), className)
  }, (0, import_react.createElement)(StyledTypography$1, {
    className: classes$x.title,
    variant: "body1"
  }, getMessage8("allDay"))));
});
TitleCell.propTypes = {
  getMessage: import_prop_types.default.func.isRequired,
  className: import_prop_types.default.string,
  fixedHeight: import_prop_types.default.bool
};
TitleCell.defaultProps = {
  className: void 0,
  fixedHeight: false
};
var Container$1 = styled_default(ContainerBase)(function() {
  return _defineProperty({}, "&.".concat(classes.container), {
    position: "relative",
    display: "table",
    minWidth: "100%"
  });
});
var AllDayPanel2 = withComponents({
  AppointmentLayer: Container,
  Layout: Layout$6,
  Cell: Cell$5,
  Row,
  TitleCell,
  Container: Container$1
})(AllDayPanel);
var _excluded$L = ["basicLayoutComponent", "commandLayoutComponent", "recurrenceLayoutComponent", "isRecurrence", "children", "className"];
var _styled$1;
var PREFIX$y = "Layout";
var classes$y = {
  root: "".concat(PREFIX$y, "-root"),
  container: "".concat(PREFIX$y, "-container"),
  stickyContainer: "".concat(PREFIX$y, "-stickyContainer")
};
var StyledDiv$d = styled_default("div")((_styled$1 = {}, _defineProperty(_styled$1, "&.".concat(classes$y.root), {
  height: "100%",
  margin: "0 auto",
  overflowY: "auto"
}), _defineProperty(_styled$1, "& .".concat(classes$y.container), _defineProperty({
  display: "flex"
}, "".concat(LAYOUT_MEDIA_QUERY), {
  flexDirection: "column"
})), _defineProperty(_styled$1, "& .".concat(classes$y.stickyContainer), {
  display: "flex",
  position: "sticky",
  top: 0,
  zIndex: 1
}), _styled$1));
var Layout$7 = function Layout4(_ref) {
  var BasicLayout = _ref.basicLayoutComponent, CommandLayout = _ref.commandLayoutComponent, RecurrenceLayout = _ref.recurrenceLayoutComponent, isRecurrence = _ref.isRecurrence, children = _ref.children, className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded$L);
  return (0, import_react.createElement)(StyledDiv$d, _extends2({
    className: clsx_m_default(classes$y.root, className)
  }, restProps), (0, import_react.createElement)("div", {
    className: classes$y.stickyContainer
  }, (0, import_react.createElement)(CommandLayout, null)), (0, import_react.createElement)("div", {
    className: classes$y.container
  }, (0, import_react.createElement)(BasicLayout, null), (0, import_react.createElement)(RecurrenceLayout, null)), children);
};
true ? Layout$7.propTypes = {
  basicLayoutComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  commandLayoutComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  recurrenceLayoutComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  isRecurrence: import_prop_types.default.bool
} : void 0;
Layout$7.defaultProps = {
  className: void 0,
  isRecurrence: false,
  children: null
};
var _excluded$M = ["value", "placeholder", "className", "readOnly", "onValueChange", "type"];
var PREFIX$z = "TextEditor";
var classes$z = {
  editor: "".concat(PREFIX$z, "-editor"),
  title: "".concat(PREFIX$z, "-title")
};
var StyledTextField = styled_default(TextField_default)(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$z.editor), {
    width: "100%",
    marginTop: theme.spacing(0.375),
    marginBottom: theme.spacing(0.125)
  }), _defineProperty(_ref2, "& .".concat(classes$z.title), _objectSpread2({}, theme.typography.h6)), _ref2;
});
var TextEditor = (0, import_react.memo)(function(_ref3) {
  var value = _ref3.value, placeholder = _ref3.placeholder, className = _ref3.className, readOnly = _ref3.readOnly, onValueChange5 = _ref3.onValueChange, type = _ref3.type, restProps = _objectWithoutProperties(_ref3, _excluded$M);
  var textFieldType = type === NUMBER_EDITOR ? "number" : "text";
  var notesTextEditor = type === MULTILINE_TEXT_EDITOR;
  return (0, import_react.createElement)(StyledTextField, _extends2({
    className: clsx_m_default(classes$z.editor, className),
    value,
    variant: notesTextEditor ? "outlined" : void 0,
    disabled: readOnly,
    onChange: function onChange(_ref4) {
      var target = _ref4.target;
      return onValueChange5(target.value);
    },
    InputProps: {
      className: clsx_m_default(_defineProperty({}, classes$z.title, type === TITLE_TEXT_EDITOR))
    },
    multiline: notesTextEditor,
    rows: "5",
    type: textFieldType,
    hiddenLabel: true,
    margin: "normal",
    placeholder
  }, restProps));
});
true ? TextEditor.propTypes = {
  value: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number]),
  placeholder: import_prop_types.default.string,
  className: import_prop_types.default.string,
  readOnly: import_prop_types.default.bool,
  onValueChange: import_prop_types.default.func,
  type: import_prop_types.default.string
} : void 0;
TextEditor.defaultProps = {
  value: "",
  placeholder: void 0,
  className: void 0,
  readOnly: false,
  onValueChange: function onValueChange2() {
    return void 0;
  },
  type: ORDINARY_TEXT_EDITOR
};
var _excluded$N = ["children", "locale", "className", "getMessage", "readOnly", "onFieldChange", "appointmentData", "fullSize", "resources", "appointmentResources", "textEditorComponent", "dateEditorComponent", "selectComponent", "labelComponent", "booleanEditorComponent", "resourceEditorComponent"];
var PREFIX$A = "Layout";
var classes$A = {
  root: "".concat(PREFIX$A, "-root"),
  fullSize: "".concat(PREFIX$A, "-fullSize"),
  halfSize: "".concat(PREFIX$A, "-halfSize"),
  labelWithMargins: "".concat(PREFIX$A, "-labelWithMargins"),
  notesEditor: "".concat(PREFIX$A, "-notesEditor"),
  dateEditor: "".concat(PREFIX$A, "-dateEditor"),
  dividerLabel: "".concat(PREFIX$A, "-dividerLabel"),
  booleanEditors: "".concat(PREFIX$A, "-booleanEditors"),
  dateEditors: "".concat(PREFIX$A, "-dateEditors")
};
var StyledDiv$e = styled_default("div")(function(_ref) {
  var _mediaMaxWidth, _ref2;
  var _ref$theme = _ref.theme, spacing = _ref$theme.spacing, typography = _ref$theme.typography;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$A.root), _defineProperty({
    width: "650px",
    paddingTop: spacing(3),
    paddingBottom: spacing(3),
    paddingLeft: spacing(4),
    paddingRight: spacing(4),
    boxSizing: "border-box",
    transition: "all ".concat(TRANSITIONS_TIME, "ms cubic-bezier(0, 0, 0.2, 1)")
  }, "".concat(LAYOUT_MEDIA_QUERY), {
    width: "100%",
    maxWidth: "700px",
    paddingRight: spacing(2),
    paddingLeft: spacing(2),
    paddingBottom: 0
  })), _defineProperty(_ref2, "&.".concat(classes$A.fullSize), {
    paddingBottom: spacing(3)
  }), _defineProperty(_ref2, "&.".concat(classes$A.halfSize), {
    "@media (min-width: 700px) and (max-width: 850px)": {
      width: "400px"
    },
    "@media (min-width: 850px) and (max-width: 1000px)": {
      width: "480px"
    },
    "@media (min-width: 1000px) and (max-width: 1150px)": {
      width: "560px"
    }
  }), _defineProperty(_ref2, "& .".concat(classes$A.labelWithMargins), {
    marginTop: spacing(2)
  }), _defineProperty(_ref2, "& .".concat(classes$A.notesEditor), {
    marginBottom: spacing(0.5),
    marginTop: spacing(0.5)
  }), _defineProperty(_ref2, "& .".concat(classes$A.dateEditor), {
    width: "45%",
    paddingTop: "0px!important",
    marginTop: spacing(2),
    paddingBottom: "0px!important",
    marginBottom: 0
  }), _defineProperty(_ref2, "& .".concat(classes$A.dividerLabel), _objectSpread2(_objectSpread2({}, typography.body2), {}, {
    width: "10%",
    textAlign: "center",
    paddingTop: spacing(2)
  })), _defineProperty(_ref2, "& .".concat(classes$A.booleanEditors), {
    marginTop: spacing(0.875)
  }), _defineProperty(_ref2, "@media (max-width: 570px)", (_mediaMaxWidth = {}, _defineProperty(_mediaMaxWidth, "& .".concat(classes$A.dateEditors), {
    flexDirection: "column"
  }), _defineProperty(_mediaMaxWidth, "& .".concat(classes$A.booleanEditors), {
    flexDirection: "column",
    marginTop: spacing(1.875)
  }), _defineProperty(_mediaMaxWidth, "& .".concat(classes$A.dateEditor), {
    width: "100%",
    "&:first-of-type": {
      marginBottom: 0
    },
    "&:last-child": {
      marginTop: spacing(2)
    }
  }), _defineProperty(_mediaMaxWidth, "& .".concat(classes$A.dividerLabel), {
    display: "none"
  }), _mediaMaxWidth)), _ref2;
});
var Layout$8 = function Layout5(_ref3) {
  var _classNames;
  var children = _ref3.children, locale = _ref3.locale, className = _ref3.className, getMessage8 = _ref3.getMessage, readOnly = _ref3.readOnly, onFieldChange10 = _ref3.onFieldChange, appointmentData = _ref3.appointmentData, fullSize = _ref3.fullSize, resources = _ref3.resources, appointmentResources = _ref3.appointmentResources, TextEditor2 = _ref3.textEditorComponent, DateEditor2 = _ref3.dateEditorComponent, Select2 = _ref3.selectComponent, Label3 = _ref3.labelComponent, BooleanEditor2 = _ref3.booleanEditorComponent, ResourceEditor2 = _ref3.resourceEditorComponent, restProps = _objectWithoutProperties(_ref3, _excluded$N);
  var changeTitle = (0, import_react.useCallback)(function(title) {
    return onFieldChange10({
      title
    });
  }, [onFieldChange10]);
  var changeNotes = (0, import_react.useCallback)(function(notes) {
    return onFieldChange10({
      notes
    });
  }, [onFieldChange10]);
  var changeStartDate = (0, import_react.useCallback)(function(startDate2) {
    return onFieldChange10({
      startDate: startDate2
    });
  }, [onFieldChange10]);
  var changeEndDate = (0, import_react.useCallback)(function(endDate) {
    return onFieldChange10({
      endDate
    });
  }, [onFieldChange10]);
  var changeAllDay = (0, import_react.useCallback)(function(allDay) {
    return onFieldChange10({
      allDay
    });
  }, [onFieldChange10]);
  var changeResources = (0, import_react.useCallback)(function(resource) {
    return onFieldChange10(resource);
  }, [onFieldChange10]);
  var rRule = appointmentData.rRule, startDate = appointmentData.startDate;
  var changeFrequency = (0, import_react.useCallback)(function(value) {
    return handleChangeFrequency(value ? REPEAT_TYPES.DAILY : REPEAT_TYPES.NEVER, rRule, startDate, onFieldChange10);
  }, [rRule, startDate, onFieldChange10]);
  return (0, import_react.createElement)(StyledDiv$e, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$A.root, true), _defineProperty(_classNames, classes$A.fullSize, fullSize), _defineProperty(_classNames, classes$A.halfSize, !fullSize), _classNames), className)
  }, restProps), (0, import_react.createElement)(Label3, {
    text: getMessage8("detailsLabel"),
    type: TITLE
  }), (0, import_react.createElement)(TextEditor2, {
    placeholder: getMessage8("titleLabel"),
    readOnly,
    type: TITLE_TEXT_EDITOR,
    value: appointmentData.title,
    onValueChange: changeTitle
  }), (0, import_react.createElement)(Grid_default, {
    container: true,
    alignItems: "center",
    className: classes$A.dateEditors
  }, (0, import_react.createElement)(DateEditor2, {
    className: classes$A.dateEditor,
    readOnly,
    value: appointmentData.startDate,
    onValueChange: changeStartDate,
    locale,
    excludeTime: appointmentData.allDay
  }), (0, import_react.createElement)(Label3, {
    text: "-",
    className: classes$A.dividerLabel
  }), (0, import_react.createElement)(DateEditor2, {
    className: classes$A.dateEditor,
    readOnly,
    value: appointmentData.endDate,
    onValueChange: changeEndDate,
    locale,
    excludeTime: appointmentData.allDay
  })), (0, import_react.createElement)(Grid_default, {
    container: true,
    className: classes$A.booleanEditors
  }, (0, import_react.createElement)(BooleanEditor2, {
    label: getMessage8("allDayLabel"),
    readOnly,
    value: appointmentData.allDay,
    onValueChange: changeAllDay
  }), (0, import_react.createElement)(BooleanEditor2, {
    label: getMessage8("repeatLabel"),
    readOnly,
    value: !!appointmentData.rRule,
    onValueChange: changeFrequency
  })), (0, import_react.createElement)(Label3, {
    text: getMessage8("moreInformationLabel"),
    type: TITLE,
    className: classes$A.labelWithMargins
  }), (0, import_react.createElement)(TextEditor2, {
    placeholder: getMessage8("notesLabel"),
    readOnly,
    type: MULTILINE_TEXT_EDITOR,
    value: appointmentData.notes,
    onValueChange: changeNotes,
    className: classes$A.notesEditor
  }), resources.map(function(resource) {
    return (0, import_react.createElement)(import_react.Fragment, {
      key: resource.fieldName
    }, (0, import_react.createElement)(ResourceEditor2, {
      label: resource.title,
      readOnly,
      resource,
      appointmentResources,
      onResourceChange: changeResources
    }));
  }), children);
};
true ? Layout$8.propTypes = {
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  dateEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  booleanEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  resourceEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  locale: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]).isRequired,
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  getMessage: import_prop_types.default.func.isRequired,
  onFieldChange: import_prop_types.default.func,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  resources: import_prop_types.default.array,
  appointmentResources: import_prop_types.default.array,
  readOnly: import_prop_types.default.bool,
  fullSize: import_prop_types.default.bool.isRequired
} : void 0;
Layout$8.defaultProps = {
  onFieldChange: function onFieldChange() {
    return void 0;
  },
  resources: [],
  appointmentResources: [],
  className: void 0,
  readOnly: false,
  children: null
};
var _excluded$O = ["commandButtonComponent", "onCommitButtonClick", "onCancelButtonClick", "onDeleteButtonClick", "getMessage", "children", "className", "fullSize", "readOnly", "disableSaveButton", "hideDeleteButton"];
var PREFIX$B = "Layout";
var classes$B = {
  root: "".concat(PREFIX$B, "-root"),
  basic: "".concat(PREFIX$B, "-basic"),
  fullSize: "".concat(PREFIX$B, "-fullSize"),
  line: "".concat(PREFIX$B, "-line")
};
var StyledGrid = styled_default(Grid_default)(function(_ref) {
  var _$concat, _ref2;
  var _ref$theme = _ref.theme, spacing = _ref$theme.spacing, palette = _ref$theme.palette;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$B.root), {
    display: "flex",
    justifyContent: "flex-end",
    paddingTop: spacing(2),
    paddingLeft: spacing(2),
    paddingRight: spacing(4),
    transition: "all ".concat(TRANSITIONS_TIME, "ms cubic-bezier(0, 0, 0.2, 1)"),
    backgroundColor: palette.background.paper
  }), _defineProperty(_ref2, "&.".concat(classes$B.basic), {
    width: "650px"
  }), _defineProperty(_ref2, "&.".concat(classes$B.fullSize), {
    width: "1150px",
    "@media (min-width: 700px) and (max-width: 850px)": {
      width: "700px"
    },
    "@media (min-width: 850px) and (max-width: 1000px)": {
      width: "850px"
    },
    "@media (min-width: 1000px) and (max-width: 1150px)": {
      width: "1000px"
    }
  }), _defineProperty(_ref2, "".concat(LAYOUT_MEDIA_QUERY), (_$concat = {}, _defineProperty(_$concat, "&.".concat(classes$B.basic), {
    maxWidth: "700px",
    width: "100%"
  }), _defineProperty(_$concat, "&.".concat(classes$B.root), {
    paddingRight: spacing(2),
    paddingLeft: 0,
    paddingTop: spacing(1),
    maxWidth: "700px",
    width: "100%"
  }), _$concat)), _ref2;
});
var StyledDiv$f = styled_default("div")(function(_ref3) {
  var _ref3$theme = _ref3.theme, palette = _ref3$theme.palette, spacing = _ref3$theme.spacing;
  return _defineProperty({}, "&.".concat(classes$B.line), {
    backgroundColor: palette.action.disabledBackground,
    height: spacing(4.5),
    width: "1px"
  });
});
var Layout$9 = function Layout6(_ref5) {
  var _classNames;
  var CommandButton3 = _ref5.commandButtonComponent, onCommitButtonClick = _ref5.onCommitButtonClick, onCancelButtonClick = _ref5.onCancelButtonClick, onDeleteButtonClick = _ref5.onDeleteButtonClick, getMessage8 = _ref5.getMessage, children = _ref5.children, className = _ref5.className, fullSize = _ref5.fullSize, readOnly = _ref5.readOnly, disableSaveButton = _ref5.disableSaveButton, hideDeleteButton = _ref5.hideDeleteButton, restProps = _objectWithoutProperties(_ref5, _excluded$O);
  return (0, import_react.createElement)(StyledGrid, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$B.root, true), _defineProperty(_classNames, classes$B.basic, !fullSize), _defineProperty(_classNames, classes$B.fullSize, fullSize), _classNames), className),
    container: true,
    alignItems: "center"
  }, restProps), (0, import_react.createElement)(CommandButton3, {
    onExecute: onCancelButtonClick,
    getMessage: getMessage8,
    id: CANCEL_BUTTON
  }), !readOnly && (0, import_react.createElement)(import_react.Fragment, null, !hideDeleteButton && (0, import_react.createElement)(import_react.Fragment, null, (0, import_react.createElement)(CommandButton3, {
    onExecute: onDeleteButtonClick,
    getMessage: getMessage8,
    id: DELETE_BUTTON
  }), (0, import_react.createElement)(StyledDiv$f, {
    className: classes$B.line
  })), (0, import_react.createElement)(CommandButton3, {
    getMessage: getMessage8,
    disabled: disableSaveButton,
    onExecute: onCommitButtonClick,
    id: SAVE_BUTTON
  })), children);
};
true ? Layout$9.propTypes = {
  commandButtonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  onCommitButtonClick: import_prop_types.default.func.isRequired,
  onCancelButtonClick: import_prop_types.default.func.isRequired,
  onDeleteButtonClick: import_prop_types.default.func.isRequired,
  getMessage: import_prop_types.default.func.isRequired,
  className: import_prop_types.default.string,
  fullSize: import_prop_types.default.bool,
  readOnly: import_prop_types.default.bool,
  children: import_prop_types.default.node,
  disableSaveButton: import_prop_types.default.bool,
  hideDeleteButton: import_prop_types.default.bool
} : void 0;
Layout$9.defaultProps = {
  className: void 0,
  children: void 0,
  fullSize: false,
  readOnly: false,
  disableSaveButton: false,
  hideDeleteButton: false
};
var _excluded$P = ["getMessage", "className", "onExecute"];
var PREFIX$C = "SaveButton";
var classes$C = {
  button: "".concat(PREFIX$C, "-button"),
  textButton: "".concat(PREFIX$C, "-textButton")
};
var StyledButton$1 = styled_default(Button_default)(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, spacing = _ref$theme.spacing, palette = _ref$theme.palette;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$C.button), {
    padding: spacing(0.5, 3.5),
    marginLeft: spacing(3),
    height: spacing(4.5),
    "&:first-of-type": {
      marginLeft: 0
    },
    backgroundColor: ensureColor(300, palette.primary),
    "&:hover": {
      backgroundColor: ensureColor(400, palette.primary)
    }
  }), _defineProperty(_ref2, "&.".concat(classes$C.textButton), {
    color: palette.primary.contrastText
  }), _ref2;
});
var SaveButton = (0, import_react.memo)(function(_ref3) {
  var _classNames;
  var getMessage8 = _ref3.getMessage, className = _ref3.className, onExecute2 = _ref3.onExecute, restProps = _objectWithoutProperties(_ref3, _excluded$P);
  return (0, import_react.createElement)(StyledButton$1, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$C.button, true), _defineProperty(_classNames, classes$C.textButton, !restProps.disabled), _classNames), className),
    onClick: onExecute2
  }, restProps), getMessage8("commitCommand"));
});
SaveButton.propTypes = {
  className: import_prop_types.default.string,
  getMessage: import_prop_types.default.func.isRequired,
  onExecute: import_prop_types.default.func.isRequired
};
SaveButton.defaultProps = {
  className: void 0
};
var _excluded$Q = ["onExecute", "className"];
var PREFIX$D = "DeleteButton";
var classes$D = {
  button: "".concat(PREFIX$D, "-button")
};
var StyledIconButton$2 = styled_default(IconButton_default)(function(_ref) {
  var spacing = _ref.theme.spacing;
  return _defineProperty({}, "&.".concat(classes$D.button), {
    marginRight: spacing(0.5)
  });
});
var DeleteButton = (0, import_react.memo)(function(_ref3) {
  var onExecute2 = _ref3.onExecute, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$Q);
  return (0, import_react.createElement)(StyledIconButton$2, _extends2({
    className: clsx_m_default(classes$D.button, className),
    onClick: onExecute2
  }, restProps, {
    size: "large"
  }), (0, import_react.createElement)(Delete_default, null));
});
DeleteButton.propTypes = {
  className: import_prop_types.default.string,
  onExecute: import_prop_types.default.func.isRequired
};
DeleteButton.defaultProps = {
  className: void 0
};
var _excluded$R = ["onExecute", "className"];
var PREFIX$E = "CancelButton";
var classes$E = {
  button: "".concat(PREFIX$E, "-button")
};
var StyledIconButton$3 = styled_default(IconButton_default)(function() {
  return _defineProperty({}, "&.".concat(classes$E.button), {
    marginRight: "auto"
  });
});
var CancelButton = (0, import_react.memo)(function(_ref2) {
  var onExecute2 = _ref2.onExecute, className = _ref2.className, restProps = _objectWithoutProperties(_ref2, _excluded$R);
  return (0, import_react.createElement)(StyledIconButton$3, _extends2({
    className: clsx_m_default(classes$E.button, className),
    onClick: onExecute2
  }, restProps, {
    size: "large"
  }), (0, import_react.createElement)(Close_default, null));
});
CancelButton.propTypes = {
  className: import_prop_types.default.string,
  onExecute: import_prop_types.default.func.isRequired
};
CancelButton.defaultProps = {
  className: void 0
};
var _excluded$S = ["id", "getMessage", "onExecute"];
var CommandButton$1 = (0, import_react.memo)(function(_ref) {
  var id = _ref.id, getMessage8 = _ref.getMessage, onExecute2 = _ref.onExecute, restProps = _objectWithoutProperties(_ref, _excluded$S);
  switch (id) {
    case SAVE_BUTTON:
      return (0, import_react.createElement)(SaveButton, _extends2({
        getMessage: getMessage8,
        onExecute: onExecute2
      }, restProps));
    case DELETE_BUTTON:
      return (0, import_react.createElement)(DeleteButton, _extends2({
        onExecute: onExecute2
      }, restProps));
    case CANCEL_BUTTON:
      return (0, import_react.createElement)(CancelButton, _extends2({
        onExecute: onExecute2
      }, restProps));
    default:
      return null;
  }
});
true ? CommandButton$1.propTypes = {
  id: import_prop_types.default.string.isRequired,
  onExecute: import_prop_types.default.func.isRequired,
  getMessage: import_prop_types.default.func.isRequired
} : void 0;
var _excluded$T = ["children", "visible", "className", "fullSize", "target", "onHide"];
var PREFIX$F = "Overlay";
var classes$F = {
  root: "".concat(PREFIX$F, "-root"),
  absolutePosition: "".concat(PREFIX$F, "-absolutePosition"),
  paper: "".concat(PREFIX$F, "-paper"),
  fullSize: "".concat(PREFIX$F, "-fullSize"),
  halfSize: "".concat(PREFIX$F, "-halfSize"),
  transition: "".concat(PREFIX$F, "-transition")
};
var StyledDrawer = styled_default(Drawer_default)(function(_ref) {
  var _ref2;
  var spacing = _ref.theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$F.root), {
    overflow: "hidden",
    paddingTop: spacing(2),
    position: "absolute"
  }), _defineProperty(_ref2, "& .".concat(classes$F.absolutePosition), {
    position: "absolute"
  }), _defineProperty(_ref2, "& .".concat(classes$F.paper), {
    outline: "none"
  }), _defineProperty(_ref2, "& .".concat(classes$F.fullSize), _defineProperty({
    height: "100%",
    width: "1150px",
    "@media (min-width: 700px) and (max-width: 850px)": {
      width: "700px"
    },
    "@media (min-width: 850px) and (max-width: 1000px)": {
      width: "850px"
    },
    "@media (min-width: 1000px) and (max-width: 1150px)": {
      width: "1000px"
    }
  }, "".concat(LAYOUT_MEDIA_QUERY), {
    width: "100%",
    maxWidth: "700px"
  })), _defineProperty(_ref2, "& .".concat(classes$F.halfSize), _defineProperty({
    height: "100%",
    width: "650px"
  }, "".concat(LAYOUT_MEDIA_QUERY), {
    width: "100%",
    maxWidth: "700px"
  })), _defineProperty(_ref2, "& .".concat(classes$F.transition), {
    transition: "all ".concat(TRANSITIONS_TIME, "ms cubic-bezier(0, 0, 0.2, 1)!important")
  }), _ref2;
});
var Overlay$1 = function Overlay3(_ref3) {
  var _classNames;
  var children = _ref3.children, visible = _ref3.visible, className = _ref3.className, fullSize = _ref3.fullSize, target = _ref3.target, onHide3 = _ref3.onHide, restProps = _objectWithoutProperties(_ref3, _excluded$T);
  var _React$useState = (0, import_react.useState)(false), _React$useState2 = _slicedToArray(_React$useState, 2), previouslyOpen = _React$useState2[0], setPreviouslyOpen = _React$useState2[1];
  var paperClasses = clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$F.absolutePosition, true), _defineProperty(_classNames, classes$F.paper, true), _defineProperty(_classNames, classes$F.fullSize, fullSize), _defineProperty(_classNames, classes$F.halfSize, !fullSize), _defineProperty(_classNames, classes$F.transition, visible && previouslyOpen), _classNames));
  return (0, import_react.createElement)(StyledDrawer, _extends2({
    className: clsx_m_default(classes$F.root, className),
    PaperProps: {
      className: paperClasses
    },
    BackdropProps: {
      className: classes$F.absolutePosition
    },
    ModalProps: {
      container: target.current
    },
    SlideProps: {
      onEntered: function onEntered() {
        return setPreviouslyOpen(true);
      },
      onExited: function onExited() {
        return setPreviouslyOpen(false);
      }
    },
    open: visible,
    variant: "temporary",
    anchor: "left",
    transitionDuration: TRANSITIONS_TIME,
    onBackdropClick: onHide3
  }, restProps), children);
};
true ? Overlay$1.propTypes = {
  children: import_prop_types.default.node.isRequired,
  fullSize: import_prop_types.default.bool.isRequired,
  onHide: import_prop_types.default.func.isRequired,
  visible: import_prop_types.default.bool,
  className: import_prop_types.default.string,
  target: import_prop_types.default.object
} : void 0;
Overlay$1.defaultProps = {
  className: void 0,
  visible: false,
  target: null
};
var _excluded$U = ["onValueChange", "value", "readOnly", "className", "locale", "excludeTime"];
var DateEditorBase = (0, import_react.memo)(function(_ref) {
  var onValueChange5 = _ref.onValueChange, value = _ref.value, readOnly = _ref.readOnly, className = _ref.className, locale = _ref.locale, excludeTime = _ref.excludeTime, restProps = _objectWithoutProperties(_ref, _excluded$U);
  var memoizedChangeHandler = (0, import_react.useCallback)(function(nextDate) {
    return nextDate && onValueChange5(nextDate.toDate());
  }, [onValueChange5]);
  var dateFormat = excludeTime ? "DD/MM/YYYY" : "DD/MM/YYYY hh:mm A";
  return (0, import_react.createElement)(LocalizationProvider, {
    dateAdapter: AdapterMoment
  }, (0, import_react.createElement)(DateTimePicker, _extends2({
    disabled: readOnly,
    renderInput: function renderInput(props) {
      return (0, import_react.createElement)(TextField_default, _extends2({
        className,
        margin: "normal"
      }, props));
    },
    value,
    onChange: memoizedChangeHandler,
    inputFormat: dateFormat
  }, restProps)));
});
true ? DateEditorBase.propTypes = {
  value: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
  className: import_prop_types.default.string,
  readOnly: import_prop_types.default.bool,
  onValueChange: import_prop_types.default.func.isRequired,
  locale: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]),
  excludeTime: import_prop_types.default.bool
} : void 0;
DateEditorBase.defaultProps = {
  locale: "en-US",
  value: void 0,
  className: void 0,
  readOnly: false,
  excludeTime: false
};
var DateEditor = DateEditorBase;
var _excluded$V = ["text", "className", "type"];
var PREFIX$G = "Label";
var classes$G = {
  label: "".concat(PREFIX$G, "-label"),
  titleLabel: "".concat(PREFIX$G, "-titleLabel")
};
var StyledTypography$2 = styled_default(Typography_default)(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$G.label), {
    overflow: "hidden",
    whiteSpace: "nowrap",
    textOverflow: "ellipsis"
  }), _defineProperty(_ref2, "&.".concat(classes$G.titleLabel), {
    fontWeight: theme.typography.fontWeightBold,
    fontSize: theme.typography.fontSize + 5,
    paddingBottom: theme.spacing(1)
  }), _ref2;
});
var Label$1 = (0, import_react.memo)(function(_ref3) {
  var _classNames;
  var text = _ref3.text, className = _ref3.className, type = _ref3.type, restProps = _objectWithoutProperties(_ref3, _excluded$V);
  return (0, import_react.createElement)(StyledTypography$2, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$G.label, true), _defineProperty(_classNames, classes$G.titleLabel, type === TITLE), _classNames), className)
  }, restProps), text);
});
Label$1.propTypes = {
  text: import_prop_types.default.string,
  className: import_prop_types.default.string,
  type: import_prop_types.default.string
};
Label$1.defaultProps = {
  text: void 0,
  className: void 0,
  type: ORDINARY_LABEL
};
var _excluded$W = ["label", "value", "readOnly", "onValueChange"];
var PREFIX$H = "BooleanEditor";
var classes$H = {
  label: "".concat(PREFIX$H, "-label")
};
var StyledFormControlLabel = styled_default(FormControlLabel_default)(_defineProperty({}, "&.".concat(classes$H.label), {
  overflow: "hidden",
  whiteSpace: "nowrap",
  textOverflow: "ellipsis",
  userSelect: "none"
}));
var BooleanEditor = (0, import_react.memo)(function(_ref) {
  var label = _ref.label, value = _ref.value, readOnly = _ref.readOnly, onValueChange5 = _ref.onValueChange, restProps = _objectWithoutProperties(_ref, _excluded$W);
  return (0, import_react.createElement)(StyledFormControlLabel, _extends2({
    classes: {
      label: classes$H.label
    },
    control: (0, import_react.createElement)(Checkbox_default, {
      color: "primary",
      checked: value,
      onChange: function onChange(_ref2) {
        var target = _ref2.target;
        return onValueChange5(target.checked);
      }
    }),
    disabled: readOnly,
    label
  }, restProps));
});
BooleanEditor.propTypes = {
  label: import_prop_types.default.string,
  readOnly: import_prop_types.default.bool,
  value: import_prop_types.default.bool,
  onValueChange: import_prop_types.default.func.isRequired
};
BooleanEditor.defaultProps = {
  label: void 0,
  readOnly: false,
  value: false
};
var _excluded$X = ["value", "availableOptions", "onValueChange", "readOnly", "className"];
var PREFIX$I = "FilledSelect";
var classes$I = {
  filledSelect: "".concat(PREFIX$I, "-filledSelect"),
  menuItem: "".concat(PREFIX$I, "-menuItem")
};
var StyledTextField$1 = styled_default(TextField_default)(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, typography = _ref$theme.typography, spacing = _ref$theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$I.filledSelect), {
    marginTop: spacing(0.375),
    marginBottom: spacing(0.125)
  }), _defineProperty(_ref2, "& .".concat(classes$I.menuItem), {
    fontSize: typography.fontSize,
    textTransform: "uppercase"
  }), _ref2;
});
var FilledSelect = (0, import_react.memo)(function(_ref3) {
  var value = _ref3.value, availableOptions = _ref3.availableOptions, onValueChange5 = _ref3.onValueChange, readOnly = _ref3.readOnly, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$X);
  var handleChange = function handleChange2(event) {
    if (event.target.value !== value) onValueChange5(event.target.value);
  };
  return (0, import_react.createElement)(StyledTextField$1, _extends2({
    select: true,
    className: clsx_m_default(classes$I.filledSelect, className),
    value,
    onChange: handleChange,
    margin: "normal",
    hiddenLabel: true,
    disabled: readOnly
  }, restProps), availableOptions.map(function(option) {
    return (0, import_react.createElement)(MenuItem_default, {
      value: option.id,
      key: option.id,
      className: classes$I.menuItem
    }, option.text);
  }));
});
true ? FilledSelect.propTypes = {
  onValueChange: import_prop_types.default.func,
  value: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number]).isRequired,
  availableOptions: import_prop_types.default.arrayOf(import_prop_types.default.shape({
    id: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number]),
    text: import_prop_types.default.string.isRequired
  })),
  readOnly: import_prop_types.default.bool,
  className: import_prop_types.default.string
} : void 0;
FilledSelect.defaultProps = {
  readOnly: false,
  onValueChange: function onValueChange3() {
    return void 0;
  },
  availableOptions: [],
  className: void 0
};
var _excluded$Y = ["value", "availableOptions", "onValueChange", "readOnly", "type"];
var Select = (0, import_react.memo)(function(_ref) {
  var value = _ref.value, availableOptions = _ref.availableOptions, onValueChange5 = _ref.onValueChange, readOnly = _ref.readOnly, type = _ref.type, restProps = _objectWithoutProperties(_ref, _excluded$Y);
  var ResultingSelect = type === STANDARD_SELECT ? FilledSelect : OutlinedSelect;
  return (0, import_react.createElement)(ResultingSelect, _extends2({
    value,
    availableOptions,
    onValueChange: onValueChange5,
    readOnly
  }, restProps));
});
true ? Select.propTypes = {
  onValueChange: import_prop_types.default.func.isRequired,
  value: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number]).isRequired,
  availableOptions: import_prop_types.default.arrayOf(import_prop_types.default.shape({
    id: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number]),
    text: import_prop_types.default.string.isRequired
  })),
  readOnly: import_prop_types.default.bool,
  type: import_prop_types.default.string
} : void 0;
Select.defaultProps = {
  readOnly: false,
  availableOptions: [],
  type: STANDARD_SELECT
};
var _excluded$Z = ["className", "labelComponent", "textEditorComponent", "repeatEveryLabel", "repeatIntervalLabel", "readOnly", "interval", "changeRecurrenceInterval"];
var PREFIX$J = "IntervalEditor";
var classes$J = {
  grid: "".concat(PREFIX$J, "-grid"),
  label: "".concat(PREFIX$J, "-label"),
  labelWithMargin: "".concat(PREFIX$J, "-labelWithMargin"),
  textEditor: "".concat(PREFIX$J, "-textEditor")
};
var StyledGrid$1 = styled_default(Grid_default)(function(_ref) {
  var _ref2;
  var spacing = _ref.theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$J.grid), {
    marginTop: spacing(1.75)
  }), _defineProperty(_ref2, "& .".concat(classes$J.label), {
    width: "6.5em"
  }), _defineProperty(_ref2, "& .".concat(classes$J.labelWithMargin), {
    marginLeft: "1em",
    width: "calc((100% - 7.5em) * 4 / 7)"
  }), _defineProperty(_ref2, "& .".concat(classes$J.textEditor), {
    width: "calc((100% - 7.5em) * 3 / 7)",
    maxWidth: "8em"
  }), _ref2;
});
var IntervalEditor = function IntervalEditor2(_ref3) {
  var className = _ref3.className, Label3 = _ref3.labelComponent, TextEditor2 = _ref3.textEditorComponent, repeatEveryLabel = _ref3.repeatEveryLabel, repeatIntervalLabel = _ref3.repeatIntervalLabel, readOnly = _ref3.readOnly, interval = _ref3.interval, changeRecurrenceInterval = _ref3.changeRecurrenceInterval, restProps = _objectWithoutProperties(_ref3, _excluded$Z);
  return (0, import_react.createElement)(StyledGrid$1, _extends2({
    container: true,
    direction: "row",
    justifyContent: "flex-start",
    alignItems: "center",
    className: clsx_m_default(classes$J.grid, className)
  }, restProps), (0, import_react.createElement)(Label3, {
    text: repeatEveryLabel,
    className: classes$J.label
  }), (0, import_react.createElement)(TextEditor2, {
    readOnly,
    value: interval,
    className: classes$J.textEditor,
    type: NUMBER_EDITOR,
    onValueChange: changeRecurrenceInterval
  }), (0, import_react.createElement)(Label3, {
    text: repeatIntervalLabel,
    className: classes$J.labelWithMargin
  }));
};
true ? IntervalEditor.propTypes = {
  className: import_prop_types.default.string,
  repeatEveryLabel: import_prop_types.default.string.isRequired,
  repeatIntervalLabel: import_prop_types.default.string.isRequired,
  readOnly: import_prop_types.default.bool.isRequired,
  interval: import_prop_types.default.number,
  changeRecurrenceInterval: import_prop_types.default.func.isRequired,
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired
} : void 0;
IntervalEditor.defaultProps = {
  className: void 0,
  interval: 1
};
var _excluded$_ = ["weeklyRecurrenceSelectorComponent", "radioGroupComponent", "textEditorComponent", "labelComponent", "getMessage", "readOnly", "onFieldChange", "appointmentData", "selectComponent", "formatDate", "firstDayOfWeek"];
var Daily = function Daily2(_ref) {
  var weeklyRecurrenceSelectorComponent = _ref.weeklyRecurrenceSelectorComponent, radioGroupComponent = _ref.radioGroupComponent, textEditorComponent = _ref.textEditorComponent, labelComponent = _ref.labelComponent, getMessage8 = _ref.getMessage, readOnly = _ref.readOnly, onFieldChange10 = _ref.onFieldChange, appointmentData = _ref.appointmentData, selectComponent = _ref.selectComponent, formatDate3 = _ref.formatDate, firstDayOfWeek = _ref.firstDayOfWeek, restProps = _objectWithoutProperties(_ref, _excluded$_);
  var rRule = appointmentData.rRule;
  var recurrenceOptions = (0, import_react.useMemo)(function() {
    return getRecurrenceOptions(rRule) || {};
  }, [rRule]);
  var changeRecurrenceInterval = (0, import_react.useCallback)(function(interval) {
    return checkIsNaturalNumber(interval) && onFieldChange10({
      rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
        interval
      }))
    });
  }, [recurrenceOptions, onFieldChange10]);
  return (0, import_react.createElement)(IntervalEditor, _extends2({
    repeatEveryLabel: getMessage8("repeatEveryLabel"),
    repeatIntervalLabel: getMessage8("daysLabel"),
    textEditorComponent,
    labelComponent,
    changeRecurrenceInterval,
    interval: recurrenceOptions.interval,
    readOnly
  }, restProps));
};
true ? Daily.propTypes = {
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  radioGroupComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  weeklyRecurrenceSelectorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  onFieldChange: import_prop_types.default.func,
  getMessage: import_prop_types.default.func.isRequired,
  readOnly: import_prop_types.default.bool,
  formatDate: import_prop_types.default.func.isRequired,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
Daily.defaultProps = {
  onFieldChange: function onFieldChange2() {
    return void 0;
  },
  readOnly: false
};
var _excluded$$ = ["radioGroupComponent", "textEditorComponent", "labelComponent", "getMessage", "readOnly", "onFieldChange", "appointmentData", "selectComponent", "weeklyRecurrenceSelectorComponent", "formatDate", "firstDayOfWeek"];
var PREFIX$K = "Weekly";
var classes$K = {
  container: "".concat(PREFIX$K, "-container")
};
var StyledDiv$g = styled_default("div")(function(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "& .".concat(classes$K.container), {
    marginBottom: theme.spacing(2)
  });
});
var Weekly = function Weekly2(_ref3) {
  var radioGroupComponent = _ref3.radioGroupComponent, textEditorComponent = _ref3.textEditorComponent, labelComponent = _ref3.labelComponent, getMessage8 = _ref3.getMessage, readOnly = _ref3.readOnly, onFieldChange10 = _ref3.onFieldChange, appointmentData = _ref3.appointmentData, selectComponent = _ref3.selectComponent, WeeklyRecurrenceSelector2 = _ref3.weeklyRecurrenceSelectorComponent, formatDate3 = _ref3.formatDate, firstDayOfWeek = _ref3.firstDayOfWeek, restProps = _objectWithoutProperties(_ref3, _excluded$$);
  var rRule = appointmentData.rRule;
  var recurrenceOptions = (0, import_react.useMemo)(function() {
    return getRecurrenceOptions(rRule) || {};
  }, [rRule]);
  var changeRecurrenceInterval = (0, import_react.useCallback)(function(interval) {
    return checkIsNaturalNumber(interval) && onFieldChange10({
      rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
        interval
      }))
    });
  }, [recurrenceOptions, onFieldChange10]);
  return (0, import_react.createElement)(StyledDiv$g, restProps, (0, import_react.createElement)(IntervalEditor, _extends2({
    className: classes$K.container,
    repeatEveryLabel: getMessage8("repeatEveryLabel"),
    repeatIntervalLabel: getMessage8("weeksOnLabel"),
    textEditorComponent,
    labelComponent,
    changeRecurrenceInterval,
    interval: recurrenceOptions.interval,
    readOnly
  }, restProps)), (0, import_react.createElement)(WeeklyRecurrenceSelector2, {
    rRule: appointmentData.rRule,
    onValueChange: onFieldChange10,
    readOnly,
    formatDate: formatDate3,
    firstDayOfWeek
  }));
};
true ? Weekly.propTypes = {
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  radioGroupComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  weeklyRecurrenceSelectorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  onFieldChange: import_prop_types.default.func,
  getMessage: import_prop_types.default.func.isRequired,
  readOnly: import_prop_types.default.bool,
  formatDate: import_prop_types.default.func.isRequired,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
Weekly.defaultProps = {
  onFieldChange: function onFieldChange3() {
    return void 0;
  },
  readOnly: false
};
var _excluded$10 = ["radioGroupComponent", "textEditorComponent", "labelComponent", "getMessage", "readOnly", "onFieldChange", "appointmentData", "selectComponent", "weeklyRecurrenceSelectorComponent", "formatDate", "firstDayOfWeek"];
var PREFIX$L = "Monthly";
var classes$L = {
  container: "".concat(PREFIX$L, "-container")
};
var StyledDiv$h = styled_default("div")(function(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes$L.container), {
    marginBottom: theme.spacing(1)
  });
});
var Monthly = function Monthly2(_ref3) {
  var RadioGroup3 = _ref3.radioGroupComponent, textEditorComponent = _ref3.textEditorComponent, labelComponent = _ref3.labelComponent, getMessage8 = _ref3.getMessage, readOnly = _ref3.readOnly, onFieldChange10 = _ref3.onFieldChange, appointmentData = _ref3.appointmentData, selectComponent = _ref3.selectComponent, weeklyRecurrenceSelectorComponent = _ref3.weeklyRecurrenceSelectorComponent, formatDate3 = _ref3.formatDate, firstDayOfWeek = _ref3.firstDayOfWeek, restProps = _objectWithoutProperties(_ref3, _excluded$10);
  var rRule = appointmentData.rRule;
  var recurrenceOptions = (0, import_react.useMemo)(function() {
    return getRecurrenceOptions(rRule) || {};
  }, [rRule]);
  var changeRecurrenceInterval = (0, import_react.useCallback)(function(interval) {
    return checkIsNaturalNumber(interval) && onFieldChange10({
      rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
        interval
      }))
    });
  }, [recurrenceOptions, onFieldChange10]);
  return (0, import_react.createElement)(StyledDiv$h, restProps, (0, import_react.createElement)(IntervalEditor, _extends2({
    className: classes$L.container,
    repeatEveryLabel: getMessage8("repeatEveryLabel"),
    repeatIntervalLabel: getMessage8("monthsLabel"),
    textEditorComponent,
    labelComponent,
    changeRecurrenceInterval,
    interval: recurrenceOptions.interval,
    readOnly
  }, restProps)), (0, import_react.createElement)(RadioGroup3, {
    type: MONTHLY_RADIO_GROUP,
    readOnly,
    getMessage: getMessage8,
    textEditorComponent,
    labelComponent,
    onFieldChange: onFieldChange10,
    appointmentData,
    selectComponent,
    formatDate: formatDate3,
    dateEditorComponent: function dateEditorComponent() {
      return null;
    },
    firstDayOfWeek
  }));
};
true ? Monthly.propTypes = {
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  radioGroupComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  weeklyRecurrenceSelectorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  onFieldChange: import_prop_types.default.func,
  getMessage: import_prop_types.default.func.isRequired,
  readOnly: import_prop_types.default.bool,
  formatDate: import_prop_types.default.func.isRequired,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
Monthly.defaultProps = {
  onFieldChange: function onFieldChange4() {
    return void 0;
  },
  readOnly: false
};
var _excluded$11 = ["radioGroupComponent", "textEditorComponent", "labelComponent", "getMessage", "readOnly", "onFieldChange", "appointmentData", "selectComponent", "weeklyRecurrenceSelectorComponent", "formatDate", "firstDayOfWeek"];
var PREFIX$M = "Yearly";
var classes$M = {
  radioGroup: "".concat(PREFIX$M, "-radioGroup")
};
var StyledDiv$i = styled_default("div")(function(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "& .".concat(classes$M.radioGroup), {
    marginTop: theme.spacing(1)
  });
});
var Yearly = function Yearly2(_ref3) {
  var RadioGroup3 = _ref3.radioGroupComponent, textEditorComponent = _ref3.textEditorComponent, labelComponent = _ref3.labelComponent, getMessage8 = _ref3.getMessage, readOnly = _ref3.readOnly, onFieldChange10 = _ref3.onFieldChange, appointmentData = _ref3.appointmentData, selectComponent = _ref3.selectComponent, weeklyRecurrenceSelectorComponent = _ref3.weeklyRecurrenceSelectorComponent, formatDate3 = _ref3.formatDate, firstDayOfWeek = _ref3.firstDayOfWeek, restProps = _objectWithoutProperties(_ref3, _excluded$11);
  var rRule = appointmentData.rRule;
  var recurrenceOptions = (0, import_react.useMemo)(function() {
    return getRecurrenceOptions(rRule) || {};
  }, [rRule]);
  var changeRecurrenceInterval = (0, import_react.useCallback)(function(interval) {
    return checkIsNaturalNumber(interval) && onFieldChange10({
      rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
        interval
      }))
    });
  }, [recurrenceOptions, onFieldChange10]);
  return (0, import_react.createElement)(StyledDiv$i, restProps, (0, import_react.createElement)(IntervalEditor, _extends2({
    repeatEveryLabel: getMessage8("repeatEveryLabel"),
    repeatIntervalLabel: getMessage8("yearsLabel"),
    textEditorComponent,
    labelComponent,
    changeRecurrenceInterval,
    interval: recurrenceOptions.interval,
    readOnly
  }, restProps)), (0, import_react.createElement)(RadioGroup3, {
    type: YEARLY_RADIO_GROUP,
    readOnly,
    getMessage: getMessage8,
    textEditorComponent,
    labelComponent,
    onFieldChange: onFieldChange10,
    appointmentData,
    selectComponent,
    formatDate: formatDate3,
    className: classes$M.radioGroup,
    dateEditorComponent: function dateEditorComponent() {
      return null;
    },
    firstDayOfWeek
  }));
};
true ? Yearly.propTypes = {
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  radioGroupComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  weeklyRecurrenceSelectorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  onFieldChange: import_prop_types.default.func,
  getMessage: import_prop_types.default.func.isRequired,
  readOnly: import_prop_types.default.bool,
  formatDate: import_prop_types.default.func.isRequired,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
Yearly.defaultProps = {
  onFieldChange: function onFieldChange5() {
    return void 0;
  },
  readOnly: false
};
var _excluded$12 = ["radioGroupComponent", "textEditorComponent", "labelComponent", "dateEditorComponent", "selectComponent", "weeklyRecurrenceSelectorComponent", "children", "className", "getMessage", "readOnly", "onFieldChange", "appointmentData", "formatDate", "locale", "visible", "firstDayOfWeek"];
var PREFIX$N = "Layout";
var classes$N = {
  root: "".concat(PREFIX$N, "-root"),
  visible: "".concat(PREFIX$N, "-visible"),
  invisible: "".concat(PREFIX$N, "-invisible"),
  label: "".concat(PREFIX$N, "-label"),
  repeatLabel: "".concat(PREFIX$N, "-repeatLabel"),
  radioGroup: "".concat(PREFIX$N, "-radioGroup"),
  endRepeatLabel: "".concat(PREFIX$N, "-endRepeatLabel"),
  select: "".concat(PREFIX$N, "-select")
};
var StyledDiv$j = styled_default("div")(function(_ref) {
  var _$concat2, _ref2;
  var spacing = _ref.theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$N.root), _defineProperty({
    padding: 0,
    paddingTop: spacing(3),
    overflow: "hidden",
    width: 0,
    transition: "all ".concat(TRANSITIONS_TIME, "ms cubic-bezier(0, 0, 0.2, 1)"),
    boxSizing: "border-box",
    maxWidth: 0,
    opacity: 0
  }, "".concat(LAYOUT_MEDIA_QUERY), {
    minWidth: "100%",
    maxHeight: 0
  })), _defineProperty(_ref2, "&.".concat(classes$N.visible), (_$concat2 = {
    maxWidth: "500px",
    width: "500px",
    padding: spacing(3),
    paddingRight: spacing(4),
    paddingLeft: spacing(1),
    opacity: 1
  }, _defineProperty(_$concat2, "".concat(LAYOUT_MEDIA_QUERY), {
    width: "100%",
    maxWidth: "700px",
    paddingRight: spacing(2),
    paddingLeft: spacing(2),
    maxHeight: 1e3
  }), _defineProperty(_$concat2, "@media (min-width: 700px) and (max-width: 850px)", {
    width: "300px"
  }), _defineProperty(_$concat2, "@media (min-width: 850px) and (max-width: 1000px)", {
    width: "370px"
  }), _defineProperty(_$concat2, "@media (min-width: 1000px) and (max-width: 1150px)", {
    width: "440px"
  }), _$concat2)), _defineProperty(_ref2, "&.".concat(classes$N.invisible), {
    maxHeight: 0,
    "@media (min-width: 700px)": {
      maxHeight: "500px"
    }
  }), _defineProperty(_ref2, "& .".concat(classes$N.label), {
    width: "8em"
  }), _defineProperty(_ref2, "& .".concat(classes$N.repeatLabel), {
    marginBottom: spacing(0.375)
  }), _defineProperty(_ref2, "& .".concat(classes$N.radioGroup), {
    marginTop: spacing(0.5)
  }), _defineProperty(_ref2, "& .".concat(classes$N.endRepeatLabel), {
    marginTop: spacing(2)
  }), _defineProperty(_ref2, "& .".concat(classes$N.select), {
    height: "3.8em"
  }), _ref2;
});
var getLayoutComponent = function getLayoutComponent2(recurrenceOptions) {
  if (recurrenceOptions) {
    switch (recurrenceOptions.freq) {
      case RRULE_REPEAT_TYPES.DAILY:
        return Daily;
      case RRULE_REPEAT_TYPES.WEEKLY:
        return Weekly;
      case RRULE_REPEAT_TYPES.MONTHLY:
        return Monthly;
      case RRULE_REPEAT_TYPES.YEARLY:
        return Yearly;
    }
  }
  return function() {
    return null;
  };
};
var Layout$a = function Layout7(_ref3) {
  var _classNames;
  var RadioGroup3 = _ref3.radioGroupComponent, textEditorComponent = _ref3.textEditorComponent, Label3 = _ref3.labelComponent, dateEditorComponent = _ref3.dateEditorComponent, Select2 = _ref3.selectComponent, weeklyRecurrenceSelectorComponent = _ref3.weeklyRecurrenceSelectorComponent, children = _ref3.children, className = _ref3.className, getMessage8 = _ref3.getMessage, readOnly = _ref3.readOnly, onFieldChange10 = _ref3.onFieldChange, appointmentData = _ref3.appointmentData, formatDate3 = _ref3.formatDate, locale = _ref3.locale, visible = _ref3.visible, firstDayOfWeek = _ref3.firstDayOfWeek, restProps = _objectWithoutProperties(_ref3, _excluded$12);
  if (!appointmentData.rRule) {
    return null;
  }
  var recurrenceOptions = getRecurrenceOptions(appointmentData.rRule) || {};
  var MainLayoutComponent = getLayoutComponent(recurrenceOptions);
  var frequency = getFrequencyString(recurrenceOptions.freq);
  var rRule = appointmentData.rRule, startDate = appointmentData.startDate;
  var changeFrequency = (0, import_react.useCallback)(function(repeatType) {
    return handleChangeFrequency(repeatType, rRule, startDate, onFieldChange10);
  }, [rRule, startDate, onFieldChange10]);
  var selectOptions = (0, import_react.useMemo)(function() {
    return getAvailableRecurrenceOptions(getMessage8);
  }, [getMessage8]);
  return (0, import_react.createElement)(StyledDiv$j, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$N.root, true), _defineProperty(_classNames, classes$N.visible, visible), _defineProperty(_classNames, classes$N.invisible, !visible), _defineProperty(_classNames, "className", className), _classNames))
  }, restProps), (0, import_react.createElement)(Label3, {
    text: getMessage8("repeatLabel"),
    type: TITLE,
    className: classes$N.repeatLabel
  }), (0, import_react.createElement)(Select2, {
    onValueChange: changeFrequency,
    availableOptions: selectOptions,
    value: frequency,
    type: OUTLINED_SELECT,
    className: classes$N.select,
    readOnly
  }), (0, import_react.createElement)(MainLayoutComponent, {
    textEditorComponent,
    labelComponent: Label3,
    getMessage: getMessage8,
    readOnly,
    radioGroupComponent: RadioGroup3,
    appointmentData,
    onFieldChange: onFieldChange10,
    selectComponent: Select2,
    weeklyRecurrenceSelectorComponent,
    formatDate: formatDate3,
    firstDayOfWeek
  }), (0, import_react.createElement)(Label3, {
    text: getMessage8("endRepeatLabel"),
    className: classes$N.endRepeatLabel
  }), (0, import_react.createElement)(RadioGroup3, {
    className: classes$N.radioGroup,
    type: END_REPEAT_RADIO_GROUP,
    readOnly,
    getMessage: getMessage8,
    textEditorComponent,
    labelComponent: Label3,
    dateEditorComponent,
    appointmentData,
    onFieldChange: onFieldChange10,
    selectComponent: Select2,
    formatDate: formatDate3,
    locale,
    firstDayOfWeek
  }), children);
};
true ? Layout$a.propTypes = {
  locale: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]),
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  radioGroupComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  dateEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  weeklyRecurrenceSelectorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  onFieldChange: import_prop_types.default.func,
  children: import_prop_types.default.node,
  className: import_prop_types.default.string,
  getMessage: import_prop_types.default.func.isRequired,
  readOnly: import_prop_types.default.bool,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  visible: import_prop_types.default.bool.isRequired,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
Layout$a.defaultProps = {
  locale: "en-US",
  onFieldChange: function onFieldChange6() {
    return void 0;
  },
  className: void 0,
  readOnly: false,
  children: null
};
var _excluded$13 = ["getMessage", "labelComponent", "textEditorComponent", "dateEditorComponent", "onFieldChange", "appointmentData", "locale", "readOnly"];
var PREFIX$O = "EndRepeatEditor";
var classes$O = {
  occurenceTextEditor: "".concat(PREFIX$O, "-occurenceTextEditor"),
  occurenceLabel: "".concat(PREFIX$O, "-occurenceLabel"),
  label: "".concat(PREFIX$O, "-label"),
  input: "".concat(PREFIX$O, "-input"),
  radioLabel: "".concat(PREFIX$O, "-radioLabel"),
  dateEditor: "".concat(PREFIX$O, "-dateEditor"),
  formControl: "".concat(PREFIX$O, "-formControl"),
  controlLabel: "".concat(PREFIX$O, "-controlLabel")
};
var StyledRadioGroup = styled_default(RadioGroup_default)(function(_ref) {
  var _ref2;
  var _ref$theme = _ref.theme, spacing = _ref$theme.spacing, typography = _ref$theme.typography;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$O.occurenceTextEditor), {
    width: "calc((100% - 5.5em) * 3 / 7)",
    maxWidth: "8em"
  }), _defineProperty(_ref2, "& .".concat(classes$O.occurenceLabel), {
    marginLeft: "1em",
    width: "calc((100% - 5.5em) * 4 / 7)"
  }), _defineProperty(_ref2, "& .".concat(classes$O.label), {
    width: "4.5em"
  }), _defineProperty(_ref2, "& .".concat(classes$O.input), {
    paddingBottom: spacing(2.75)
  }), _defineProperty(_ref2, "& .".concat(classes$O.radioLabel), {
    fontSize: typography.fontSize + 1
  }), _defineProperty(_ref2, "& .".concat(classes$O.dateEditor), {
    width: "calc(100% - 4.5em)"
  }), _defineProperty(_ref2, "& .".concat(classes$O.formControl), {
    marginRight: 0
  }), _defineProperty(_ref2, "& .".concat(classes$O.controlLabel), {
    width: "100%"
  }), _ref2;
});
var EndRepeatEditor = function EndRepeatEditor2(_ref3) {
  var getMessage8 = _ref3.getMessage, Label3 = _ref3.labelComponent, TextEditor2 = _ref3.textEditorComponent, DateEditor2 = _ref3.dateEditorComponent, onFieldChange10 = _ref3.onFieldChange, appointmentData = _ref3.appointmentData, locale = _ref3.locale, readOnly = _ref3.readOnly, restProps = _objectWithoutProperties(_ref3, _excluded$13);
  var _React$useState = (0, import_react.useState)(1), _React$useState2 = _slicedToArray(_React$useState, 2), count = _React$useState2[0], setCount = _React$useState2[1];
  var _React$useState3 = (0, import_react.useState)(appointmentData.endDate), _React$useState4 = _slicedToArray(_React$useState3, 2), endDate = _React$useState4[0], setEndDate = _React$useState4[1];
  var rRule = appointmentData.rRule;
  var recurrenceOptions = (0, import_react.useMemo)(function() {
    return getRecurrenceOptions(rRule) || {};
  }, [rRule]);
  var changeRecurrenceCount = (0, import_react.useCallback)(function(nextCount) {
    return checkIsNaturalNumber(nextCount) && onFieldChange10({
      rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
        count: nextCount
      }))
    });
  }, [recurrenceOptions, onFieldChange10]);
  var changeRecurrenceEndDate = (0, import_react.useCallback)(function(date) {
    if (isDateValid(date)) {
      onFieldChange10({
        rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
          until: date
        }))
      });
    }
  }, [recurrenceOptions, onFieldChange10]);
  var recurrenceCount = recurrenceOptions.count || count;
  var recurrenceEndDate = recurrenceOptions.until || endDate;
  var value;
  if (recurrenceOptions.count) {
    value = "endAfter";
  } else if (recurrenceOptions.until) {
    value = "endBy";
  } else {
    value = "never";
  }
  var onRadioGroupValueChange = function onRadioGroupValueChange2(event) {
    var change;
    switch (event.target.value) {
      case "endAfter":
        setEndDate(recurrenceOptions.until || endDate);
        change = {
          count,
          until: void 0
        };
        break;
      case "endBy":
        setCount(recurrenceOptions.count || count);
        change = {
          count: void 0,
          until: endDate
        };
        break;
      case "never":
        setEndDate(recurrenceOptions.until || endDate);
        setCount(recurrenceOptions.count || count);
        change = {
          count: void 0,
          until: void 0
        };
        break;
    }
    onFieldChange10({
      rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), change))
    });
  };
  return (0, import_react.createElement)(StyledRadioGroup, _extends2({
    onChange: onRadioGroupValueChange,
    value
  }, restProps), (0, import_react.createElement)(FormControlLabel_default, {
    value: "never",
    control: (0, import_react.createElement)(Radio_default, {
      color: "primary"
    }),
    label: getMessage8("never"),
    classes: {
      label: classes$O.radioLabel
    },
    disabled: readOnly
  }), (0, import_react.createElement)(FormControlLabel_default, {
    className: classes$O.formControl,
    value: "endAfter",
    classes: {
      label: classes$O.controlLabel
    },
    control: (0, import_react.createElement)(Radio_default, {
      color: "primary"
    }),
    disabled: readOnly,
    label: (0, import_react.createElement)(Grid_default, {
      container: true,
      direction: "row",
      justify: "flex-start",
      alignItems: "center"
    }, (0, import_react.createElement)(Label3, {
      className: classes$O.label,
      text: getMessage8("onLabel")
    }), (0, import_react.createElement)(TextEditor2, {
      readOnly: readOnly || value !== "endAfter",
      className: classes$O.occurenceTextEditor,
      value: recurrenceCount,
      type: NUMBER_EDITOR,
      onValueChange: changeRecurrenceCount
    }), (0, import_react.createElement)(Label3, {
      className: classes$O.occurenceLabel,
      text: getMessage8("occurrencesLabel")
    }))
  }), (0, import_react.createElement)(FormControlLabel_default, {
    className: classes$O.formControl,
    classes: {
      label: classes$O.controlLabel
    },
    value: "endBy",
    disabled: readOnly,
    control: (0, import_react.createElement)(Radio_default, {
      color: "primary"
    }),
    label: (0, import_react.createElement)(Grid_default, {
      container: true,
      direction: "row",
      justify: "flex-start",
      alignItems: "center"
    }, (0, import_react.createElement)(Label3, {
      className: classes$O.label,
      text: getMessage8("afterLabel")
    }), (0, import_react.createElement)(DateEditor2, {
      className: classes$O.dateEditor,
      readOnly: readOnly || value !== "endBy",
      value: recurrenceEndDate,
      onValueChange: changeRecurrenceEndDate,
      allowKeyboardControl: false,
      locale,
      excludeTime: appointmentData.allDay
    }))
  }));
};
true ? EndRepeatEditor.propTypes = {
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  dateEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  locale: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]).isRequired,
  getMessage: import_prop_types.default.func,
  onFieldChange: import_prop_types.default.func,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  readOnly: import_prop_types.default.bool
} : void 0;
EndRepeatEditor.defaultProps = {
  onFieldChange: function onFieldChange7() {
    return void 0;
  },
  getMessage: function getMessage() {
    return void 0;
  },
  readOnly: false
};
var _excluded$14 = ["getMessage", "labelComponent", "textEditorComponent", "selectComponent", "readOnly", "appointmentData", "formatDate", "onFieldChange", "firstDayOfWeek"];
var PREFIX$P = "MonthlyEditor";
var classes$P = {
  textEditor: "".concat(PREFIX$P, "-textEditor"),
  input: "".concat(PREFIX$P, "-input"),
  select: "".concat(PREFIX$P, "-select"),
  longSelect: "".concat(PREFIX$P, "-longSelect"),
  label: "".concat(PREFIX$P, "-label"),
  longLabel: "".concat(PREFIX$P, "-longLabel"),
  grid: "".concat(PREFIX$P, "-grid"),
  formControl: "".concat(PREFIX$P, "-formControl"),
  controlLabel: "".concat(PREFIX$P, "-controlLabel")
};
var StyledRadioGroup$1 = styled_default(RadioGroup_default)(function(_ref) {
  var _ref2;
  var spacing = _ref.theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$P.textEditor), {
    width: "calc((100% - 5.5em) * 3 / 7)",
    maxWidth: "12em",
    marginRight: "1em"
  }), _defineProperty(_ref2, "& .".concat(classes$P.input), {
    paddingBottom: spacing(2.75)
  }), _defineProperty(_ref2, "& .".concat(classes$P.select), {
    width: "calc((100% - 5.5em) * 3 / 7)",
    maxWidth: "8em"
  }), _defineProperty(_ref2, "& .".concat(classes$P.longSelect), {
    width: "calc((100% - 5.5em) * 4 / 7)",
    minWidth: "calc(100% - 13.5em)",
    marginLeft: "1em"
  }), _defineProperty(_ref2, "& .".concat(classes$P.label), {
    width: "4.5em"
  }), _defineProperty(_ref2, "& .".concat(classes$P.longLabel), {
    width: "calc((100% - 5.5em) * 4 / 7)",
    minWidth: "calc(100% - 14em)"
  }), _defineProperty(_ref2, "& .".concat(classes$P.grid), {
    marginTop: spacing(1),
    marginBottom: spacing(1)
  }), _defineProperty(_ref2, "& .".concat(classes$P.formControl), {
    marginRight: 0
  }), _defineProperty(_ref2, "& .".concat(classes$P.controlLabel), {
    width: "100%"
  }), _ref2;
});
var MonthlyEditor = function MonthlyEditor2(_ref3) {
  var getMessage8 = _ref3.getMessage, Label3 = _ref3.labelComponent, TextEditor2 = _ref3.textEditorComponent, Select2 = _ref3.selectComponent, readOnly = _ref3.readOnly, appointmentData = _ref3.appointmentData, formatDate3 = _ref3.formatDate, onFieldChange10 = _ref3.onFieldChange, firstDayOfWeek = _ref3.firstDayOfWeek, restProps = _objectWithoutProperties(_ref3, _excluded$14);
  var _useState = (0, import_react.useState)(appointmentData.startDate.getDate()), _useState2 = _slicedToArray(_useState, 2), dayNumber = _useState2[0], setDayNumber = _useState2[1];
  var _useState3 = (0, import_react.useState)(Math.trunc((appointmentData.startDate.getDate() - 1) / 7)), _useState4 = _slicedToArray(_useState3, 2), stateWeekNumber = _useState4[0], setStateWeekNumber = _useState4[1];
  var _useState5 = (0, import_react.useState)(appointmentData.startDate.getDay()), _useState6 = _slicedToArray(_useState5, 2), stateDayOfWeek = _useState6[0], setStateDayOfWeek = _useState6[1];
  var rRule = appointmentData.rRule;
  var recurrenceOptions = import_react.default.useMemo(function() {
    return getRecurrenceOptions(rRule) || {};
  }, [rRule]);
  var changeByMonthDay = import_react.default.useCallback(function(nextByMonthDay) {
    return onFieldChange10({
      rRule: handleStartDateChange(nextByMonthDay, recurrenceOptions)
    });
  }, [recurrenceOptions]);
  var _getRadioGroupDisplay = getRadioGroupDisplayData(recurrenceOptions, stateDayOfWeek, stateWeekNumber, dayNumber, "onDayNumber", "onDayOfWeek"), dayOfWeek = _getRadioGroupDisplay.dayOfWeek, weekNumber = _getRadioGroupDisplay.weekNumber, dayNumberTextField = _getRadioGroupDisplay.dayNumberTextField, value = _getRadioGroupDisplay.radioGroupValue;
  var changeWeekNumber = import_react.default.useCallback(function(nextWeekNumber) {
    return onFieldChange10({
      rRule: handleToDayOfWeekChange(nextWeekNumber, dayOfWeek, recurrenceOptions)
    });
  }, [recurrenceOptions, dayOfWeek]);
  var weekNumbers = import_react.default.useMemo(function() {
    return getWeekNumberLabels(getMessage8);
  }, [getMessage8]);
  var changeDayOfWeek = import_react.default.useCallback(function(nextDayOfWeek) {
    return onFieldChange10({
      rRule: handleToDayOfWeekChange(weekNumber, nextDayOfWeek, recurrenceOptions)
    });
  }, [recurrenceOptions, weekNumber]);
  var daysOfWeek = import_react.default.useMemo(function() {
    return getDaysOfWeek(formatDate3, firstDayOfWeek);
  }, [formatDate3, firstDayOfWeek]);
  var onDayNumberReadOnly = readOnly || value !== "onDayNumber";
  var onDayOfWeekReadOnly = readOnly || value !== "onDayOfWeek";
  var onRadioGroupValueChange = function onRadioGroupValueChange2(event) {
    switch (event.target.value) {
      case "onDayNumber":
        setStateWeekNumber(weekNumber);
        setStateDayOfWeek(dayOfWeek);
        onFieldChange10({
          rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
            bymonthday: dayNumber,
            byweekday: void 0
          }))
        });
        break;
      case "onDayOfWeek":
        setDayNumber(recurrenceOptions.bymonthday || dayNumber);
        onFieldChange10({
          rRule: handleToDayOfWeekChange(stateWeekNumber, stateDayOfWeek, recurrenceOptions)
        });
        break;
    }
  };
  return import_react.default.createElement(StyledRadioGroup$1, _extends2({
    onChange: onRadioGroupValueChange,
    value
  }, restProps), import_react.default.createElement(FormControlLabel_default, {
    className: classes$P.formControl,
    value: "onDayNumber",
    control: import_react.default.createElement(Radio_default, {
      color: "primary"
    }),
    disabled: readOnly,
    label: import_react.default.createElement(Grid_default, {
      container: true,
      direction: "row",
      justify: "flex-start",
      alignItems: "center",
      className: classes$P.grid
    }, import_react.default.createElement(Label3, {
      text: getMessage8("onLabel"),
      className: classes$P.label
    }), import_react.default.createElement(TextEditor2, {
      readOnly: onDayNumberReadOnly,
      value: dayNumberTextField,
      className: classes$P.textEditor,
      type: NUMBER_EDITOR,
      onValueChange: changeByMonthDay
    }), import_react.default.createElement(Label3, {
      text: getMessage8("ofEveryMonthLabel"),
      className: classes$P.longLabel
    }))
  }), import_react.default.createElement(FormControlLabel_default, {
    value: "onDayOfWeek",
    className: classes$P.formControl,
    classes: {
      label: classes$P.controlLabel
    },
    control: import_react.default.createElement(Radio_default, {
      color: "primary"
    }),
    disabled: readOnly,
    label: import_react.default.createElement(Grid_default, {
      container: true,
      direction: "row",
      justify: "flex-start",
      alignItems: "center",
      className: classes$P.grid
    }, import_react.default.createElement(Label3, {
      text: getMessage8("theLabel"),
      className: classes$P.label
    }), import_react.default.createElement(Select2, {
      readOnly: onDayOfWeekReadOnly,
      onValueChange: changeWeekNumber,
      value: weekNumber,
      availableOptions: weekNumbers,
      className: classes$P.select
    }), import_react.default.createElement(Select2, {
      readOnly: onDayOfWeekReadOnly,
      onValueChange: changeDayOfWeek,
      value: dayOfWeek,
      availableOptions: daysOfWeek,
      className: classes$P.longSelect
    }))
  }));
};
true ? MonthlyEditor.propTypes = {
  getMessage: import_prop_types.default.func,
  onFieldChange: import_prop_types.default.func,
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  readOnly: import_prop_types.default.bool,
  formatDate: import_prop_types.default.func.isRequired,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
MonthlyEditor.defaultProps = {
  getMessage: function getMessage2() {
    return void 0;
  },
  onFieldChange: function onFieldChange8() {
    return void 0;
  },
  readOnly: false
};
var _excluded$15 = ["getMessage", "labelComponent", "textEditorComponent", "selectComponent", "readOnly", "readOnlyEditors", "month", "changeMonth", "months", "dayNumber", "changeByMonthDay", "className"];
var PREFIX$Q = "ChangeMonthEditor";
var classes$Q = {
  textEditor: "".concat(PREFIX$Q, "-textEditor"),
  label: "".concat(PREFIX$Q, "-label"),
  select: "".concat(PREFIX$Q, "-select"),
  formControl: "".concat(PREFIX$Q, "-formControl"),
  controlLabel: "".concat(PREFIX$Q, "-controlLabel")
};
var StyledFormControlLabel$1 = styled_default(FormControlLabel_default)(function(_ref) {
  var _ref2;
  var spacing = _ref.theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$Q.formControl), {
    marginRight: 0,
    marginTop: spacing(1),
    marginBottom: spacing(1)
  }), _defineProperty(_ref2, "&.".concat(classes$Q.controlLabel), {
    width: "100%"
  }), _ref2;
});
var ChangeMonthEditor = import_react.default.memo(function(_ref3) {
  var getMessage8 = _ref3.getMessage, Label3 = _ref3.labelComponent, TextEditor2 = _ref3.textEditorComponent, Select2 = _ref3.selectComponent, readOnly = _ref3.readOnly, readOnlyEditors = _ref3.readOnlyEditors, month = _ref3.month, changeMonth = _ref3.changeMonth, months = _ref3.months, dayNumber = _ref3.dayNumber, changeByMonthDay = _ref3.changeByMonthDay, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$15);
  var StyledLabel = styled_default(Label3)(function() {
    return _defineProperty({}, "&.".concat(classes$Q.label), {
      width: "4.5em"
    });
  });
  var StyledSelect2 = styled_default(Select2)(function() {
    return _defineProperty({}, "&.".concat(classes$Q.select), {
      width: "calc((100% - 5.5em) * 3 / 7)",
      maxWidth: "8em"
    });
  });
  var StyledTextEditor = styled_default(TextEditor2)(function() {
    return _defineProperty({}, "&.".concat(classes$Q.textEditor), {
      width: "calc((100% - 5.5em) * 4 / 7)",
      minWidth: "calc(100% - 13.5em)",
      marginLeft: "1em"
    });
  });
  return import_react.default.createElement(StyledFormControlLabel$1, _extends2({
    value: "onDayAndMonth",
    className: clsx_m_default(classes$Q.formControl, className),
    classes: {
      label: classes$Q.controlLabel
    },
    control: import_react.default.createElement(Radio_default, {
      color: "primary"
    }),
    disabled: readOnly
  }, restProps, {
    label: import_react.default.createElement(Grid_default, {
      container: true,
      direction: "row",
      justifyContent: "flex-start",
      alignItems: "center"
    }, import_react.default.createElement(StyledLabel, {
      text: getMessage8("everyLabel"),
      className: classes$Q.label
    }), import_react.default.createElement(StyledSelect2, {
      className: classes$Q.select,
      value: month,
      onValueChange: changeMonth,
      readOnly: readOnlyEditors,
      availableOptions: months
    }), import_react.default.createElement(StyledTextEditor, {
      className: classes$Q.textEditor,
      readOnly: readOnlyEditors,
      value: dayNumber,
      type: NUMBER_EDITOR,
      onValueChange: changeByMonthDay
    }))
  }));
});
true ? ChangeMonthEditor.propTypes = {
  getMessage: import_prop_types.default.func,
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  readOnly: import_prop_types.default.bool,
  month: import_prop_types.default.number.isRequired,
  changeMonth: import_prop_types.default.func.isRequired,
  months: import_prop_types.default.arrayOf(import_prop_types.default.shape({
    id: import_prop_types.default.number.isRequired,
    text: import_prop_types.default.string.isRequired
  })).isRequired,
  dayNumber: import_prop_types.default.number.isRequired,
  changeByMonthDay: import_prop_types.default.func.isRequired,
  className: import_prop_types.default.string,
  readOnlyEditors: import_prop_types.default.bool
} : void 0;
ChangeMonthEditor.defaultProps = {
  getMessage: function getMessage3() {
    return void 0;
  },
  readOnly: false,
  className: void 0,
  readOnlyEditors: false
};
var _excluded$16 = ["getMessage", "labelComponent", "selectComponent", "readOnly", "readOnlyEditors", "className", "weekNumber", "weekNumbers", "changeWeekNumber", "month", "months", "changeMonth", "dayOfWeek", "daysOfWeek", "changeDayOfWeek"];
var PREFIX$R = "ChangeWeekNumberEditor";
var classes$R = {
  label: "".concat(PREFIX$R, "-label"),
  select: "".concat(PREFIX$R, "-select"),
  longSelect: "".concat(PREFIX$R, "-longSelect"),
  formControlLabel: "".concat(PREFIX$R, "-formControlLabel"),
  formControl: "".concat(PREFIX$R, "-formControl"),
  doubleSelect: "".concat(PREFIX$R, "-doubleSelect"),
  radioButton: "".concat(PREFIX$R, "-radioButton"),
  controlLabel: "".concat(PREFIX$R, "-controlLabel")
};
var StyledDiv$k = styled_default("div")(function(_ref) {
  var _ref2;
  var spacing = _ref.theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$R.label), {
    width: "4.5em"
  }), _defineProperty(_ref2, "& .".concat(classes$R.select), {
    width: "calc((100% - 5.5em) * 3 / 7)",
    maxWidth: "8em"
  }), _defineProperty(_ref2, "& .".concat(classes$R.longSelect), {
    width: "calc((100% - 5.5em) * 4 / 7)",
    minWidth: "calc(100% - 13.5em)",
    marginLeft: "1em"
  }), _defineProperty(_ref2, "& .".concat(classes$R.doubleSelect), {
    marginLeft: "4.5em",
    width: "calc(100% - 4.5em)",
    marginTop: spacing(1)
  }), _ref2;
});
var StyledFormControlLabel$2 = styled_default(FormControlLabel_default)(function(_ref3) {
  var _ref4;
  var spacing = _ref3.theme.spacing;
  return _ref4 = {}, _defineProperty(_ref4, "&.".concat(classes$R.formControlLabel), {
    alignItems: "flex-start"
  }), _defineProperty(_ref4, "&.".concat(classes$R.formControl), {
    marginRight: 0,
    marginTop: spacing(1),
    marginBottom: spacing(1)
  }), _defineProperty(_ref4, "&.".concat(classes$R.controlLabel), {
    width: "100%"
  }), _ref4;
});
var StyledRadio = styled_default(Radio_default)(function(_ref5) {
  var spacing = _ref5.theme.spacing;
  return _defineProperty({}, "&.".concat(classes$R.radioButton), {
    marginTop: spacing(0.75)
  });
});
var ChangeWeekNumberEditor = import_react.default.memo(function(_ref7) {
  var getMessage8 = _ref7.getMessage, Label3 = _ref7.labelComponent, Select2 = _ref7.selectComponent, readOnly = _ref7.readOnly, readOnlyEditors = _ref7.readOnlyEditors, className = _ref7.className, weekNumber = _ref7.weekNumber, weekNumbers = _ref7.weekNumbers, changeWeekNumber = _ref7.changeWeekNumber, month = _ref7.month, months = _ref7.months, changeMonth = _ref7.changeMonth, dayOfWeek = _ref7.dayOfWeek, daysOfWeek = _ref7.daysOfWeek, changeDayOfWeek = _ref7.changeDayOfWeek, restProps = _objectWithoutProperties(_ref7, _excluded$16);
  return import_react.default.createElement(StyledFormControlLabel$2, _extends2({
    value: "onDayOfWeek",
    className: clsx_m_default(classes$R.formControlLabel, classes$R.formControl, className),
    classes: {
      label: classes$R.controlLabel
    },
    control: import_react.default.createElement(StyledRadio, {
      color: "primary",
      className: classes$R.radioButton
    }),
    disabled: readOnly
  }, restProps, {
    label: import_react.default.createElement(StyledDiv$k, null, import_react.default.createElement(Grid_default, {
      container: true,
      direction: "row",
      justifyContent: "flex-start",
      alignItems: "center"
    }, import_react.default.createElement(Label3, {
      className: classes$R.label,
      text: getMessage8("theLabel")
    }), import_react.default.createElement(Select2, {
      className: classes$R.select,
      value: weekNumber,
      onValueChange: changeWeekNumber,
      readOnly: readOnlyEditors,
      availableOptions: weekNumbers
    }), import_react.default.createElement(Select2, {
      className: classes$R.longSelect,
      value: dayOfWeek,
      onValueChange: changeDayOfWeek,
      readOnly: readOnlyEditors,
      availableOptions: daysOfWeek
    })), import_react.default.createElement(Select2, {
      className: classes$R.doubleSelect,
      value: month,
      onValueChange: changeMonth,
      readOnly: readOnlyEditors,
      availableOptions: months
    }))
  }));
});
ChangeWeekNumberEditor.propTypes = {
  getMessage: import_prop_types.default.func,
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  readOnly: import_prop_types.default.bool,
  month: import_prop_types.default.number.isRequired,
  changeMonth: import_prop_types.default.func.isRequired,
  months: import_prop_types.default.arrayOf(import_prop_types.default.shape({
    id: import_prop_types.default.number.isRequired,
    text: import_prop_types.default.string.isRequired
  })).isRequired,
  weekNumber: import_prop_types.default.number.isRequired,
  changeWeekNumber: import_prop_types.default.func.isRequired,
  weekNumbers: import_prop_types.default.arrayOf(import_prop_types.default.shape({
    id: import_prop_types.default.number.isRequired,
    text: import_prop_types.default.string.isRequired
  })).isRequired,
  dayOfWeek: import_prop_types.default.number.isRequired,
  changeDayOfWeek: import_prop_types.default.func.isRequired,
  daysOfWeek: import_prop_types.default.arrayOf(import_prop_types.default.shape({
    id: import_prop_types.default.number.isRequired,
    text: import_prop_types.default.string.isRequired
  })).isRequired,
  className: import_prop_types.default.string,
  readOnlyEditors: import_prop_types.default.bool
};
ChangeWeekNumberEditor.defaultProps = {
  getMessage: function getMessage4() {
    return void 0;
  },
  readOnly: false,
  className: void 0,
  readOnlyEditors: false
};
var _excluded$17 = ["getMessage", "labelComponent", "textEditorComponent", "selectComponent", "readOnly", "appointmentData", "formatDate", "onFieldChange", "firstDayOfWeek"];
var getCurrentMonth = function getCurrentMonth2(recurrenceOptions, appointmentData) {
  if (recurrenceOptions.bymonth) {
    return recurrenceOptions.bymonth;
  }
  return appointmentData.startDate.getMonth() + 1;
};
var YearlyEditor = function YearlyEditor2(_ref) {
  var getMessage8 = _ref.getMessage, Label3 = _ref.labelComponent, TextEditor2 = _ref.textEditorComponent, Select2 = _ref.selectComponent, readOnly = _ref.readOnly, appointmentData = _ref.appointmentData, formatDate3 = _ref.formatDate, onFieldChange10 = _ref.onFieldChange, firstDayOfWeek = _ref.firstDayOfWeek, restProps = _objectWithoutProperties(_ref, _excluded$17);
  var _useState = (0, import_react.useState)(appointmentData.startDate.getDate()), _useState2 = _slicedToArray(_useState, 2), dayNumber = _useState2[0], setDayNumber = _useState2[1];
  var _useState3 = (0, import_react.useState)(Math.trunc((appointmentData.startDate.getDate() - 1) / 7)), _useState4 = _slicedToArray(_useState3, 2), stateWeekNumber = _useState4[0], setStateWeekNumber = _useState4[1];
  var _useState5 = (0, import_react.useState)(appointmentData.startDate.getDay()), _useState6 = _slicedToArray(_useState5, 2), stateDayOfWeek = _useState6[0], setStateDayOfWeek = _useState6[1];
  var rRule = appointmentData.rRule;
  var recurrenceOptions = import_react.default.useMemo(function() {
    return getRecurrenceOptions(rRule) || {};
  }, [rRule]);
  var changeByMonthDay = import_react.default.useCallback(function(nextByMonthDay) {
    return onFieldChange10({
      rRule: handleStartDateChange(nextByMonthDay, recurrenceOptions)
    });
  }, [recurrenceOptions]);
  var _getRadioGroupDisplay = getRadioGroupDisplayData(recurrenceOptions, stateDayOfWeek, stateWeekNumber, dayNumber, "onDayAndMonth", "onDayOfWeek"), dayOfWeek = _getRadioGroupDisplay.dayOfWeek, weekNumber = _getRadioGroupDisplay.weekNumber, dayNumberTextField = _getRadioGroupDisplay.dayNumberTextField, value = _getRadioGroupDisplay.radioGroupValue;
  var month = getCurrentMonth(recurrenceOptions, appointmentData);
  var changeMonth = import_react.default.useCallback(function(nextMonth) {
    return onFieldChange10({
      rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
        bymonth: nextMonth
      }))
    });
  }, [recurrenceOptions]);
  var months = import_react.default.useMemo(function() {
    return getMonths(formatDate3);
  }, [formatDate3]);
  var monthsWithOf = import_react.default.useMemo(function() {
    return getMonthsWithOf(getMessage8, formatDate3);
  }, [getMessage8, formatDate3]);
  var changeWeekNumber = import_react.default.useCallback(function(nextWeekNumber) {
    return onFieldChange10({
      rRule: handleToDayOfWeekChange(nextWeekNumber, dayOfWeek, recurrenceOptions)
    });
  }, [recurrenceOptions, dayOfWeek]);
  var weekNumbers = import_react.default.useMemo(function() {
    return getWeekNumberLabels(getMessage8);
  }, [getMessage8]);
  var changeDayOfWeek = import_react.default.useCallback(function(nextDayOfWeek) {
    return onFieldChange10({
      rRule: handleToDayOfWeekChange(weekNumber, nextDayOfWeek, recurrenceOptions)
    });
  }, [recurrenceOptions, weekNumber]);
  var daysOfWeek = import_react.default.useMemo(function() {
    return getDaysOfWeek(formatDate3, firstDayOfWeek);
  }, [formatDate3, firstDayOfWeek]);
  var onDayAndMonthReadOnly = readOnly || value !== "onDayAndMonth";
  var onDayOfWeekReadOnly = readOnly || value !== "onDayOfWeek";
  var onRadioGroupValueChange = function onRadioGroupValueChange2(event) {
    switch (event.target.value) {
      case "onDayAndMonth":
        setStateWeekNumber(weekNumber);
        setStateDayOfWeek(dayOfWeek);
        onFieldChange10({
          rRule: changeRecurrenceOptions(_objectSpread2(_objectSpread2({}, recurrenceOptions), {}, {
            bymonthday: dayNumber,
            byweekday: void 0
          }))
        });
        break;
      case "onDayOfWeek":
        setDayNumber(recurrenceOptions.bymonthday || dayNumber);
        onFieldChange10({
          rRule: handleToDayOfWeekChange(stateWeekNumber, stateDayOfWeek, recurrenceOptions)
        });
        break;
    }
  };
  return import_react.default.createElement(RadioGroup_default, _extends2({
    onChange: onRadioGroupValueChange,
    value
  }, restProps), import_react.default.createElement(ChangeMonthEditor, {
    getMessage: getMessage8,
    labelComponent: Label3,
    textEditorComponent: TextEditor2,
    selectComponent: Select2,
    readOnly,
    readOnlyEditors: onDayAndMonthReadOnly,
    month,
    changeMonth,
    months,
    dayNumber: dayNumberTextField,
    changeByMonthDay
  }), import_react.default.createElement(ChangeWeekNumberEditor, {
    getMessage: getMessage8,
    labelComponent: Label3,
    selectComponent: Select2,
    readOnly,
    readOnlyEditors: onDayOfWeekReadOnly,
    month,
    changeMonth,
    months: monthsWithOf,
    weekNumber,
    weekNumbers,
    changeWeekNumber,
    dayOfWeek,
    daysOfWeek,
    changeDayOfWeek
  }));
};
true ? YearlyEditor.propTypes = {
  getMessage: import_prop_types.default.func,
  onFieldChange: import_prop_types.default.func,
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  readOnly: import_prop_types.default.bool,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
YearlyEditor.defaultProps = {
  onFieldChange: function onFieldChange9() {
    return void 0;
  },
  getMessage: function getMessage5() {
    return void 0;
  },
  readOnly: false
};
var _excluded$18 = ["dateEditorComponent", "textEditorComponent", "selectComponent", "labelComponent", "getMessage", "readOnly", "appointmentData", "formatDate", "onFieldChange", "type", "locale", "firstDayOfWeek"];
var RadioGroup = function RadioGroup2(_ref) {
  var dateEditorComponent = _ref.dateEditorComponent, textEditorComponent = _ref.textEditorComponent, selectComponent = _ref.selectComponent, labelComponent = _ref.labelComponent, getMessage8 = _ref.getMessage, readOnly = _ref.readOnly, appointmentData = _ref.appointmentData, formatDate3 = _ref.formatDate, onFieldChange10 = _ref.onFieldChange, type = _ref.type, locale = _ref.locale, firstDayOfWeek = _ref.firstDayOfWeek, restProps = _objectWithoutProperties(_ref, _excluded$18);
  var commonProps = {
    readOnly,
    getMessage: getMessage8,
    textEditorComponent,
    labelComponent,
    appointmentData,
    onFieldChange: onFieldChange10
  };
  switch (type) {
    case END_REPEAT_RADIO_GROUP:
      return (0, import_react.createElement)(EndRepeatEditor, _extends2({
        dateEditorComponent,
        locale
      }, commonProps, restProps));
    case MONTHLY_RADIO_GROUP:
      return (0, import_react.createElement)(MonthlyEditor, _extends2({
        selectComponent,
        formatDate: formatDate3,
        firstDayOfWeek
      }, commonProps, restProps));
    case YEARLY_RADIO_GROUP:
      return (0, import_react.createElement)(YearlyEditor, _extends2({
        selectComponent,
        formatDate: formatDate3,
        firstDayOfWeek
      }, commonProps, restProps));
    default:
      return function() {
        return null;
      };
  }
};
true ? RadioGroup.propTypes = {
  getMessage: import_prop_types.default.func.isRequired,
  labelComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  textEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  dateEditorComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  selectComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  locale: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]),
  readOnly: import_prop_types.default.bool,
  type: import_prop_types.default.string.isRequired,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  }).isRequired,
  onFieldChange: import_prop_types.default.func.isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
RadioGroup.defaultProps = {
  locale: void 0,
  readOnly: false
};
var _excluded$19 = ["formatDate", "rRule", "readOnly", "className", "onValueChange", "firstDayOfWeek"];
var PREFIX$S = "WeeklyRecurrenceSelector";
var classes$S = {
  selectedButton: "".concat(PREFIX$S, "-selectedButton"),
  button: "".concat(PREFIX$S, "-button"),
  buttonGroup: "".concat(PREFIX$S, "-buttonGroup")
};
var StyledButtonGroup = styled_default(ButtonGroup_default)(function(_ref) {
  var spacing = _ref.theme.spacing;
  return _defineProperty({}, "&.".concat(classes$S.buttonGroup), {
    marginBottom: spacing(2)
  });
});
var StyledButton$2 = styled_default(Button_default)(function(_ref3) {
  var _ref4;
  var _ref3$theme = _ref3.theme, palette = _ref3$theme.palette, spacing = _ref3$theme.spacing;
  return _ref4 = {}, _defineProperty(_ref4, "&.".concat(classes$S.selectedButton), {
    backgroundColor: ensureColor(400, palette.primary),
    "&:hover": {
      backgroundColor: ensureColor(500, palette.primary)
    },
    border: "1px solid ".concat(ensureColor(400, palette.primary), "!important"),
    borderLeft: "1px solid ".concat(ensureColor(50, palette.primary), "!important"),
    "&:first-of-type": {
      borderLeft: "1px solid ".concat(ensureColor(400, palette.primary), "!important")
    },
    color: ensureColor(50, palette.primary)
  }), _defineProperty(_ref4, "&.".concat(classes$S.button), {
    minWidth: spacing(3)
  }), _ref4;
});
var isCurrentWeekDay = function isCurrentWeekDay2(_ref5, currentWeekDay) {
  var byweekday = _ref5.byweekday;
  return byweekday && byweekday.findIndex(function(_ref6) {
    var weekday = _ref6.weekday;
    return weekday === currentWeekDay;
  }) > -1;
};
var WeeklyRecurrenceSelector = import_react.default.memo(function(_ref7) {
  var formatDate3 = _ref7.formatDate, rRule = _ref7.rRule, readOnly = _ref7.readOnly, className = _ref7.className, onValueChange5 = _ref7.onValueChange, firstDayOfWeek = _ref7.firstDayOfWeek, restProps = _objectWithoutProperties(_ref7, _excluded$19);
  var recurrenceOptions = getRecurrenceOptions(rRule);
  var daysOfWeekArray = getDaysOfWeekArray(firstDayOfWeek);
  var daysOfWeekDates = getDaysOfWeekDates(firstDayOfWeek);
  return import_react.default.createElement(StyledButtonGroup, _extends2({
    variant: "outlined",
    size: "small",
    disabled: readOnly,
    className: clsx_m_default(classes$S.buttonGroup, className),
    fullWidth: true
  }, restProps), daysOfWeekArray.map(function(dayOfWeek, index) {
    var _classNames;
    return import_react.default.createElement(StyledButton$2, {
      className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$S.button, true), _defineProperty(_classNames, classes$S.selectedButton, isCurrentWeekDay(recurrenceOptions, dayOfWeek)), _classNames)),
      key: dayOfWeek,
      onClick: function onClick2() {
        return onValueChange5({
          rRule: changeRecurrenceOptions(handleWeekDaysChange(recurrenceOptions, dayOfWeek, onValueChange5))
        });
      }
    }, formatDate3(daysOfWeekDates[index], WEEK_DAY_OPTIONS));
  }));
});
true ? WeeklyRecurrenceSelector.propTypes = {
  formatDate: import_prop_types.default.func.isRequired,
  rRule: import_prop_types.default.string.isRequired,
  onValueChange: import_prop_types.default.func,
  readOnly: import_prop_types.default.bool,
  className: import_prop_types.default.string,
  firstDayOfWeek: import_prop_types.default.number.isRequired
} : void 0;
WeeklyRecurrenceSelector.defaultProps = {
  onValueChange: function onValueChange4() {
    return void 0;
  },
  readOnly: false,
  className: void 0
};
var _excluded$1a = ["children", "className"];
var PREFIX$T = "OverlayContainer";
var classes$T = {
  container: "".concat(PREFIX$T, "-container")
};
var StyledDiv$l = styled_default("div")(_defineProperty({}, "&.".concat(classes$T.container), {
  position: "absolute",
  width: "100%",
  height: "100%"
}));
var OverlayContainer = (0, import_react.forwardRef)(function(_ref, ref) {
  var children = _ref.children, className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded$1a);
  return (0, import_react.createElement)(StyledDiv$l, _extends2({
    ref,
    className: clsx_m_default(classes$T.container, className)
  }, restProps), children);
});
OverlayContainer.propTypes = {
  children: import_prop_types.default.node,
  className: import_prop_types.default.string
};
OverlayContainer.defaultProps = {
  children: null,
  className: void 0
};
var _excluded$1b = ["readOnly", "resource", "appointmentResources", "onResourceChange", "className"];
var PREFIX$U = "ResourceEditor";
var classes$U = {
  select: "".concat(PREFIX$U, "-select"),
  selectBox: "".concat(PREFIX$U, "-selectBox"),
  chips: "".concat(PREFIX$U, "-chips"),
  chip: "".concat(PREFIX$U, "-chip"),
  resourceCircle: "".concat(PREFIX$U, "-resourceCircle"),
  itemContainer: "".concat(PREFIX$U, "-itemContainer"),
  circleContainer: "".concat(PREFIX$U, "-circleContainer")
};
var StyledTextField$2 = styled_default(TextField_default)(function(_ref) {
  var _ref2;
  var spacing = _ref.theme.spacing;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$U.select), {
    padding: spacing(1)
  }), _defineProperty(_ref2, "&.".concat(classes$U.selectBox), {
    minHeight: spacing(6.5),
    width: "100%"
  }), _ref2;
});
var StyledDiv$m = styled_default("div")(function(_ref3) {
  var _ref4;
  var spacing = _ref3.theme.spacing;
  return _ref4 = {}, _defineProperty(_ref4, "&.".concat(classes$U.resourceCircle), {
    height: spacing(2),
    width: spacing(2),
    borderRadius: "50%",
    marginRight: spacing(1)
  }), _defineProperty(_ref4, "&.".concat(classes$U.itemContainer), {
    display: "flex",
    padding: spacing(0.75)
  }), _defineProperty(_ref4, "& .".concat(classes$U.circleContainer), {
    display: "flex",
    alignItems: "center"
  }), _defineProperty(_ref4, "&.".concat(classes$U.chips), {
    display: "flex",
    flexWrap: "wrap"
  }), _defineProperty(_ref4, "& .".concat(classes$U.chip), {
    color: "white",
    margin: 2
  }), _ref4;
});
var getResourceInstance = function getResourceInstance2(resourceInstances, id) {
  return resourceInstances.find(function(item) {
    return item.id === id;
  });
};
var ResourceEditor = (0, import_react.memo)(function(_ref5) {
  var readOnly = _ref5.readOnly, resource = _ref5.resource, appointmentResources = _ref5.appointmentResources, onResourceChange2 = _ref5.onResourceChange, className = _ref5.className, restProps = _objectWithoutProperties(_ref5, _excluded$1b);
  var values = appointmentResources.reduce(function(acc, resourceItem) {
    return resourceItem.fieldName === resource.fieldName ? [].concat(_toConsumableArray(acc), [resourceItem.id]) : acc;
  }, []);
  var _onChange = function onChange(nextValue) {
    onResourceChange2(_defineProperty({}, resource.fieldName, nextValue));
  };
  return (0, import_react.createElement)(StyledTextField$2, _extends2({
    select: true,
    disabled: readOnly,
    variant: "outlined",
    margin: "normal",
    value: values,
    SelectProps: {
      multiple: resource.allowMultiple,
      renderValue: function renderValue() {
        var selected = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        return resource.allowMultiple ? (0, import_react.createElement)(StyledDiv$m, {
          className: classes$U.chips
        }, selected.map(function(value) {
          var resourceItem = getResourceInstance(resource.instances, value);
          return (0, import_react.createElement)(Chip_default, {
            key: value,
            label: resourceItem.text,
            className: classes$U.chip,
            style: {
              backgroundColor: getAppointmentColor(300, resourceItem.color)
            }
          });
        })) : (0, import_react.createElement)(StyledDiv$m, {
          className: classes$U.itemContainer
        }, (0, import_react.createElement)("div", {
          className: classes$U.circleContainer
        }, (0, import_react.createElement)(StyledDiv$m, {
          className: classes$U.resourceCircle,
          style: {
            backgroundColor: getAppointmentColor(400, getResourceInstance(resource.instances, selected[0]).color)
          }
        })), getResourceInstance(resource.instances, selected[0]).text);
      }
    },
    onChange: function onChange(event) {
      return _onChange(event.target.value);
    },
    className: clsx_m_default(classes$U.selectBox, className),
    classes: {
      select: classes$U.select
    }
  }, restProps), resource.instances.map(function(resourceItem) {
    return (0, import_react.createElement)(MenuItem_default, {
      key: resourceItem.id,
      value: resourceItem.id
    }, (0, import_react.createElement)(StyledDiv$m, {
      className: classes$U.resourceCircle,
      style: {
        backgroundColor: getAppointmentColor(400, resourceItem.color)
      }
    }), resourceItem.text);
  }));
});
true ? ResourceEditor.propTypes = {
  readOnly: import_prop_types.default.bool,
  appointmentResources: import_prop_types.default.array,
  onResourceChange: import_prop_types.default.func,
  resource: import_prop_types.default.object,
  className: import_prop_types.default.string
} : void 0;
ResourceEditor.defaultProps = {
  className: void 0,
  readOnly: false,
  appointmentResources: [],
  onResourceChange: function onResourceChange() {
    return void 0;
  },
  resource: {}
};
var AppointmentForm2 = withComponents({
  Overlay: Overlay$1,
  Layout: Layout$7,
  TextEditor,
  BasicLayout: Layout$8,
  CommandLayout: Layout$9,
  CommandButton: CommandButton$1,
  DateEditor,
  Label: Label$1,
  BooleanEditor,
  Select,
  RecurrenceLayout: Layout$a,
  RadioGroup,
  WeeklyRecurrenceSelector,
  Container: OverlayContainer,
  ResourceEditor
})(AppointmentForm);
var _excluded$1c = ["className", "data", "formatDate", "type", "fromPrev", "toNext", "durationType", "isShaded"];
var _excluded2 = ["className", "resources", "isShaded"];
var _excluded3 = ["className"];
var PREFIX$V = "DraftAppointment";
var classes$V = {
  appointment: "".concat(PREFIX$V, "-appointment"),
  shadedAppointment: "".concat(PREFIX$V, "-shadedAppointment")
};
var AppointmentBase = function AppointmentBase2(_ref) {
  var className = _ref.className, data = _ref.data, formatDate3 = _ref.formatDate, type = _ref.type, fromPrev = _ref.fromPrev, toNext = _ref.toNext, durationType = _ref.durationType, isShaded = _ref.isShaded, restProps = _objectWithoutProperties(_ref, _excluded$1c);
  return (0, import_react.createElement)(Appointment, _extends2({
    className,
    type,
    isShaded
  }, restProps), fromPrev && (0, import_react.createElement)(SplitIndicator, {
    position: POSITION_START,
    appointmentType: type
  }), (0, import_react.createElement)(AppointmentContent, {
    data,
    type,
    recurringIconComponent: Repeat_default,
    formatDate: formatDate3,
    durationType
  }), toNext && (0, import_react.createElement)(SplitIndicator, {
    position: POSITION_END,
    appointmentType: type
  }));
};
true ? AppointmentBase.propTypes = {
  data: import_prop_types.default.object.isRequired,
  fromPrev: import_prop_types.default.bool.isRequired,
  toNext: import_prop_types.default.bool.isRequired,
  formatDate: import_prop_types.default.func.isRequired,
  durationType: import_prop_types.default.string,
  className: import_prop_types.default.string,
  type: import_prop_types.default.string,
  isShaded: import_prop_types.default.bool
} : void 0;
AppointmentBase.defaultProps = {
  durationType: void 0,
  className: void 0,
  type: void 0,
  isShaded: false
};
var StyledDraftAppointmentBase = styled_default(AppointmentBase)(function(_ref2) {
  var _ref3;
  var theme = _ref2.theme, resources = _ref2.resources;
  return _ref3 = {}, _defineProperty(_ref3, "&.".concat(classes$V.appointment), {
    boxShadow: theme.shadows[3],
    cursor: "move",
    overflow: "hidden",
    backgroundColor: getAppointmentColor(600, getResourceColor(resources), theme.palette.primary),
    border: 0
  }), _defineProperty(_ref3, "&.".concat(classes$V.shadedAppointment), {
    backgroundColor: getAppointmentColor(400, getResourceColor(resources), theme.palette.primary)
  }), _ref3;
});
var DraftAppointment = function DraftAppointment2(_ref4) {
  var _classNames;
  var className = _ref4.className, resources = _ref4.resources, isShaded = _ref4.isShaded, restProps = _objectWithoutProperties(_ref4, _excluded2);
  return (0, import_react.createElement)(StyledDraftAppointmentBase, _extends2({
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$V.appointment, true), _defineProperty(_classNames, classes$V.shadedAppointment, isShaded), _classNames), className),
    resources
  }, restProps));
};
true ? DraftAppointment.propTypes = {
  resources: import_prop_types.default.array,
  className: import_prop_types.default.string,
  isShaded: import_prop_types.default.bool
} : void 0;
DraftAppointment.defaultProps = {
  className: void 0,
  resources: [],
  isShaded: false
};
var StyledSourceAppointmentBase = styled_default(AppointmentBase)(function() {
  return _defineProperty({}, "&.".concat(classes$V.appointment), {
    opacity: 0.5
  });
});
var SourceAppointment = function SourceAppointment2(_ref6) {
  var className = _ref6.className, restProps = _objectWithoutProperties(_ref6, _excluded3);
  return (0, import_react.createElement)(StyledSourceAppointmentBase, _extends2({
    className: clsx_m_default(classes$V.appointment, className)
  }, restProps));
};
true ? SourceAppointment.propTypes = {
  className: import_prop_types.default.string
} : void 0;
SourceAppointment.defaultProps = {
  className: void 0
};
var Container$2 = styled_default(ContainerBase)(function() {
  return _defineProperty({}, "&.".concat(classes.container), {
    position: "absolute",
    left: 0,
    top: 0,
    height: "100%",
    width: "100%",
    cursor: "move"
  });
});
var _excluded$1d = ["className", "position", "appointmentType", "forwardedRef"];
var PREFIX$W = "Resize";
var classes$W = {
  resize: "".concat(PREFIX$W, "-resize"),
  verticalStart: "".concat(PREFIX$W, "-verticalStart"),
  verticalEnd: "".concat(PREFIX$W, "-verticalEnd"),
  horizontalStart: "".concat(PREFIX$W, "-horizontalStart"),
  horizontalEnd: "".concat(PREFIX$W, "-horizontalEnd")
};
var verticalStyles$1 = function verticalStyles2(spacing) {
  return {
    width: "100%",
    height: spacing(1),
    cursor: "ns-resize"
  };
};
var horizontalStyles$1 = function horizontalStyles2(spacing) {
  return {
    width: spacing(1),
    height: "100%",
    cursor: "ew-resize"
  };
};
var StyledDiv$n = styled_default("div")(function(_ref) {
  var _ref2;
  var spacing = _ref.theme.spacing;
  var vertical = verticalStyles$1(spacing);
  var horizontal = horizontalStyles$1(spacing);
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$W.resize), {
    position: "absolute",
    zIndex: 100
  }), _defineProperty(_ref2, "&.".concat(classes$W.verticalStart), _objectSpread2(_objectSpread2({}, vertical), {}, {
    top: 0
  })), _defineProperty(_ref2, "&.".concat(classes$W.verticalEnd), _objectSpread2(_objectSpread2({}, vertical), {}, {
    bottom: 0
  })), _defineProperty(_ref2, "&.".concat(classes$W.horizontalStart), _objectSpread2(_objectSpread2({}, horizontal), {}, {
    left: 0
  })), _defineProperty(_ref2, "&.".concat(classes$W.horizontalEnd), _objectSpread2(_objectSpread2({}, horizontal), {}, {
    right: 0
  })), _ref2;
});
var Resize = (0, import_react.memo)(function(_ref3) {
  var _classNames;
  var className = _ref3.className, position = _ref3.position, appointmentType = _ref3.appointmentType, forwardedRef = _ref3.forwardedRef, restProps = _objectWithoutProperties(_ref3, _excluded$1d);
  var vertical = appointmentType === VERTICAL_TYPE;
  var start = position === POSITION_START;
  return (0, import_react.createElement)(StyledDiv$n, _extends2({
    ref: forwardedRef,
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$W.resize, true), _defineProperty(_classNames, classes$W.verticalStart, vertical && start), _defineProperty(_classNames, classes$W.verticalEnd, vertical && !start), _defineProperty(_classNames, classes$W.horizontalStart, !vertical && start), _defineProperty(_classNames, classes$W.horizontalEnd, !vertical && !start), _classNames), className)
  }, restProps));
});
true ? Resize.propTypes = {
  position: import_prop_types.default.oneOf([POSITION_START, POSITION_END]).isRequired,
  appointmentType: import_prop_types.default.oneOf([HORIZONTAL_TYPE, VERTICAL_TYPE]).isRequired,
  className: import_prop_types.default.string,
  forwardedRef: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
} : void 0;
Resize.defaultProps = {
  className: void 0,
  forwardedRef: void 0
};
var DragDropProvider2 = withComponents({
  DraftAppointment,
  SourceAppointment,
  Container: Container$2,
  Resize
})(DragDropProvider);
var _excluded$1e = ["setCurrentDate", "getMessage", "className"];
var PREFIX$X = "TodayButton";
var classes$X = {
  button: "".concat(PREFIX$X, "-button")
};
var StyledButton$3 = styled_default(Button_default)(function(_ref) {
  var spacing = _ref.theme.spacing;
  return _defineProperty({}, "&.".concat(classes$X.button), _defineProperty({
    padding: spacing(0.8, 2),
    marginLeft: spacing(0.5),
    "&:first-of-type": {
      marginLeft: 0
    }
  }, "".concat(LAYOUT_MEDIA_QUERY), {
    fontSize: "0.75rem"
  }));
});
var TodayButton2 = function TodayButton3(_ref3) {
  var setCurrentDate = _ref3.setCurrentDate, getMessage8 = _ref3.getMessage, className = _ref3.className, restProps = _objectWithoutProperties(_ref3, _excluded$1e);
  var handleClick = function handleClick2() {
    setCurrentDate(/* @__PURE__ */ new Date());
  };
  return (0, import_react.createElement)(StyledButton$3, _extends2({
    className: clsx_m_default(classes$X.button, className),
    variant: "outlined",
    onClick: handleClick
  }, restProps), getMessage8("today"));
};
true ? TodayButton2.propTypes = {
  setCurrentDate: import_prop_types.default.func.isRequired,
  className: import_prop_types.default.string,
  getMessage: import_prop_types.default.func.isRequired
} : void 0;
TodayButton2.defaultProps = {
  className: void 0
};
var TodayButton$1 = withComponents({
  Button: TodayButton2
})(TodayButton);
var _excluded$1f = ["children", "visible", "onHide", "target", "className"];
var _styled$2;
var PREFIX$Y = "Overlay";
var classes$Y = {
  modal: "".concat(PREFIX$Y, "-modal"),
  paper: "".concat(PREFIX$Y, "-paper"),
  root: "".concat(PREFIX$Y, "-root")
};
var StyledDialog = styled_default(Dialog_default)((_styled$2 = {}, _defineProperty(_styled$2, "& .".concat(classes$Y.modal), {
  position: "absolute!important"
}), _defineProperty(_styled$2, "& .".concat(classes$Y.paper), {
  zIndex: "1302!important"
}), _defineProperty(_styled$2, "&.".concat(classes$Y.root), {
  zIndex: "1301!important"
}), _styled$2));
var Overlay$2 = function Overlay4(_ref) {
  var children = _ref.children, visible = _ref.visible, onHide3 = _ref.onHide, target = _ref.target, className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded$1f);
  return (0, import_react.createElement)(StyledDialog, _extends2({
    open: visible,
    onClose: onHide3,
    className: clsx_m_default(classes$Y.modal, classes$Y.root, className),
    BackdropProps: {
      className: classes$Y.modal
    },
    PaperProps: {
      className: classes$Y.paper
    },
    container: target.current,
    onBackdropClick: onHide3
  }, restProps), children);
};
true ? Overlay$2.propTypes = {
  children: import_prop_types.default.node.isRequired,
  onHide: import_prop_types.default.func.isRequired,
  target: import_prop_types.default.object.isRequired,
  visible: import_prop_types.default.bool,
  className: import_prop_types.default.string
} : void 0;
Overlay$2.defaultProps = {
  className: void 0,
  visible: false
};
var _excluded$1g = ["buttonComponent", "handleClose", "commit", "availableOperations", "getMessage", "isDeleting"];
var PREFIX$Z = "Layout";
var classes$Z = {
  title: "".concat(PREFIX$Z, "-title"),
  content: "".concat(PREFIX$Z, "-content")
};
var StyledDiv$o = styled_default("div")(function(_ref) {
  var _$concat, _ref2;
  var typography = _ref.theme.typography;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$Z.title), typography.h6), _defineProperty(_ref2, "& .".concat(classes$Z.content), {
    fontSize: "1rem"
  }), _defineProperty(_ref2, "".concat(SMALL_LAYOUT_MEDIA_QUERY), (_$concat = {}, _defineProperty(_$concat, "& .".concat(classes$Z.title), {
    fontSize: "1.1rem"
  }), _defineProperty(_$concat, "& .".concat(classes$Z.content), {
    fontSize: "0.9rem"
  }), _$concat)), _ref2;
});
var Layout$b = (0, import_react.memo)(function(_ref3) {
  var Button3 = _ref3.buttonComponent, handleClose2 = _ref3.handleClose, commit2 = _ref3.commit, availableOperations = _ref3.availableOperations, getMessage8 = _ref3.getMessage, isDeleting = _ref3.isDeleting, restProps = _objectWithoutProperties(_ref3, _excluded$1g);
  var _React$useState = (0, import_react.useState)(availableOperations[0].value), _React$useState2 = _slicedToArray(_React$useState, 2), currentValue = _React$useState2[0], setCurrentValue = _React$useState2[1];
  var handleChange = (0, import_react.useCallback)(function(event) {
    setCurrentValue(event.target.value);
  });
  var onCommitButtonClick = function onCommitButtonClick2() {
    commit2(currentValue);
  };
  return (0, import_react.createElement)(StyledDiv$o, restProps, (0, import_react.createElement)(DialogTitle_default, {
    className: classes$Z.title
  }, getMessage8(isDeleting ? "menuDeletingTitle" : "menuEditingTitle")), (0, import_react.createElement)(DialogContent_default, null, (0, import_react.createElement)(RadioGroup_default, {
    value: currentValue,
    onChange: handleChange
  }, availableOperations.map(function(operation) {
    return (0, import_react.createElement)(FormControlLabel_default, {
      value: operation.value,
      control: (0, import_react.createElement)(Radio_default, null),
      label: operation.title,
      key: operation.value,
      classes: {
        label: classes$Z.content
      }
    });
  }))), (0, import_react.createElement)(DialogActions_default, null, (0, import_react.createElement)(Button3, {
    onClick: handleClose2,
    title: getMessage8("cancelButton")
  }), (0, import_react.createElement)(Button3, {
    onClick: onCommitButtonClick,
    title: getMessage8("commitButton"),
    color: "primary"
  })));
});
true ? Layout$b.propTypes = {
  buttonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  availableOperations: import_prop_types.default.array.isRequired,
  handleClose: import_prop_types.default.func,
  commit: import_prop_types.default.func,
  getMessage: import_prop_types.default.func,
  isDeleting: import_prop_types.default.bool
} : void 0;
Layout$b.defaultProps = {
  handleClose: function handleClose() {
    return void 0;
  },
  commit: function commit() {
    return void 0;
  },
  getMessage: function getMessage6() {
    return void 0;
  },
  isDeleting: false
};
var _excluded$1h = ["onClick", "title"];
var Button = function Button2(_ref) {
  var onClick2 = _ref.onClick, title = _ref.title, restProps = _objectWithoutProperties(_ref, _excluded$1h);
  return (0, import_react.createElement)(Button_default, _extends2({
    onClick: onClick2
  }, restProps), title);
};
true ? Button.propTypes = {
  onClick: import_prop_types.default.func.isRequired,
  title: import_prop_types.default.string
} : void 0;
Button.defaultProps = {
  title: ""
};
var EditRecurrenceMenu2 = withComponents({
  Layout: Layout$b,
  Overlay: Overlay$2,
  Button,
  Container: OverlayContainer
})(EditRecurrenceMenu);
var _excluded$1i = ["buttonComponent", "handleCancel", "handleConfirm", "getMessage", "isDeleting", "appointmentData"];
var PREFIX$_ = "Layout";
var classes$_ = {
  title: "".concat(PREFIX$_, "-title")
};
var StyledDialogTitle = styled_default(DialogTitle_default)(function(_ref) {
  var _ref2;
  var typography = _ref.theme.typography;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$_.title), _objectSpread2({}, typography.h6)), _defineProperty(_ref2, "".concat(SMALL_LAYOUT_MEDIA_QUERY), _defineProperty({}, "&.".concat(classes$_.title), {
    fontSize: "1.1rem"
  })), _ref2;
});
var Layout$c = (0, import_react.memo)(function(_ref3) {
  var Button3 = _ref3.buttonComponent, handleCancel2 = _ref3.handleCancel, handleConfirm2 = _ref3.handleConfirm, getMessage8 = _ref3.getMessage, isDeleting = _ref3.isDeleting, appointmentData = _ref3.appointmentData, restProps = _objectWithoutProperties(_ref3, _excluded$1i);
  return (0, import_react.createElement)("div", restProps, (0, import_react.createElement)(StyledDialogTitle, {
    className: classes$_.title
  }, getMessage8(isDeleting ? "confirmDeleteMessage" : "confirmCancelMessage")), (0, import_react.createElement)(DialogActions_default, null, (0, import_react.createElement)(Button3, {
    onClick: handleCancel2,
    title: getMessage8("cancelButton")
  }), (0, import_react.createElement)(Button3, {
    onClick: handleConfirm2,
    title: getMessage8(isDeleting ? "deleteButton" : "discardButton"),
    color: "primary"
  })));
});
Layout$c.propTypes = {
  buttonComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  handleCancel: import_prop_types.default.func,
  handleConfirm: import_prop_types.default.func,
  getMessage: import_prop_types.default.func,
  isDeleting: import_prop_types.default.bool,
  appointmentData: import_prop_types.default.shape({
    title: import_prop_types.default.string,
    startDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    endDate: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.instanceOf(Date)]),
    rRule: import_prop_types.default.string,
    notes: import_prop_types.default.string,
    additionalInformation: import_prop_types.default.string,
    allDay: import_prop_types.default.bool
  })
};
Layout$c.defaultProps = {
  handleCancel: function handleCancel() {
    return void 0;
  },
  handleConfirm: function handleConfirm() {
    return void 0;
  },
  getMessage: function getMessage7() {
    return void 0;
  },
  isDeleting: false,
  appointmentData: {
    startDate: /* @__PURE__ */ new Date(),
    endDate: /* @__PURE__ */ new Date()
  }
};
var ConfirmationDialog2 = withComponents({
  Overlay: Overlay$2,
  Layout: Layout$c,
  Container: OverlayContainer,
  Button
})(ConfirmationDialog);
var _excluded$1j = ["top"];
var PREFIX$$ = "Indicator";
var classes$$ = {
  line: "".concat(PREFIX$$, "-line"),
  circle: "".concat(PREFIX$$, "-circle"),
  nowIndicator: "".concat(PREFIX$$, "-nowIndicator")
};
var StyledDiv$p = styled_default("div", {
  shouldForwardProp: function shouldForwardProp5(prop) {
    return prop !== "topValue";
  }
})(function(_ref) {
  var _ref2;
  var theme = _ref.theme, topValue = _ref.topValue;
  return _ref2 = {}, _defineProperty(_ref2, "& .".concat(classes$$.circle), {
    width: theme.spacing(1.5),
    height: theme.spacing(1.5),
    borderRadius: "50%",
    transform: "translate(-50%, -50%)"
  }), _defineProperty(_ref2, "& .".concat(classes$$.line), {
    height: "2px",
    width: "100%",
    transform: "translate(0, -1px)"
  }), _defineProperty(_ref2, "& .".concat(classes$$.nowIndicator), {
    position: "absolute",
    left: 0,
    top: topValue,
    background: theme.palette.secondary.main,
    zIndex: 1
  }), _ref2;
});
var Indicator = function Indicator2(_ref3) {
  var top = _ref3.top, restProps = _objectWithoutProperties(_ref3, _excluded$1j);
  return (0, import_react.createElement)(StyledDiv$p, _extends2({
    topValue: top
  }, restProps), (0, import_react.createElement)("div", {
    className: clsx_m_default(classes$$.nowIndicator, classes$$.circle)
  }), (0, import_react.createElement)("div", {
    className: clsx_m_default(classes$$.nowIndicator, classes$$.line)
  }));
};
true ? Indicator.propTypes = {
  top: import_prop_types.default.string
} : void 0;
Indicator.defaultProps = {
  top: 0
};
var CurrentTimeIndicator2 = withComponents({
  Indicator
})(CurrentTimeIndicator);
var Resources2 = function Resources3(_ref) {
  var data = _ref.data, mainResourceName = _ref.mainResourceName, palette = _ref.palette;
  return (0, import_react.createElement)(Resources, {
    data,
    mainResourceName,
    palette
  });
};
true ? Resources2.propTypes = {
  data: import_prop_types.default.array,
  mainResourceName: import_prop_types.default.string,
  palette: import_prop_types.default.array
} : void 0;
Resources2.defaultProps = {
  data: [],
  mainResourceName: void 0,
  palette: DEFAULT_PALETTE
};
var _excluded$1k = ["rowComponent", "cellComponent", "groups", "colSpan", "cellStyle", "showHeaderForEveryDate"];
var HorizontalLayout = function HorizontalLayout2(_ref) {
  var Row4 = _ref.rowComponent, Cell7 = _ref.cellComponent, groups = _ref.groups, colSpan = _ref.colSpan, cellStyle = _ref.cellStyle, showHeaderForEveryDate = _ref.showHeaderForEveryDate, restProps = _objectWithoutProperties(_ref, _excluded$1k);
  return (0, import_react.createElement)(import_react.Fragment, null, groups.map(function(groupRow, rowIndex) {
    var cellColSpan = colSpan / groupRow.length;
    return (0, import_react.createElement)(Row4, _extends2({
      key: groups[rowIndex][0].text
    }, restProps), !showHeaderForEveryDate && groupRow.map(function(group, index) {
      return (0, import_react.createElement)(Cell7, {
        group,
        colSpan: cellColSpan,
        key: getCellKey(groups, index, rowIndex),
        left: cellStyle.left,
        endOfGroup: true,
        groupedByDate: false
      });
    }), showHeaderForEveryDate && getRowFromGroups(colSpan, groupRow, cellStyle, groups, rowIndex).map(function(_ref2) {
      var group = _ref2.group, columnSpan = _ref2.colSpan, key = _ref2.key, endOfGroup = _ref2.endOfGroup;
      return (0, import_react.createElement)(Cell7, {
        group,
        colSpan: columnSpan,
        key,
        left: cellStyle.left,
        endOfGroup,
        groupedByDate: true
      });
    }));
  }));
};
true ? HorizontalLayout.propTypes = {
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  groups: import_prop_types.default.arrayOf(import_prop_types.default.arrayOf(import_prop_types.default.object)).isRequired,
  colSpan: import_prop_types.default.number.isRequired,
  cellStyle: import_prop_types.default.object.isRequired,
  showHeaderForEveryDate: import_prop_types.default.bool
} : void 0;
HorizontalLayout.defaultProps = {
  showHeaderForEveryDate: false
};
var _excluded$1l = ["rowComponent", "cellComponent", "groups", "rowSpan", "viewType", "className", "cellTextTopOffset", "alignWithAllDayRow"];
var PREFIX$10 = "VerticalLayout";
var classes$10 = {
  layout: "".concat(PREFIX$10, "-layout")
};
var StyledTable$2 = styled_default(Table_default)(_defineProperty({}, "&.".concat(classes$10.layout), {
  width: "auto",
  "&:only-child": {
    width: "100%"
  }
}));
var allDayCellHeight = BASIC_CELL_HEIGHT[VIEW_TYPES.ALL_DAY_PANEL];
var VerticalLayout = function VerticalLayout2(_ref) {
  var Row4 = _ref.rowComponent, Cell7 = _ref.cellComponent, groups = _ref.groups, rowSpan = _ref.rowSpan, viewType = _ref.viewType, className = _ref.className, cellTextTopOffset = _ref.cellTextTopOffset, alignWithAllDayRow = _ref.alignWithAllDayRow, restProps = _objectWithoutProperties(_ref, _excluded$1l);
  var timeTableCellHeight = BASIC_CELL_HEIGHT[viewType];
  return (0, import_react.createElement)(StyledTable$2, _extends2({
    className: clsx_m_default(classes$10.layout, className)
  }, restProps), (0, import_react.createElement)(TableBody_default, null, getGroupsLastRow(groups).map(function(_, groupIndex) {
    return (0, import_react.createElement)(Row4, {
      key: groupIndex.toString()
    }, getVerticalRowFromGroups(groups, groupIndex, rowSpan, timeTableCellHeight, alignWithAllDayRow, allDayCellHeight).map(function(_ref2) {
      var cellGroup = _ref2.group, cellRowSpan = _ref2.rowSpan, key = _ref2.key, height = _ref2.height;
      return (0, import_react.createElement)(Cell7, {
        group: cellGroup,
        rowSpan: cellRowSpan,
        height,
        left: 0,
        colSpan: 1,
        groupOrientation: VERTICAL_GROUP_ORIENTATION,
        topOffset: cellTextTopOffset,
        key
      });
    }));
  })));
};
true ? VerticalLayout.propTypes = {
  rowComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  cellComponent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]).isRequired,
  alignWithAllDayRow: import_prop_types.default.bool,
  groups: import_prop_types.default.arrayOf(import_prop_types.default.arrayOf(import_prop_types.default.object)).isRequired,
  rowSpan: import_prop_types.default.number.isRequired,
  viewType: import_prop_types.default.string.isRequired,
  cellTextTopOffset: import_prop_types.default.number,
  className: import_prop_types.default.string
} : void 0;
VerticalLayout.defaultProps = {
  cellTextTopOffset: void 0,
  className: void 0,
  alignWithAllDayRow: false
};
var _excluded$1m = ["className", "group", "colSpan", "rowSpan", "left", "endOfGroup", "groupedByDate", "children", "height", "groupOrientation", "textStyle", "topOffset"];
var PREFIX$11 = "Cell";
var classes$11 = {
  cell: "".concat(PREFIX$11, "-cell"),
  text: "".concat(PREFIX$11, "-text"),
  horizontalCell: "".concat(PREFIX$11, "-horizontalCell"),
  content: "".concat(PREFIX$11, "-content"),
  verticalCell: "".concat(PREFIX$11, "-verticalCell"),
  groupedByDate: "".concat(PREFIX$11, "-groupedByDate"),
  verticalCellText: "".concat(PREFIX$11, "-title"),
  textContainer: "".concat(PREFIX$11, "-title")
};
var StyledTableCell$8 = styled_default(TableCell_default, {
  shouldForwardProp: function shouldForwardProp6(prop) {
    return prop !== "endOfGroup" && prop !== "textStyle" && prop !== "topOffset";
  }
})(function(_ref) {
  var _$concat, _ref2;
  var theme = _ref.theme, left = _ref.left, endOfGroup = _ref.endOfGroup, height = _ref.height, rowSpan = _ref.rowSpan, textStyle = _ref.textStyle, topOffset = _ref.topOffset;
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$11.cell), {
    userSelect: "none",
    padding: 0,
    paddingTop: theme.spacing(0.5),
    boxSizing: "border-box",
    borderRight: getBrightBorder(theme),
    "&:last-child": {
      borderRight: "none"
    },
    height: height ? theme.spacing(height) : void 0
  }), _defineProperty(_ref2, "& .".concat(classes$11.text), _objectSpread2(_objectSpread2({}, theme.typography.caption), {}, {
    padding: theme.spacing(1),
    color: theme.palette.text.secondary,
    fontWeight: "bold",
    fontSize: "1rem",
    position: "sticky",
    display: "inline-block",
    left: "".concat(left, "px"),
    lineHeight: 1.5,
    whiteSpace: "pre-wrap",
    overflow: "hidden",
    textOverflow: "ellipsis",
    boxSizing: "border-box"
  }, textStyle)), _defineProperty(_ref2, "&.".concat(classes$11.horizontalCell), {
    borderBottom: "none",
    borderTop: getBrightBorder(theme),
    "tr:first-of-type &": {
      borderTop: "none"
    }
  }), _defineProperty(_ref2, "&.".concat(classes$11.verticalCell), (_$concat = {
    borderBottom: getBrightBorder(theme)
  }, _defineProperty(_$concat, "tr:nth-last-of-type(".concat(rowSpan, ") &"), {
    borderBottom: "none"
  }), _defineProperty(_$concat, "verticalAlign", "top"), _defineProperty(_$concat, "paddingTop", 0), _defineProperty(_$concat, "width", theme.spacing(GROUPING_PANEL_VERTICAL_CELL_WIDTH)), _defineProperty(_$concat, "minWidth", theme.spacing(GROUPING_PANEL_VERTICAL_CELL_WIDTH)), _defineProperty(_$concat, "maxWidth", theme.spacing(GROUPING_PANEL_VERTICAL_CELL_WIDTH)), _defineProperty(_$concat, "maxHeight", height ? theme.spacing(height - 2) : void 0), _$concat)), _defineProperty(_ref2, "&.".concat(classes$11.groupedByDate), {
    borderRight: endOfGroup ? getBrightBorder(theme) : getBorder(theme),
    borderTop: getBorder(theme)
  }), _defineProperty(_ref2, "& .".concat(classes$11.verticalCellText), {
    top: "".concat(topOffset, "px"),
    width: "100%"
  }), _defineProperty(_ref2, "& .".concat(classes$11.textContainer), {
    height: "100%"
  }), _ref2;
});
var Cell$6 = (0, import_react.memo)(function(_ref3) {
  var _classNames, _classNames3;
  var className = _ref3.className, group = _ref3.group, colSpan = _ref3.colSpan, rowSpan = _ref3.rowSpan, left = _ref3.left, endOfGroup = _ref3.endOfGroup, groupedByDate = _ref3.groupedByDate, children = _ref3.children, height = _ref3.height, groupOrientation = _ref3.groupOrientation, textStyle = _ref3.textStyle, topOffset = _ref3.topOffset, restProps = _objectWithoutProperties(_ref3, _excluded$1m);
  var cellHeight = height / DEFAULT_SPACING;
  var isHorizontalGrouping = groupOrientation === HORIZONTAL_GROUP_ORIENTATION;
  var isVerticalGrouping = groupOrientation === VERTICAL_GROUP_ORIENTATION;
  return (0, import_react.createElement)(StyledTableCell$8, _extends2({
    left,
    endOfGroup,
    height: cellHeight,
    textStyle,
    topOffset,
    className: clsx_m_default((_classNames = {}, _defineProperty(_classNames, classes$11.cell, true), _defineProperty(_classNames, classes$11.horizontalCell, isHorizontalGrouping), _defineProperty(_classNames, classes$11.verticalCell, isVerticalGrouping), _defineProperty(_classNames, classes$11.groupedByDate, groupedByDate && !isVerticalGrouping), _classNames), className),
    colSpan,
    rowSpan
  }, restProps), (0, import_react.createElement)("div", {
    className: clsx_m_default(_defineProperty({}, classes$11.textContainer, isVerticalGrouping))
  }, (0, import_react.createElement)("div", {
    className: clsx_m_default((_classNames3 = {}, _defineProperty(_classNames3, classes$11.text, true), _defineProperty(_classNames3, classes$11.verticalCellText, isVerticalGrouping), _classNames3))
  }, group.text, children)));
});
true ? Cell$6.propTypes = {
  className: import_prop_types.default.string,
  group: import_prop_types.default.object.isRequired,
  colSpan: import_prop_types.default.number.isRequired,
  rowSpan: import_prop_types.default.number,
  left: import_prop_types.default.number.isRequired,
  endOfGroup: import_prop_types.default.bool,
  groupedByDate: import_prop_types.default.bool,
  height: import_prop_types.default.number,
  groupOrientation: import_prop_types.default.oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION]),
  textStyle: import_prop_types.default.object,
  topOffset: import_prop_types.default.number,
  children: import_prop_types.default.node
} : void 0;
Cell$6.defaultProps = {
  className: void 0,
  endOfGroup: true,
  rowSpan: 1,
  height: 48,
  groupOrientation: HORIZONTAL_GROUP_ORIENTATION,
  children: null,
  groupedByDate: true,
  textStyle: {},
  topOffset: void 0
};
var GroupingPanel2 = withComponents({
  HorizontalLayout,
  VerticalLayout,
  Cell: Cell$6,
  Row
})(GroupingPanel);
export {
  AllDayPanel2 as AllDayPanel,
  AppointmentForm2 as AppointmentForm,
  AppointmentTooltip2 as AppointmentTooltip,
  Appointments2 as Appointments,
  ConfirmationDialog2 as ConfirmationDialog,
  CurrentTimeIndicator2 as CurrentTimeIndicator,
  DateNavigator2 as DateNavigator,
  DayView2 as DayView,
  DragDropProvider2 as DragDropProvider,
  EditRecurrenceMenu2 as EditRecurrenceMenu,
  GroupingPanel2 as GroupingPanel,
  MonthView2 as MonthView,
  Resources2 as Resources,
  Scheduler2 as Scheduler,
  TodayButton$1 as TodayButton,
  Toolbar$1 as Toolbar,
  ViewSwitcher2 as ViewSwitcher,
  WeekView2 as WeekView
};
//# sourceMappingURL=@devexpress_dx-react-scheduler-material-ui.js.map
